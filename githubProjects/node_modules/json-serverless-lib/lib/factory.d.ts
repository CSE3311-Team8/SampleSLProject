/// <reference types="express-serve-static-core" />
/// <reference types="passport" />
import express from 'express';
import { CoreApp, AppConfig } from './app';
import { StorageAdapter } from './storage';
import { ApiSpecification } from './specifications';
import { CoreServer } from './coreserver/server';
import { Environment } from './environment';
import { AuthStrategy } from './auth/auth.strategy';
export declare class ServerFactory {
    static createServer: (type: string, server: express.Express, appConfig: AppConfig, packageJsonFilePath: string, authStrategy: AuthStrategy) => Promise<CoreServer>;
    static create<C extends CoreServer, A extends CoreApp, E extends Environment, S extends StorageAdapter, AUTH extends AuthStrategy>(coreserver: {
        new (server: express.Express, app: A): C;
    }, app: {
        new (appConfig: AppConfig, server: express.Express, storage: S, specification: ApiSpecification, environment: Environment, authStrategy: AUTH): A;
    }, environment: {
        new (): E;
    }, storage: S, appConfig: AppConfig, server: express.Express, packageJsonFilePath: string, authStrategy: AUTH): C;
}
//# sourceMappingURL=factory.d.ts.map