{"version":3,"file":"index.js","sources":["../src/AccountSASPermissions.ts","../src/AccountSASResourceTypes.ts","../src/AccountSASServices.ts","../src/SasIPRange.ts","../src/utils/constants.ts","../src/utils/utils.common.ts","../src/SASQueryParameters.ts","../src/AccountSASSignatureValues.ts","../src/FileSASPermissions.ts","../src/ShareSASPermissions.ts","../src/FileSASSignatureValues.ts","../src/generated/src/models/mappers.ts","../src/generated/src/models/parameters.ts","../src/generated/src/operations/service.ts","../src/generated/src/operations/share.ts","../src/generated/src/operations/directory.ts","../src/generated/src/operations/file.ts","../src/log.ts","../src/policies/StorageBrowserPolicy.ts","../src/StorageBrowserPolicyFactory.ts","../src/policies/StorageRetryPolicy.ts","../src/StorageRetryPolicyFactory.ts","../src/policies/TelemetryPolicy.ts","../src/TelemetryPolicyFactory.ts","../src/utils/cache.ts","../src/policies/CredentialPolicy.ts","../src/policies/AnonymousCredentialPolicy.ts","../src/credentials/Credential.ts","../src/credentials/AnonymousCredential.ts","../src/Pipeline.ts","../src/policies/StorageSharedKeyCredentialPolicy.ts","../src/credentials/StorageSharedKeyCredential.ts","../src/utils/tracing.ts","../src/generated/src/storageClientContext.ts","../src/StorageClient.ts","../src/FileSystemAttributes.ts","../src/utils/RetriableReadableStream.ts","../src/FileDownloadResponse.ts","../src/Range.ts","../src/models.ts","../src/utils/Batch.ts","../src/utils/BufferScheduler.ts","../src/utils/utils.node.ts","../src/Clients.ts","../src/ShareClientInternal.ts","../src/ShareServiceClient.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant permissions for that operation. Once all the\n * values are set, this should be serialized with toString and set as the permissions field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class AccountSASPermissions {\n  /**\n   * Parse initializes the AccountSASPermissions fields from a string.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): AccountSASPermissions {\n    const accountSASPermissions = new AccountSASPermissions();\n\n    for (const c of permissions) {\n      switch (c) {\n        case \"r\":\n          accountSASPermissions.read = true;\n          break;\n        case \"w\":\n          accountSASPermissions.write = true;\n          break;\n        case \"d\":\n          accountSASPermissions.delete = true;\n          break;\n        case \"l\":\n          accountSASPermissions.list = true;\n          break;\n        case \"a\":\n          accountSASPermissions.add = true;\n          break;\n        case \"c\":\n          accountSASPermissions.create = true;\n          break;\n        case \"u\":\n          accountSASPermissions.update = true;\n          break;\n        case \"p\":\n          accountSASPermissions.process = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission character: ${c}`);\n      }\n    }\n\n    return accountSASPermissions;\n  }\n\n  /**\n   * Permission to read resources and list queues and tables granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Permission to write resources granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Permission to delete blobs and files granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Permission to list blob containers, blobs, shares, directories, and files granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Permission to add messages, table entities, and append to blobs granted.\n   */\n  public add: boolean = false;\n\n  /**\n   * Permission to create blobs and files granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Permissions to update messages and table entities granted.\n   */\n  public update: boolean = false;\n\n  /**\n   * Permission to get and delete messages granted.\n   */\n  public process: boolean = false;\n\n  /**\n   * Produces the SAS permissions string for an Azure Storage account.\n   * Call this method to set AccountSASSignatureValues Permissions field.\n   *\n   * Using this method will guarantee the resource types are in\n   * an order accepted by the service.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    // The order of the characters should be as specified here to ensure correctness:\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n    // Use a string array instead of string concatenating += operator for performance\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    if (this.add) {\n      permissions.push(\"a\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.update) {\n      permissions.push(\"u\");\n    }\n    if (this.process) {\n      permissions.push(\"p\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the resources accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that resource type. Once all the\n * values are set, this should be serialized with toString and set as the resources field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the resources string without this class, but\n * the order of the resources is particular and this class guarantees correctness.\n */\nexport class AccountSASResourceTypes {\n  /**\n   * Creates an {@link AccountSASResourceTypes} from the specified resource types string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid resource type.\n   *\n   * @param resourceTypes -\n   */\n  public static parse(resourceTypes: string): AccountSASResourceTypes {\n    const accountSASResourceTypes = new AccountSASResourceTypes();\n\n    for (const c of resourceTypes) {\n      switch (c) {\n        case \"s\":\n          accountSASResourceTypes.service = true;\n          break;\n        case \"c\":\n          accountSASResourceTypes.container = true;\n          break;\n        case \"o\":\n          accountSASResourceTypes.object = true;\n          break;\n        default:\n          throw new RangeError(`Invalid resource type: ${c}`);\n      }\n    }\n\n    return accountSASResourceTypes;\n  }\n\n  /**\n   * Permission to access service level APIs granted.\n   */\n  public service: boolean = false;\n\n  /**\n   * Permission to access container level APIs (Blob Containers, Tables, Queues, File Shares) granted.\n   */\n  public container: boolean = false;\n\n  /**\n   * Permission to access object level APIs (Blobs, Table Entities, Queue Messages, Files) granted.\n   */\n  public object: boolean = false;\n\n  /**\n   * Converts the given resource types to a string.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n   *\n   */\n  public toString(): string {\n    const resourceTypes: string[] = [];\n    if (this.service) {\n      resourceTypes.push(\"s\");\n    }\n    if (this.container) {\n      resourceTypes.push(\"c\");\n    }\n    if (this.object) {\n      resourceTypes.push(\"o\");\n    }\n    return resourceTypes.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the services accessible by an AccountSAS. Setting a value\n * to true means that any SAS which uses these permissions will grant access to that service. Once all the\n * values are set, this should be serialized with toString and set as the services field on an\n * {@link AccountSASSignatureValues} object. It is possible to construct the services string without this class, but\n * the order of the services is particular and this class guarantees correctness.\n */\nexport class AccountSASServices {\n  /**\n   * Creates an {@link AccountSASServices} from the specified services string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid service.\n   *\n   * @param services -\n   */\n  public static parse(services: string): AccountSASServices {\n    const accountSASServices = new AccountSASServices();\n\n    for (const c of services) {\n      switch (c) {\n        case \"b\":\n          accountSASServices.blob = true;\n          break;\n        case \"f\":\n          accountSASServices.file = true;\n          break;\n        case \"q\":\n          accountSASServices.queue = true;\n          break;\n        case \"t\":\n          accountSASServices.table = true;\n          break;\n        default:\n          throw new RangeError(`Invalid service character: ${c}`);\n      }\n    }\n\n    return accountSASServices;\n  }\n\n  /**\n   * Permission to access blob resources granted.\n   */\n  public blob: boolean = false;\n\n  /**\n   * Permission to access file resources granted.\n   */\n  public file: boolean = false;\n\n  /**\n   * Permission to access queue resources granted.\n   */\n  public queue: boolean = false;\n\n  /**\n   * Permission to access table resources granted.\n   */\n  public table: boolean = false;\n\n  /**\n   * Converts the given services to a string.\n   *\n   */\n  public toString(): string {\n    const services: string[] = [];\n    if (this.blob) {\n      services.push(\"b\");\n    }\n    if (this.table) {\n      services.push(\"t\");\n    }\n    if (this.queue) {\n      services.push(\"q\");\n    }\n    if (this.file) {\n      services.push(\"f\");\n    }\n    return services.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Allowed IP range for a SAS.\n */\nexport interface SasIPRange {\n  /**\n   * Starting IP address in the IP range.\n   * If end IP doesn't provide, start IP will the only IP allowed.\n   */\n  start: string;\n  /**\n   * Optional. IP address that ends the IP range.\n   * If not provided, start IP will the only IP allowed.\n   */\n  end?: string;\n}\n\n/**\n * Generate SasIPRange format string. For example:\n *\n * \"8.8.8.8\" or \"1.1.1.1-255.255.255.255\"\n *\n * @param ipRange - A range of IP addresses.\n * @returns string representation of the IP range.\n */\nexport function ipRangeToString(ipRange: SasIPRange): string {\n  return ipRange.end ? `${ipRange.start}-${ipRange.end}` : ipRange.start;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nexport const SDK_VERSION: string = \"12.9.0\";\nexport const SERVICE_VERSION: string = \"2021-04-10\";\n\nexport const FILE_MAX_SIZE_BYTES: number = 4 * 1024 * 1024 * 1024 * 1024; // 4TB\nexport const FILE_RANGE_MAX_SIZE_BYTES: number = 4 * 1024 * 1024; // 4MB\nexport const DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS: number = 5;\nexport const DEFAULT_HIGH_LEVEL_CONCURRENCY: number = 5;\n\nexport const URLConstants = {\n  Parameters: {\n    FORCE_BROWSER_NO_CACHE: \"_\",\n    SHARE_SNAPSHOT: \"sharesnapshot\",\n    SIGNATURE: \"sig\",\n    TIMEOUT: \"timeout\",\n  },\n};\n\nexport const HttpUrlConnection = {\n  HTTP_CONFLICT: 409,\n  HTTP_NOT_FOUND: 404,\n  HTTP_PRECON_FAILED: 412,\n  HTTP_RANGE_NOT_SATISFIABLE: 416,\n};\n\nexport const HeaderConstants = {\n  AUTHORIZATION: \"authorization\",\n  AUTHORIZATION_SCHEME: \"Bearer\",\n  CONTENT_ENCODING: \"content-encoding\",\n  CONTENT_LANGUAGE: \"content-language\",\n  CONTENT_LENGTH: \"content-length\",\n  CONTENT_MD5: \"content-md5\",\n  CONTENT_TYPE: \"content-type\",\n  COOKIE: \"Cookie\",\n  DATE: \"date\",\n  IF_MATCH: \"if-match\",\n  IF_MODIFIED_SINCE: \"if-modified-since\",\n  IF_NONE_MATCH: \"if-none-match\",\n  IF_UNMODIFIED_SINCE: \"if-unmodified-since\",\n  PREFIX_FOR_STORAGE: \"x-ms-\",\n  RANGE: \"Range\",\n  USER_AGENT: \"User-Agent\",\n  X_MS_CLIENT_REQUEST_ID: \"x-ms-client-request-id\",\n  X_MS_COPY_SOURCE: \"x-ms-copy-source\",\n  X_MS_DATE: \"x-ms-date\",\n};\n\nexport const ETagNone = \"\";\nexport const ETagAny = \"*\";\n\nexport const StorageFileLoggingAllowedHeaderNames = [\n  \"Access-Control-Allow-Origin\",\n  \"Cache-Control\",\n  \"Content-Length\",\n  \"Content-Type\",\n  \"Date\",\n  \"Request-Id\",\n  \"traceparent\",\n  \"Transfer-Encoding\",\n  \"User-Agent\",\n  \"x-ms-client-request-id\",\n  \"x-ms-date\",\n  \"x-ms-error-code\",\n  \"x-ms-request-id\",\n  \"x-ms-return-client-request-id\",\n  \"x-ms-version\",\n  \"Accept-Ranges\",\n  \"Content-Disposition\",\n  \"Content-Encoding\",\n  \"Content-Language\",\n  \"Content-MD5\",\n  \"Content-Range\",\n  \"ETag\",\n  \"Last-Modified\",\n  \"Server\",\n  \"Vary\",\n  \"x-ms-content-crc64\",\n  \"x-ms-copy-action\",\n  \"x-ms-copy-completion-time\",\n  \"x-ms-copy-id\",\n  \"x-ms-copy-progress\",\n  \"x-ms-copy-status\",\n  \"x-ms-has-immutability-policy\",\n  \"x-ms-has-legal-hold\",\n  \"x-ms-lease-state\",\n  \"x-ms-lease-status\",\n  \"x-ms-range\",\n  \"x-ms-request-server-encrypted\",\n  \"x-ms-server-encrypted\",\n  \"x-ms-snapshot\",\n  \"x-ms-source-range\",\n  \"x-ms-cache-control\",\n  \"x-ms-content-disposition\",\n  \"x-ms-content-encoding\",\n  \"x-ms-content-language\",\n  \"x-ms-content-length\",\n  \"x-ms-content-md5\",\n  \"x-ms-content-type\",\n  \"x-ms-file-attributes\",\n  \"x-ms-file-change-time\",\n  \"x-ms-file-creation-time\",\n  \"x-ms-file-id\",\n  \"x-ms-file-last-write-time\",\n  \"x-ms-file-parent-id\",\n  \"x-ms-handle-id\",\n  \"x-ms-number-of-handles-closed\",\n  \"x-ms-recursive\",\n  \"x-ms-share-quota\",\n  \"x-ms-type\",\n  \"x-ms-write\",\n];\n\nexport const StorageFileLoggingAllowedQueryParameters = [\n  \"comp\",\n  \"maxresults\",\n  \"rscc\",\n  \"rscd\",\n  \"rsce\",\n  \"rscl\",\n  \"rsct\",\n  \"se\",\n  \"si\",\n  \"sip\",\n  \"sp\",\n  \"spr\",\n  \"sr\",\n  \"srt\",\n  \"ss\",\n  \"st\",\n  \"sv\",\n  \"copyid\",\n  \"restype\",\n];\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport { HttpHeaders, isNode, URLBuilder } from \"@azure/core-http\";\nimport { HttpAuthorization } from \"../models\";\nimport { HeaderConstants, URLConstants } from \"./constants\";\n\n/**\n * Reserved URL characters must be properly escaped for Storage services like Blob or File.\n *\n * ## URL encode and escape strategy for JS SDKs\n *\n * When customers pass a URL string into XXXClient classes constructor, the URL string may already be URL encoded or not.\n * But before sending to Azure Storage server, the URL must be encoded. However, it's hard for a SDK to guess whether the URL\n * string has been encoded or not. We have 2 potential strategies, and chose strategy two for the XXXClient constructors.\n *\n * ### Strategy One: Assume the customer URL string is not encoded, and always encode URL string in SDK.\n *\n * This is what legacy V2 SDK does, simple and works for most of the cases.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   SDK will encode it to \"http://account.blob.core.windows.net/con/b%253A\" and send to server. A blob named \"b%3A\" will be created.\n *\n * But this strategy will make it not possible to create a blob with \"?\" in it's name. Because when customer URL string is\n * \"http://account.blob.core.windows.net/con/blob?name\", the \"?name\" will be treated as URL paramter instead of blob name.\n * If customer URL string is \"http://account.blob.core.windows.net/con/blob%3Fname\", a blob named \"blob%3Fname\" will be created.\n * V2 SDK doesn't have this issue because it doesn't allow customer pass in a full URL, it accepts a separate blob name and encodeURIComponent for it.\n * We cannot accept a SDK cannot create a blob name with \"?\". So we implement strategy two:\n *\n * ### Strategy Two: SDK doesn't assume the URL has been encoded or not. It will just escape the special characters.\n *\n * This is what V10 Blob Go SDK does. It accepts a URL type in Go, and call url.EscapedPath() to escape the special chars unescaped.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b:\",\n *   SDK will escape \":\" like \"http://account.blob.core.windows.net/con/b%3A\" and send to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%3A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%3A\" to server. A blob named \"b:\" will be created.\n * - When customer URL string is \"http://account.blob.core.windows.net/con/b%253A\",\n *   There is no special characters, so send \"http://account.blob.core.windows.net/con/b%253A\" to server. A blob named \"b%3A\" will be created.\n *\n * This strategy gives us flexibility to create with any special characters. But \"%\" will be treated as a special characters, if the URL string\n * is not encoded, there shouldn't a \"%\" in the URL string, otherwise the URL is not a valid URL.\n * If customer needs to create a blob with \"%\" in it's blob name, use \"%25\" insead of \"%\". Just like above 3rd sample.\n * And following URL strings are invalid:\n * - \"http://account.blob.core.windows.net/con/b%\"\n * - \"http://account.blob.core.windows.net/con/b%2\"\n * - \"http://account.blob.core.windows.net/con/b%G\"\n *\n * Another special character is \"?\", use \"%2F\" to represent a blob name with \"?\" in a URL string.\n *\n * ### Strategy for containerName, blobName or other specific XXXName parameters in methods such as `ContainerClient.getBlobClient(blobName)`\n *\n * We will apply strategy one, and call encodeURIComponent for these parameters like blobName. Because what customers passes in is a plain name instead of a URL.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-containers--blobs--and-metadata\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/naming-and-referencing-shares--directories--files--and-metadata\n *\n * @param url -\n */\nexport function escapeURLPath(url: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path || \"/\";\n\n  path = escape(path);\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\nexport interface ConnectionString {\n  kind: \"AccountConnString\" | \"SASConnString\";\n  url: string;\n  accountName: string;\n  accountKey?: any;\n  accountSas?: string;\n}\n\nfunction getValueInConnString(\n  connectionString: string,\n  argument:\n    | \"FileEndpoint\"\n    | \"AccountName\"\n    | \"AccountKey\"\n    | \"DefaultEndpointsProtocol\"\n    | \"EndpointSuffix\"\n    | \"SharedAccessSignature\"\n) {\n  const elements = connectionString.split(\";\");\n  for (const element of elements) {\n    if (element.trim().startsWith(argument)) {\n      return element.trim().match(argument + \"=(.*)\")![1];\n    }\n  }\n  return \"\";\n}\n\n/**\n * Extracts the parts of an Azure Storage account connection string.\n *\n * @param connectionString - Connection string.\n * @returns String key value pairs of the storage account's url and credentials.\n */\nexport function extractConnectionStringParts(connectionString: string): ConnectionString {\n  // Matching FileEndpoint in the Account connection string\n  let fileEndpoint = getValueInConnString(connectionString, \"FileEndpoint\");\n  // Slicing off '/' at the end if exists\n  // (The methods that use `extractConnectionStringParts` expect the url to not have `/` at the end)\n  fileEndpoint = fileEndpoint.endsWith(\"/\") ? fileEndpoint.slice(0, -1) : fileEndpoint;\n\n  if (\n    connectionString.search(\"DefaultEndpointsProtocol=\") !== -1 &&\n    connectionString.search(\"AccountKey=\") !== -1\n  ) {\n    // Account connection string\n\n    let defaultEndpointsProtocol = \"\";\n    let accountName = \"\";\n    let accountKey = Buffer.from(\"accountKey\", \"base64\");\n    let endpointSuffix = \"\";\n\n    // Get account name and key\n    accountName = getValueInConnString(connectionString, \"AccountName\");\n    accountKey = Buffer.from(getValueInConnString(connectionString, \"AccountKey\"), \"base64\");\n\n    if (!fileEndpoint) {\n      // FileEndpoint is not present in the Account connection string\n      // Can be obtained from `${defaultEndpointsProtocol}://${accountName}.file.${endpointSuffix}`\n\n      defaultEndpointsProtocol = getValueInConnString(connectionString, \"DefaultEndpointsProtocol\");\n      const protocol = defaultEndpointsProtocol!.toLowerCase();\n      if (protocol !== \"https\" && protocol !== \"http\") {\n        throw new Error(\n          \"Invalid DefaultEndpointsProtocol in the provided Connection String. Expecting 'https' or 'http'\"\n        );\n      }\n\n      endpointSuffix = getValueInConnString(connectionString, \"EndpointSuffix\");\n      if (!endpointSuffix) {\n        throw new Error(\"Invalid EndpointSuffix in the provided Connection String\");\n      }\n      fileEndpoint = `${defaultEndpointsProtocol}://${accountName}.file.${endpointSuffix}`;\n    }\n\n    if (!accountName) {\n      throw new Error(\"Invalid AccountName in the provided Connection String\");\n    } else if (accountKey.length === 0) {\n      throw new Error(\"Invalid AccountKey in the provided Connection String\");\n    }\n\n    return {\n      kind: \"AccountConnString\",\n      url: fileEndpoint,\n      accountName,\n      accountKey,\n    };\n  } else {\n    // SAS connection string\n    const accountSas = getValueInConnString(connectionString, \"SharedAccessSignature\");\n    const accountName = getAccountNameFromUrl(fileEndpoint);\n    if (!fileEndpoint) {\n      throw new Error(\"Invalid FileEndpoint in the provided SAS Connection String\");\n    } else if (!accountSas) {\n      throw new Error(\"Invalid SharedAccessSignature in the provided SAS Connection String\");\n    }\n\n    return { kind: \"SASConnString\", url: fileEndpoint, accountName, accountSas };\n  }\n}\n\n/**\n * Internal escape method implemented Strategy Two mentioned in escapeURL() description.\n *\n * @param text -\n */\nfunction escape(text: string): string {\n  return encodeURIComponent(text)\n    .replace(/%2F/g, \"/\") // Don't escape for \"/\"\n    .replace(/'/g, \"%27\") // Escape for \"'\"\n    .replace(/\\+/g, \"%20\")\n    .replace(/%25/g, \"%\"); // Revert encoded \"%\"\n}\n\n/**\n * Append a string to URL path. Will remove duplicated \"/\" in front of the string\n * when URL path ends with a \"/\".\n *\n * @param url - Source URL string\n * @param name - String to be appended to URL\n * @returns An updated URL string\n */\nexport function appendToURLPath(url: string, name: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let path = urlParsed.getPath();\n  path = path ? (path.endsWith(\"/\") ? `${path}${name}` : `${path}/${name}`) : name;\n  urlParsed.setPath(path);\n\n  return urlParsed.toString();\n}\n\n/**\n * Append a string to URL query.\n *\n * @param url - Source URL string.\n * @param queryParts - String to be appended to the URL query.\n * @returns An updated URL string.\n */\nexport function appendToURLQuery(url: string, queryParts: string): string {\n  const urlParsed = URLBuilder.parse(url);\n\n  let query = urlParsed.getQuery();\n  if (query) {\n    query += \"&\" + queryParts;\n  } else {\n    query = queryParts;\n  }\n\n  urlParsed.setQuery(query);\n  return urlParsed.toString();\n}\n\n/**\n * Set URL parameter name and value. If name exists in URL parameters, old value\n * will be replaced by name key. If not provide value, the parameter will be deleted.\n *\n * @param url - Source URL string\n * @param name - Parameter name\n * @param value - Parameter value\n * @returns An updated URL string\n */\nexport function setURLParameter(url: string, name: string, value?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setQueryParameter(name, value);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL parameter by name.\n *\n * @param url -\n * @param name -\n */\nexport function getURLParameter(url: string, name: string): string | string[] | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getQueryParameterValue(name);\n}\n\n/**\n * Set URL host.\n *\n * @param url - Source URL string\n * @param host - New host string\n * @returns An updated URL string\n */\nexport function setURLHost(url: string, host: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setHost(host);\n  return urlParsed.toString();\n}\n\n/**\n * Get URL path from an URL string.\n *\n * @param url - Source URL string\n */\nexport function getURLPath(url: string): string | undefined {\n  const urlParsed = URLBuilder.parse(url);\n  return urlParsed.getPath();\n}\n\n/**\n * Get URL query key value pairs from an URL string.\n *\n * @param url -\n */\nexport function getURLQueries(url: string): { [key: string]: string } {\n  let queryString = URLBuilder.parse(url).getQuery();\n  if (!queryString) {\n    return {};\n  }\n\n  queryString = queryString.trim();\n  queryString = queryString.startsWith(\"?\") ? queryString.substr(1) : queryString;\n\n  let querySubStrings: string[] = queryString.split(\"&\");\n  querySubStrings = querySubStrings.filter((value: string) => {\n    const indexOfEqual = value.indexOf(\"=\");\n    const lastIndexOfEqual = value.lastIndexOf(\"=\");\n    return indexOfEqual > 0 && indexOfEqual === lastIndexOfEqual;\n  });\n\n  const queries: { [key: string]: string } = {};\n  for (const querySubString of querySubStrings) {\n    const splitResults = querySubString.split(\"=\");\n    const key: string = splitResults[0];\n    const value: string = splitResults[1];\n    queries[key] = value;\n  }\n\n  return queries;\n}\n\n/**\n * Rounds a date off to seconds.\n *\n * @param date -\n * @param withMilliseconds - If true, YYYY-MM-DDThh:mm:ss.fffffffZ will be returned;\n *                                          If false, YYYY-MM-DDThh:mm:ssZ will be returned.\n * @returns Date string in ISO8061 format, with or without 7 milliseconds component\n */\nexport function truncatedISO8061Date(date: Date, withMilliseconds: boolean = true): string {\n  // Date.toISOString() will return like \"2018-10-29T06:34:36.139Z\"\n  const dateString = date.toISOString();\n\n  return withMilliseconds\n    ? dateString.substring(0, dateString.length - 1) + \"0000\" + \"Z\"\n    : dateString.substring(0, dateString.length - 5) + \"Z\";\n}\n\n/**\n * Base64 encode.\n *\n * @param content -\n */\nexport function base64encode(content: string): string {\n  return !isNode ? btoa(content) : Buffer.from(content).toString(\"base64\");\n}\n\n/**\n * Base64 decode.\n *\n * @param encodedString -\n */\nexport function base64decode(encodedString: string): string {\n  return !isNode ? atob(encodedString) : Buffer.from(encodedString, \"base64\").toString();\n}\n\n/**\n * Delay specified time interval.\n *\n * @param timeInMs -\n * @param aborter -\n * @param abortError -\n */\nexport async function delay(\n  timeInMs: number,\n  aborter?: AbortSignalLike,\n  abortError?: Error\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    /* eslint-disable-next-line prefer-const */\n    let timeout: any;\n\n    const abortHandler = () => {\n      if (timeout !== undefined) {\n        clearTimeout(timeout);\n      }\n      reject(abortError);\n    };\n\n    const resolveHandler = () => {\n      if (aborter !== undefined) {\n        aborter.removeEventListener(\"abort\", abortHandler);\n      }\n      resolve();\n    };\n\n    /* eslint-disable-next-line prefer-const */\n    timeout = setTimeout(resolveHandler, timeInMs);\n    if (aborter !== undefined) {\n      aborter.addEventListener(\"abort\", abortHandler);\n    }\n  });\n}\n\nexport function sanitizeURL(url: string): string {\n  let safeURL: string = url;\n  if (getURLParameter(safeURL, URLConstants.Parameters.SIGNATURE)) {\n    safeURL = setURLParameter(safeURL, URLConstants.Parameters.SIGNATURE, \"*****\");\n  }\n\n  return safeURL;\n}\n\nexport function sanitizeHeaders(originalHeader: HttpHeaders): HttpHeaders {\n  const headers: HttpHeaders = new HttpHeaders();\n  for (const header of originalHeader.headersArray()) {\n    if (header.name.toLowerCase() === HeaderConstants.AUTHORIZATION) {\n      headers.set(header.name, \"*****\");\n    } else if (header.name.toLowerCase() === HeaderConstants.X_MS_COPY_SOURCE) {\n      headers.set(header.name, sanitizeURL(header.value));\n    } else {\n      headers.set(header.name, header.value);\n    }\n  }\n\n  return headers;\n}\n\n/**\n * Extracts account name from the url\n * @param url - url to extract the account name from\n * @returns with the account name\n */\nexport function getAccountNameFromUrl(url: string): string {\n  const parsedUrl: URLBuilder = URLBuilder.parse(url);\n  let accountName;\n  try {\n    if (parsedUrl.getHost()!.split(\".\")[1] === \"file\") {\n      // `${defaultEndpointsProtocol}://${accountName}.file.${endpointSuffix}`;\n      // Slicing off '/' at the end if exists\n      url = url.endsWith(\"/\") ? url.slice(0, -1) : url;\n\n      accountName = parsedUrl.getHost()!.split(\".\")[0];\n    } else if (isIpEndpointStyle(parsedUrl)) {\n      // IPv4/IPv6 address hosts... Example - http://192.0.0.10:10001/devstoreaccount1/\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:10001/devstoreaccount1/\n      // .getPath() -> /devstoreaccount1/\n      accountName = parsedUrl.getPath()!.split(\"/\")[1];\n    } else {\n      // Custom domain case: \"https://customdomain.com/containername/blob\".\n      accountName = \"\";\n    }\n    return accountName;\n  } catch (error) {\n    throw new Error(\"Unable to extract accountName with provided information.\");\n  }\n}\n\nexport function isIpEndpointStyle(parsedUrl: URLBuilder): boolean {\n  if (parsedUrl.getHost() === undefined) {\n    return false;\n  }\n\n  const host =\n    parsedUrl.getHost()! + (parsedUrl.getPort() === undefined ? \"\" : \":\" + parsedUrl.getPort());\n\n  // Case 1: Ipv6, use a broad regex to find out candidates whose host contains two ':'.\n  // Case 2: localhost(:port), use broad regex to match port part.\n  // Case 3: Ipv4, use broad regex which just check if host contains Ipv4.\n  // For valid host please refer to https://man7.org/linux/man-pages/man7/hostname.7.html.\n  return /^.*:.*:.*$|^localhost(:[0-9]+)?$|^(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])(\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])){3}(:[0-9]+)?$/.test(\n    host\n  );\n}\n\nexport function getShareNameAndPathFromUrl(url: string): {\n  baseName: string;\n  shareName: string;\n  path: string;\n} {\n  //  URL may look like the following\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory/file?sasString\";\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\";\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory?sasString\";\n  // \"https://myaccount.file.core.windows.net/myshare/mydirectory\";\n  // \"https://myaccount.file.core.windows.net/myshare?sasString\";\n  // \"https://myaccount.file.core.windows.net/myshare\";\n  // IPv4/IPv6 address hosts, Endpoints - `http://187.24.0.1:1000/devstoreaccount1/mydirectory/file`\n  // http://localhost:1000/devstoreaccount1/mydirectory/file\n  // mydirectory can consist of multiple directories - dir1/dir2/dir3\n\n  let shareName;\n  let path;\n  let baseName;\n\n  try {\n    const parsedUrl = URLBuilder.parse(url);\n    if (parsedUrl.getHost()!.split(\".\")[1] === \"file\") {\n      // \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\";\n      // .getPath() -> /myshare/mydirectory/file\n      const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)(/(.*))?\");\n      shareName = pathComponents![1];\n      path = pathComponents![3];\n    } else if (isIpEndpointStyle(parsedUrl)) {\n      // IPv4/IPv6 address hosts... Example - http://187.24.0.1:1000/devstoreaccount1/mydirectory/file\n      // Single word domain without a [dot] in the endpoint... Example - http://localhost:1000/devstoreaccount1/mydirectory/file\n      // .getPath() -> /devstoreaccount1/mydirectory/file\n      const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)/([^/]*)(/(.*))?\");\n      shareName = pathComponents![2];\n      path = pathComponents![4];\n    } else {\n      // \"https://customdomain.com/myshare/mydirectory/file\";\n      // .getPath() -> /myshare/mydirectory/file\n      const pathComponents = parsedUrl.getPath()!.match(\"/([^/]*)(/(.*))?\");\n      shareName = pathComponents![1];\n      path = pathComponents![3];\n    }\n\n    // decode the encoded shareName and filePath - to get all the special characters that might be present in it\n    shareName = decodeURIComponent(shareName);\n    path = decodeURIComponent(path);\n\n    // Cast to string is required as TypeScript cannot infer that split() always returns\n    // an array with length >= 1\n    baseName = path.split(\"/\").pop() as string;\n\n    if (!shareName) {\n      throw new Error(\"Provided shareName is invalid.\");\n    } else {\n      return { baseName, shareName, path };\n    }\n  } catch (error) {\n    throw new Error(\n      \"Unable to extract shareName and filePath/directoryPath with provided information.\"\n    );\n  }\n}\n\nexport function httpAuthorizationToString(\n  httpAuthorization?: HttpAuthorization\n): string | undefined {\n  return httpAuthorization ? httpAuthorization.scheme + \" \" + httpAuthorization.value : undefined;\n}\n\n/**\n * Set URL path.\n *\n * @param url - URL to change path to.\n * @param path - Path to set into the URL.\n */\nexport function setURLPath(url: string, path?: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setPath(path);\n  return urlParsed.toString();\n}\n\n/**\n * Set URL query string.\n *\n * @param url - URL to set query string to.\n * @param queryString - Query string to set to the URL.\n */\nexport function setURLQueries(url: string, queryString: string): string {\n  const urlParsed = URLBuilder.parse(url);\n  urlParsed.setQuery(queryString);\n  return urlParsed.toString();\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * Protocols for generated SAS.\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\",\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link FileSASSignatureValues}\n * types. Once generated, it can be encoded into a {@link String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link FileSASPermissions}, or {@link ShareSASPermissions} for\n   * more details.\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link FileSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. The storage share or file path (only for {@link FileSASSignatureValues}).\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start,\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param version - Representing the storage version\n   * @param signature - Representing the signature for the SAS token\n   * @param permissions - Representing the storage permissions\n   * @param services - Representing the storage services being accessed (only for Account SAS)\n   * @param resourceTypes - Representing the storage resource types being accessed (only for Account SAS)\n   * @param protocol - Representing the allowed HTTP protocol(s)\n   * @param startsOn - Representing the start time for this SAS token\n   * @param expiresOn - Representing the expiry time for this SAS token\n   * @param ipRange - Representing the range of valid IP addresses for this SAS token\n   * @param identifier - Representing the signed identifier (only for Service SAS)\n   * @param resource - Representing the storage container or blob (only for Service SAS)\n   * @param cacheControl - Representing the cache-control header (only for Blob/File Service SAS)\n   * @param contentDisposition - Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param contentEncoding - Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param contentLanguage - Representing the content-language header (only for Blob/File Service SAS)\n   * @param contentType - Representing the content-type header (only for Blob/File Service SAS)\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string\n  ) {\n    this.version = version;\n    this.services = services;\n    this.resourceTypes = resourceTypes;\n    this.expiresOn = expiresOn;\n    this.permissions = permissions;\n    this.protocol = protocol;\n    this.startsOn = startsOn;\n    this.ipRangeInner = ipRange;\n    this.identifier = identifier;\n    this.resource = resource;\n    this.signature = signature;\n    this.cacheControl = cacheControl;\n    this.contentDisposition = contentDisposition;\n    this.contentEncoding = contentEncoding;\n    this.contentLanguage = contentLanguage;\n    this.contentType = contentType;\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\",\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @param queries -\n   * @param key -\n   * @param value -\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { AccountSASResourceTypes } from \"./AccountSASResourceTypes\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * AccountSASSignatureValues is used to generate a Shared Access Signature (SAS) for an Azure Storage account. Once\n * all the values here are set appropriately, call {@link generateAccountSASQueryParameters} to obtain a representation of the SAS\n * which can actually be applied to file urls. Note: that both this class and {@link SASQueryParameters} exist because\n * the former is mutable and a logical representation while the latter is immutable and used to generate actual REST\n * requests.\n *\n * @see https://docs.microsoft.com/en-us/azure/storage/common/storage-dotnet-shared-access-signature-part-1\n * for more conceptual information on SAS\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n * for descriptions of the parameters, including which are required\n */\nexport interface AccountSASSignatureValues {\n  /**\n   * If not provided, this defaults to the service version targeted by this version of the library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * The time after which the SAS will no longer work.\n   */\n  expiresOn: Date;\n\n  /**\n   * Specifies which operations the SAS user may perform. Please refer to {@link AccountSASPermissions} for help\n   * constructing the permissions string.\n   */\n  permissions: AccountSASPermissions;\n\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The values that indicate the services accessible with this SAS. Please refer to {@link AccountSASServices} to\n   * construct this value.\n   */\n  services: string;\n\n  /**\n   * The values that indicate the resource types accessible with this SAS. Please refer\n   * to {@link AccountSASResourceTypes} to construct this value.\n   */\n  resourceTypes: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Generates a {@link SASQueryParameters} object which contains all SAS query parameters needed to make an actual\n * REST request.\n *\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-an-account-sas\n *\n * @param sharedKeyCredential -\n */\nexport function generateAccountSASQueryParameters(\n  accountSASSignatureValues: AccountSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  const version = accountSASSignatureValues.version\n    ? accountSASSignatureValues.version\n    : SERVICE_VERSION;\n\n  const parsedPermissions = AccountSASPermissions.parse(\n    accountSASSignatureValues.permissions.toString()\n  ).toString();\n  const parsedServices = AccountSASServices.parse(accountSASSignatureValues.services).toString();\n  const parsedResourceTypes = AccountSASResourceTypes.parse(\n    accountSASSignatureValues.resourceTypes\n  ).toString();\n\n  let stringToSign: string;\n\n  if (version >= \"2020-12-06\") {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      \"\", // Reserved for encryption scope\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  } else {\n    stringToSign = [\n      sharedKeyCredential.accountName,\n      parsedPermissions,\n      parsedServices,\n      parsedResourceTypes,\n      accountSASSignatureValues.startsOn\n        ? truncatedISO8061Date(accountSASSignatureValues.startsOn, false)\n        : \"\",\n      truncatedISO8061Date(accountSASSignatureValues.expiresOn, false),\n      accountSASSignatureValues.ipRange ? ipRangeToString(accountSASSignatureValues.ipRange) : \"\",\n      accountSASSignatureValues.protocol ? accountSASSignatureValues.protocol : \"\",\n      version,\n      \"\", // Account SAS requires an additional newline character\n    ].join(\"\\n\");\n  }\n\n  const signature: string = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    parsedPermissions,\n    parsedServices,\n    parsedResourceTypes,\n    accountSASSignatureValues.protocol,\n    accountSASSignatureValues.startsOn,\n    accountSASSignatureValues.expiresOn,\n    accountSASSignatureValues.ipRange\n  );\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a file. Setting\n * a value to true means that any SAS which uses these permissions will grant permissions for that operation. Once all\n * the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link FileSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class FileSASPermissions {\n  /**\n   * Creates a FileSASPermissions from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): FileSASPermissions {\n    const fileSASPermissions = new FileSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          fileSASPermissions.read = true;\n          break;\n        case \"c\":\n          fileSASPermissions.create = true;\n          break;\n        case \"w\":\n          fileSASPermissions.write = true;\n          break;\n        case \"d\":\n          fileSASPermissions.delete = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission: ${char}`);\n      }\n    }\n\n    return fileSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * @returns A string which represents the FileSASPermissions\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This is a helper class to construct a string representing the permissions granted by a ServiceSAS to a share.\n * Setting a value to true means that any SAS which uses these permissions will grant permissions for that operation.\n * Once all the values are set, this should be serialized with toString and set as the permissions field on a\n * {@link FileSASSignatureValues} object. It is possible to construct the permissions string without this class, but\n * the order of the permissions is particular and this class guarantees correctness.\n */\nexport class ShareSASPermissions {\n  /**\n   * Creates an {@link ShareSASPermissions} from the specified permissions string. This method will throw an\n   * Error if it encounters a character that does not correspond to a valid permission.\n   *\n   * @param permissions -\n   */\n  public static parse(permissions: string): ShareSASPermissions {\n    const shareSASPermissions = new ShareSASPermissions();\n\n    for (const char of permissions) {\n      switch (char) {\n        case \"r\":\n          shareSASPermissions.read = true;\n          break;\n        case \"c\":\n          shareSASPermissions.create = true;\n          break;\n        case \"w\":\n          shareSASPermissions.write = true;\n          break;\n        case \"d\":\n          shareSASPermissions.delete = true;\n          break;\n        case \"l\":\n          shareSASPermissions.list = true;\n          break;\n        default:\n          throw new RangeError(`Invalid permission ${char}`);\n      }\n    }\n\n    return shareSASPermissions;\n  }\n\n  /**\n   * Specifies Read access granted.\n   */\n  public read: boolean = false;\n\n  /**\n   * Specifies Create access granted.\n   */\n  public create: boolean = false;\n\n  /**\n   * Specifies Write access granted.\n   */\n  public write: boolean = false;\n\n  /**\n   * Specifies Delete access granted.\n   */\n  public delete: boolean = false;\n\n  /**\n   * Specifies List access granted.\n   */\n  public list: boolean = false;\n\n  /**\n   * Converts the given permissions to a string. Using this method will guarantee the permissions are in an\n   * order accepted by the service.\n   *\n   * The order of the characters should be as specified here to ensure correctness.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   */\n  public toString(): string {\n    const permissions: string[] = [];\n    if (this.read) {\n      permissions.push(\"r\");\n    }\n    if (this.create) {\n      permissions.push(\"c\");\n    }\n    if (this.write) {\n      permissions.push(\"w\");\n    }\n    if (this.delete) {\n      permissions.push(\"d\");\n    }\n    if (this.list) {\n      permissions.push(\"l\");\n    }\n    return permissions.join(\"\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { FileSASPermissions } from \"./FileSASPermissions\";\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { SASProtocol, SASQueryParameters } from \"./SASQueryParameters\";\nimport { ShareSASPermissions } from \"./ShareSASPermissions\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * FileSASSignatureValues is used to help generating File service SAS tokens for shares or files.\n */\n\nexport interface FileSASSignatureValues {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to either {@link ShareSASPermissions} or {@link FileSASPermissions} depending on the resource\n   * being accessed for help constructing the permissions string.\n   */\n  permissions?: FileSASPermissions | ShareSASPermissions;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * The name of the share the SAS user may access.\n   */\n  shareName: string;\n\n  /**\n   * Optional. The path of the file like, \"directory/FileName\" or \"FileName\".\n   */\n  filePath?: string;\n\n  /**\n   * Optional. The name of the access policy on the share this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Creates an instance of SASQueryParameters.\n *\n * Only accepts required settings needed to create a SAS. For optional settings please\n * set corresponding properties directly, such as permissions, startsOn and identifier.\n *\n * WARNING: When identifier is not provided, permissions and expiresOn are required.\n * You MUST assign value to identifier or expiresOn & permissions manually if you initial with\n * this constructor.\n *\n * @param fileSASSignatureValues -\n * @param sharedKeyCredential -\n */\nexport function generateFileSASQueryParameters(\n  fileSASSignatureValues: FileSASSignatureValues,\n  sharedKeyCredential: StorageSharedKeyCredential\n): SASQueryParameters {\n  if (\n    !fileSASSignatureValues.identifier &&\n    !(fileSASSignatureValues.permissions && fileSASSignatureValues.expiresOn)\n  ) {\n    throw new RangeError(\n      \"Must provide 'permissions' and 'expiresOn' for File SAS generation when 'identifier' is not provided.\"\n    );\n  }\n\n  const version = fileSASSignatureValues.version ? fileSASSignatureValues.version : SERVICE_VERSION;\n  let resource: string = \"s\";\n  if (fileSASSignatureValues.filePath) {\n    resource = \"f\";\n  }\n\n  let verifiedPermissions: string | undefined;\n  // Calling parse and toString guarantees the proper ordering and throws on invalid characters.\n  if (fileSASSignatureValues.permissions) {\n    if (fileSASSignatureValues.filePath) {\n      verifiedPermissions = FileSASPermissions.parse(\n        fileSASSignatureValues.permissions.toString()\n      ).toString();\n    } else {\n      verifiedPermissions = ShareSASPermissions.parse(\n        fileSASSignatureValues.permissions.toString()\n      ).toString();\n    }\n  }\n\n  // Signature is generated on the un-url-encoded values.\n  const stringToSign = [\n    verifiedPermissions,\n    fileSASSignatureValues.startsOn\n      ? truncatedISO8061Date(fileSASSignatureValues.startsOn, false)\n      : \"\",\n    fileSASSignatureValues.expiresOn\n      ? truncatedISO8061Date(fileSASSignatureValues.expiresOn, false)\n      : \"\",\n    getCanonicalName(\n      sharedKeyCredential.accountName,\n      fileSASSignatureValues.shareName,\n      fileSASSignatureValues.filePath\n    ),\n    fileSASSignatureValues.identifier,\n    fileSASSignatureValues.ipRange ? ipRangeToString(fileSASSignatureValues.ipRange) : \"\",\n    fileSASSignatureValues.protocol,\n    version,\n    fileSASSignatureValues.cacheControl,\n    fileSASSignatureValues.contentDisposition,\n    fileSASSignatureValues.contentEncoding,\n    fileSASSignatureValues.contentLanguage,\n    fileSASSignatureValues.contentType,\n  ].join(\"\\n\");\n\n  const signature = sharedKeyCredential.computeHMACSHA256(stringToSign);\n\n  return new SASQueryParameters(\n    version,\n    signature,\n    verifiedPermissions,\n    undefined,\n    undefined,\n    fileSASSignatureValues.protocol,\n    fileSASSignatureValues.startsOn,\n    fileSASSignatureValues.expiresOn,\n    fileSASSignatureValues.ipRange,\n    fileSASSignatureValues.identifier,\n    resource,\n    fileSASSignatureValues.cacheControl,\n    fileSASSignatureValues.contentDisposition,\n    fileSASSignatureValues.contentEncoding,\n    fileSASSignatureValues.contentLanguage,\n    fileSASSignatureValues.contentType\n  );\n}\n\nfunction getCanonicalName(accountName: string, shareName: string, filePath?: string): string {\n  // Share: \"/file/account/sharename\"\n  // File:  \"/file/account/sharename/filename\"\n  // File:  \"/file/account/sharename/directoryname/filename\"\n  const elements: string[] = [`/file/${accountName}/${shareName}`];\n  if (filePath) {\n    elements.push(`/${filePath}`);\n  }\n  return elements.join(\"\");\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\n\nexport const FileServiceProperties: coreHttp.CompositeMapper = {\n  serializedName: \"FileServiceProperties\",\n  xmlName: \"StorageServiceProperties\",\n  type: {\n    name: \"Composite\",\n    className: \"FileServiceProperties\",\n    modelProperties: {\n      hourMetrics: {\n        serializedName: \"HourMetrics\",\n        xmlName: \"HourMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      minuteMetrics: {\n        serializedName: \"MinuteMetrics\",\n        xmlName: \"MinuteMetrics\",\n        type: {\n          name: \"Composite\",\n          className: \"Metrics\"\n        }\n      },\n      cors: {\n        serializedName: \"Cors\",\n        xmlName: \"Cors\",\n        xmlIsWrapped: true,\n        xmlElementName: \"CorsRule\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"CorsRule\"\n            }\n          }\n        }\n      },\n      protocol: {\n        serializedName: \"Protocol\",\n        xmlName: \"ProtocolSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ShareProtocolSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const Metrics: coreHttp.CompositeMapper = {\n  serializedName: \"Metrics\",\n  type: {\n    name: \"Composite\",\n    className: \"Metrics\",\n    modelProperties: {\n      version: {\n        serializedName: \"Version\",\n        required: true,\n        xmlName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      includeAPIs: {\n        serializedName: \"IncludeAPIs\",\n        xmlName: \"IncludeAPIs\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionPolicy: {\n        serializedName: \"RetentionPolicy\",\n        xmlName: \"RetentionPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"RetentionPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const RetentionPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"RetentionPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"RetentionPolicy\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        required: true,\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      days: {\n        constraints: {\n          InclusiveMaximum: 365,\n          InclusiveMinimum: 1\n        },\n        serializedName: \"Days\",\n        xmlName: \"Days\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const CorsRule: coreHttp.CompositeMapper = {\n  serializedName: \"CorsRule\",\n  type: {\n    name: \"Composite\",\n    className: \"CorsRule\",\n    modelProperties: {\n      allowedOrigins: {\n        serializedName: \"AllowedOrigins\",\n        required: true,\n        xmlName: \"AllowedOrigins\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedMethods: {\n        serializedName: \"AllowedMethods\",\n        required: true,\n        xmlName: \"AllowedMethods\",\n        type: {\n          name: \"String\"\n        }\n      },\n      allowedHeaders: {\n        serializedName: \"AllowedHeaders\",\n        required: true,\n        xmlName: \"AllowedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      exposedHeaders: {\n        serializedName: \"ExposedHeaders\",\n        required: true,\n        xmlName: \"ExposedHeaders\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxAgeInSeconds: {\n        constraints: {\n          InclusiveMinimum: 0\n        },\n        serializedName: \"MaxAgeInSeconds\",\n        required: true,\n        xmlName: \"MaxAgeInSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareProtocolSettings: coreHttp.CompositeMapper = {\n  serializedName: \"ShareProtocolSettings\",\n  xmlName: \"ProtocolSettings\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareProtocolSettings\",\n    modelProperties: {\n      smb: {\n        serializedName: \"Smb\",\n        xmlName: \"SMB\",\n        type: {\n          name: \"Composite\",\n          className: \"ShareSmbSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSmbSettings: coreHttp.CompositeMapper = {\n  serializedName: \"ShareSmbSettings\",\n  xmlName: \"SMB\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSmbSettings\",\n    modelProperties: {\n      multichannel: {\n        serializedName: \"Multichannel\",\n        xmlName: \"Multichannel\",\n        type: {\n          name: \"Composite\",\n          className: \"SmbMultichannel\"\n        }\n      }\n    }\n  }\n};\n\nexport const SmbMultichannel: coreHttp.CompositeMapper = {\n  serializedName: \"SmbMultichannel\",\n  xmlName: \"Multichannel\",\n  type: {\n    name: \"Composite\",\n    className: \"SmbMultichannel\",\n    modelProperties: {\n      enabled: {\n        serializedName: \"Enabled\",\n        xmlName: \"Enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageError: coreHttp.CompositeMapper = {\n  serializedName: \"StorageError\",\n  type: {\n    name: \"Composite\",\n    className: \"StorageError\",\n    modelProperties: {\n      message: {\n        serializedName: \"Message\",\n        xmlName: \"Message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      code: {\n        serializedName: \"Code\",\n        xmlName: \"Code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListSharesResponse: coreHttp.CompositeMapper = {\n  serializedName: \"ListSharesResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListSharesResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      shareItems: {\n        serializedName: \"ShareItems\",\n        xmlName: \"Shares\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Share\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ShareItemInternal\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        required: true,\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareItemInternal: coreHttp.CompositeMapper = {\n  serializedName: \"ShareItemInternal\",\n  xmlName: \"Share\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareItemInternal\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      snapshot: {\n        serializedName: \"Snapshot\",\n        xmlName: \"Snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      deleted: {\n        serializedName: \"Deleted\",\n        xmlName: \"Deleted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      version: {\n        serializedName: \"Version\",\n        xmlName: \"Version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"SharePropertiesInternal\"\n        }\n      },\n      metadata: {\n        serializedName: \"Metadata\",\n        xmlName: \"Metadata\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const SharePropertiesInternal: coreHttp.CompositeMapper = {\n  serializedName: \"SharePropertiesInternal\",\n  type: {\n    name: \"Composite\",\n    className: \"SharePropertiesInternal\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        required: true,\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"Etag\",\n        required: true,\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      quota: {\n        serializedName: \"Quota\",\n        required: true,\n        xmlName: \"Quota\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIops: {\n        serializedName: \"ProvisionedIops\",\n        xmlName: \"ProvisionedIops\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIngressMBps: {\n        serializedName: \"ProvisionedIngressMBps\",\n        xmlName: \"ProvisionedIngressMBps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedEgressMBps: {\n        serializedName: \"ProvisionedEgressMBps\",\n        xmlName: \"ProvisionedEgressMBps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedBandwidthMiBps: {\n        serializedName: \"ProvisionedBandwidthMiBps\",\n        xmlName: \"ProvisionedBandwidthMiBps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nextAllowedQuotaDowngradeTime: {\n        serializedName: \"NextAllowedQuotaDowngradeTime\",\n        xmlName: \"NextAllowedQuotaDowngradeTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      deletedTime: {\n        serializedName: \"DeletedTime\",\n        xmlName: \"DeletedTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      remainingRetentionDays: {\n        serializedName: \"RemainingRetentionDays\",\n        xmlName: \"RemainingRetentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      accessTier: {\n        serializedName: \"AccessTier\",\n        xmlName: \"AccessTier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        serializedName: \"AccessTierChangeTime\",\n        xmlName: \"AccessTierChangeTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      accessTierTransitionState: {\n        serializedName: \"AccessTierTransitionState\",\n        xmlName: \"AccessTierTransitionState\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseStatus: {\n        serializedName: \"LeaseStatus\",\n        xmlName: \"LeaseStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"LeaseState\",\n        xmlName: \"LeaseState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseDuration: {\n        serializedName: \"LeaseDuration\",\n        xmlName: \"LeaseDuration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      enabledProtocols: {\n        serializedName: \"EnabledProtocols\",\n        xmlName: \"EnabledProtocols\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rootSquash: {\n        serializedName: \"RootSquash\",\n        xmlName: \"RootSquash\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NoRootSquash\", \"RootSquash\", \"AllSquash\"]\n        }\n      }\n    }\n  }\n};\n\nexport const SharePermission: coreHttp.CompositeMapper = {\n  serializedName: \"SharePermission\",\n  type: {\n    name: \"Composite\",\n    className: \"SharePermission\",\n    modelProperties: {\n      permission: {\n        serializedName: \"permission\",\n        required: true,\n        xmlName: \"permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SignedIdentifier: coreHttp.CompositeMapper = {\n  serializedName: \"SignedIdentifier\",\n  type: {\n    name: \"Composite\",\n    className: \"SignedIdentifier\",\n    modelProperties: {\n      id: {\n        serializedName: \"Id\",\n        required: true,\n        xmlName: \"Id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessPolicy: {\n        serializedName: \"AccessPolicy\",\n        xmlName: \"AccessPolicy\",\n        type: {\n          name: \"Composite\",\n          className: \"AccessPolicy\"\n        }\n      }\n    }\n  }\n};\n\nexport const AccessPolicy: coreHttp.CompositeMapper = {\n  serializedName: \"AccessPolicy\",\n  type: {\n    name: \"Composite\",\n    className: \"AccessPolicy\",\n    modelProperties: {\n      startsOn: {\n        serializedName: \"Start\",\n        xmlName: \"Start\",\n        type: {\n          name: \"String\"\n        }\n      },\n      expiresOn: {\n        serializedName: \"Expiry\",\n        xmlName: \"Expiry\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissions: {\n        serializedName: \"Permission\",\n        xmlName: \"Permission\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareStats: coreHttp.CompositeMapper = {\n  serializedName: \"ShareStats\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareStats\",\n    modelProperties: {\n      shareUsageBytes: {\n        serializedName: \"ShareUsageBytes\",\n        required: true,\n        xmlName: \"ShareUsageBytes\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListFilesAndDirectoriesSegmentResponse: coreHttp.CompositeMapper = {\n  serializedName: \"ListFilesAndDirectoriesSegmentResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListFilesAndDirectoriesSegmentResponse\",\n    modelProperties: {\n      serviceEndpoint: {\n        serializedName: \"ServiceEndpoint\",\n        required: true,\n        xmlName: \"ServiceEndpoint\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      shareName: {\n        serializedName: \"ShareName\",\n        required: true,\n        xmlName: \"ShareName\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      shareSnapshot: {\n        serializedName: \"ShareSnapshot\",\n        xmlName: \"ShareSnapshot\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      directoryPath: {\n        serializedName: \"DirectoryPath\",\n        required: true,\n        xmlName: \"DirectoryPath\",\n        xmlIsAttribute: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      prefix: {\n        serializedName: \"Prefix\",\n        required: true,\n        xmlName: \"Prefix\",\n        type: {\n          name: \"String\"\n        }\n      },\n      marker: {\n        serializedName: \"Marker\",\n        xmlName: \"Marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxResults: {\n        serializedName: \"MaxResults\",\n        xmlName: \"MaxResults\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      segment: {\n        serializedName: \"Segment\",\n        xmlName: \"Entries\",\n        type: {\n          name: \"Composite\",\n          className: \"FilesAndDirectoriesListSegment\"\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        required: true,\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      directoryId: {\n        serializedName: \"DirectoryId\",\n        xmlName: \"DirectoryId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FilesAndDirectoriesListSegment: coreHttp.CompositeMapper = {\n  serializedName: \"FilesAndDirectoriesListSegment\",\n  xmlName: \"Entries\",\n  type: {\n    name: \"Composite\",\n    className: \"FilesAndDirectoriesListSegment\",\n    modelProperties: {\n      directoryItems: {\n        serializedName: \"DirectoryItems\",\n        required: true,\n        xmlName: \"DirectoryItems\",\n        xmlElementName: \"Directory\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DirectoryItem\"\n            }\n          }\n        }\n      },\n      fileItems: {\n        serializedName: \"FileItems\",\n        required: true,\n        xmlName: \"FileItems\",\n        xmlElementName: \"File\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryItem: coreHttp.CompositeMapper = {\n  serializedName: \"DirectoryItem\",\n  xmlName: \"Directory\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"FileId\",\n        xmlName: \"FileId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"FileProperty\"\n        }\n      },\n      attributes: {\n        serializedName: \"Attributes\",\n        xmlName: \"Attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissionKey: {\n        serializedName: \"PermissionKey\",\n        xmlName: \"PermissionKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileProperty: coreHttp.CompositeMapper = {\n  serializedName: \"FileProperty\",\n  type: {\n    name: \"Composite\",\n    className: \"FileProperty\",\n    modelProperties: {\n      contentLength: {\n        serializedName: \"Content-Length\",\n        required: true,\n        xmlName: \"Content-Length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      creationTime: {\n        serializedName: \"CreationTime\",\n        xmlName: \"CreationTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastAccessTime: {\n        serializedName: \"LastAccessTime\",\n        xmlName: \"LastAccessTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastWriteTime: {\n        serializedName: \"LastWriteTime\",\n        xmlName: \"LastWriteTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      changeTime: {\n        serializedName: \"ChangeTime\",\n        xmlName: \"ChangeTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModified: {\n        serializedName: \"Last-Modified\",\n        xmlName: \"Last-Modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"Etag\",\n        xmlName: \"Etag\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileItem: coreHttp.CompositeMapper = {\n  serializedName: \"FileItem\",\n  xmlName: \"File\",\n  type: {\n    name: \"Composite\",\n    className: \"FileItem\",\n    modelProperties: {\n      name: {\n        serializedName: \"Name\",\n        required: true,\n        xmlName: \"Name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"FileId\",\n        xmlName: \"FileId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"Properties\",\n        xmlName: \"Properties\",\n        type: {\n          name: \"Composite\",\n          className: \"FileProperty\"\n        }\n      },\n      attributes: {\n        serializedName: \"Attributes\",\n        xmlName: \"Attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      permissionKey: {\n        serializedName: \"PermissionKey\",\n        xmlName: \"PermissionKey\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ListHandlesResponse: coreHttp.CompositeMapper = {\n  serializedName: \"ListHandlesResponse\",\n  xmlName: \"EnumerationResults\",\n  type: {\n    name: \"Composite\",\n    className: \"ListHandlesResponse\",\n    modelProperties: {\n      handleList: {\n        serializedName: \"HandleList\",\n        xmlName: \"Entries\",\n        xmlIsWrapped: true,\n        xmlElementName: \"Handle\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"HandleItem\"\n            }\n          }\n        }\n      },\n      continuationToken: {\n        serializedName: \"NextMarker\",\n        required: true,\n        xmlName: \"NextMarker\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const HandleItem: coreHttp.CompositeMapper = {\n  serializedName: \"HandleItem\",\n  xmlName: \"Handle\",\n  type: {\n    name: \"Composite\",\n    className: \"HandleItem\",\n    modelProperties: {\n      handleId: {\n        serializedName: \"HandleId\",\n        required: true,\n        xmlName: \"HandleId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      path: {\n        serializedName: \"Path\",\n        required: true,\n        xmlName: \"Path\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"FileId\",\n        required: true,\n        xmlName: \"FileId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parentId: {\n        serializedName: \"ParentId\",\n        xmlName: \"ParentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sessionId: {\n        serializedName: \"SessionId\",\n        required: true,\n        xmlName: \"SessionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientIp: {\n        serializedName: \"ClientIp\",\n        required: true,\n        xmlName: \"ClientIp\",\n        type: {\n          name: \"String\"\n        }\n      },\n      openTime: {\n        serializedName: \"OpenTime\",\n        required: true,\n        xmlName: \"OpenTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      lastReconnectTime: {\n        serializedName: \"LastReconnectTime\",\n        xmlName: \"LastReconnectTime\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareFileRangeList: coreHttp.CompositeMapper = {\n  serializedName: \"ShareFileRangeList\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareFileRangeList\",\n    modelProperties: {\n      ranges: {\n        serializedName: \"Ranges\",\n        xmlName: \"Ranges\",\n        xmlElementName: \"Range\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FileRange\"\n            }\n          }\n        }\n      },\n      clearRanges: {\n        serializedName: \"ClearRanges\",\n        xmlName: \"ClearRanges\",\n        xmlElementName: \"ClearRange\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ClearRange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FileRange: coreHttp.CompositeMapper = {\n  serializedName: \"FileRange\",\n  xmlName: \"Range\",\n  type: {\n    name: \"Composite\",\n    className: \"FileRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ClearRange: coreHttp.CompositeMapper = {\n  serializedName: \"ClearRange\",\n  xmlName: \"ClearRange\",\n  type: {\n    name: \"Composite\",\n    className: \"ClearRange\",\n    modelProperties: {\n      start: {\n        serializedName: \"Start\",\n        required: true,\n        xmlName: \"Start\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      end: {\n        serializedName: \"End\",\n        required: true,\n        xmlName: \"End\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceSetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_setPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceSetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListSharesSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_listSharesSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListSharesSegmentHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceListSharesSegmentExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Service_listSharesSegmentExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ServiceListSharesSegmentExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      quota: {\n        serializedName: \"x-ms-share-quota\",\n        xmlName: \"x-ms-share-quota\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIops: {\n        serializedName: \"x-ms-share-provisioned-iops\",\n        xmlName: \"x-ms-share-provisioned-iops\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedIngressMBps: {\n        serializedName: \"x-ms-share-provisioned-ingress-mbps\",\n        xmlName: \"x-ms-share-provisioned-ingress-mbps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      provisionedEgressMBps: {\n        serializedName: \"x-ms-share-provisioned-egress-mbps\",\n        xmlName: \"x-ms-share-provisioned-egress-mbps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      nextAllowedQuotaDowngradeTime: {\n        serializedName: \"x-ms-share-next-allowed-quota-downgrade-time\",\n        xmlName: \"x-ms-share-next-allowed-quota-downgrade-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      provisionedBandwidthMibps: {\n        serializedName: \"x-ms-share-provisioned-bandwidth-mibps\",\n        xmlName: \"x-ms-share-provisioned-bandwidth-mibps\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      accessTier: {\n        serializedName: \"x-ms-access-tier\",\n        xmlName: \"x-ms-access-tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accessTierChangeTime: {\n        serializedName: \"x-ms-access-tier-change-time\",\n        xmlName: \"x-ms-access-tier-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      accessTierTransitionState: {\n        serializedName: \"x-ms-access-tier-transition-state\",\n        xmlName: \"x-ms-access-tier-transition-state\",\n        type: {\n          name: \"String\"\n        }\n      },\n      enabledProtocols: {\n        serializedName: \"x-ms-enabled-protocols\",\n        xmlName: \"x-ms-enabled-protocols\",\n        type: {\n          name: \"String\"\n        }\n      },\n      rootSquash: {\n        serializedName: \"x-ms-root-squash\",\n        xmlName: \"x-ms-root-squash\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"NoRootSquash\", \"RootSquash\", \"AllSquash\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareDeleteExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareAcquireLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_acquireLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareAcquireLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareReleaseLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_releaseLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareReleaseLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareChangeLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_changeLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareChangeLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareRenewLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_renewLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareRenewLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareRenewLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_renewLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareRenewLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseTimeInSeconds: {\n        serializedName: \"x-ms-lease-time\",\n        xmlName: \"x-ms-lease-time\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareBreakLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateSnapshotHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createSnapshotHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateSnapshotHeaders\",\n    modelProperties: {\n      snapshot: {\n        serializedName: \"x-ms-snapshot\",\n        xmlName: \"x-ms-snapshot\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreateSnapshotExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createSnapshotExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreateSnapshotExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreatePermissionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createPermissionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreatePermissionHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareCreatePermissionExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_createPermissionExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareCreatePermissionExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPermissionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getPermissionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPermissionHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetPermissionExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getPermissionExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetPermissionExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetPropertiesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetMetadataExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetAccessPolicyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getAccessPolicyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetAccessPolicyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetAccessPolicyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setAccessPolicyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetAccessPolicyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareSetAccessPolicyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_setAccessPolicyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareSetAccessPolicyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetStatisticsHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getStatisticsHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetStatisticsHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareGetStatisticsExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_getStatisticsExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareGetStatisticsExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareRestoreHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_restoreHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareRestoreHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const ShareRestoreExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Share_restoreExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"ShareRestoreExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryCreateExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryGetPropertiesHeaders\",\n    modelProperties: {\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryDeleteExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_setPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetPropertiesHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_setPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectorySetMetadataExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectorySetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListFilesAndDirectoriesSegmentHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_listFilesAndDirectoriesSegmentHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListFilesAndDirectoriesSegmentHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListFilesAndDirectoriesSegmentExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_listFilesAndDirectoriesSegmentExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListFilesAndDirectoriesSegmentExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_listHandlesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListHandlesHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryListHandlesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_listHandlesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryListHandlesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryForceCloseHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_forceCloseHandlesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryForceCloseHandlesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      marker: {\n        serializedName: \"x-ms-marker\",\n        xmlName: \"x-ms-marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfHandlesClosed: {\n        serializedName: \"x-ms-number-of-handles-closed\",\n        xmlName: \"x-ms-number-of-handles-closed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfHandlesFailedToClose: {\n        serializedName: \"x-ms-number-of-handles-failed\",\n        xmlName: \"x-ms-number-of-handles-failed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryForceCloseHandlesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_forceCloseHandlesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryForceCloseHandlesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryRenameHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_renameHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryRenameHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreationTime: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteTime: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeTime: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DirectoryRenameExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"Directory_renameExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"DirectoryRenameExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileCreateHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_createHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileCreateHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileCreateExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_createExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileCreateExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDownloadHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_downloadHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDownloadHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentRange: {\n        serializedName: \"content-range\",\n        xmlName: \"content-range\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      acceptRanges: {\n        serializedName: \"accept-ranges\",\n        xmlName: \"accept-ranges\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      fileContentMD5: {\n        serializedName: \"x-ms-content-md5\",\n        xmlName: \"x-ms-content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDownloadExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_downloadExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDownloadExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetPropertiesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_getPropertiesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetPropertiesHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      metadata: {\n        serializedName: \"x-ms-meta\",\n        xmlName: \"x-ms-meta\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        },\n        headerCollectionPrefix: \"x-ms-meta-\"\n      },\n      fileType: {\n        serializedName: \"x-ms-type\",\n        xmlName: \"x-ms-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLength: {\n        serializedName: \"content-length\",\n        xmlName: \"content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      contentEncoding: {\n        serializedName: \"content-encoding\",\n        xmlName: \"content-encoding\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cacheControl: {\n        serializedName: \"cache-control\",\n        xmlName: \"cache-control\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentDisposition: {\n        serializedName: \"content-disposition\",\n        xmlName: \"content-disposition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentLanguage: {\n        serializedName: \"content-language\",\n        xmlName: \"content-language\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyCompletedOn: {\n        serializedName: \"x-ms-copy-completion-time\",\n        xmlName: \"x-ms-copy-completion-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyStatusDescription: {\n        serializedName: \"x-ms-copy-status-description\",\n        xmlName: \"x-ms-copy-status-description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyProgress: {\n        serializedName: \"x-ms-copy-progress\",\n        xmlName: \"x-ms-copy-progress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copySource: {\n        serializedName: \"x-ms-copy-source\",\n        xmlName: \"x-ms-copy-source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-server-encrypted\",\n        xmlName: \"x-ms-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      leaseDuration: {\n        serializedName: \"x-ms-lease-duration\",\n        xmlName: \"x-ms-lease-duration\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"infinite\", \"fixed\"]\n        }\n      },\n      leaseState: {\n        serializedName: \"x-ms-lease-state\",\n        xmlName: \"x-ms-lease-state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"available\",\n            \"leased\",\n            \"expired\",\n            \"breaking\",\n            \"broken\"\n          ]\n        }\n      },\n      leaseStatus: {\n        serializedName: \"x-ms-lease-status\",\n        xmlName: \"x-ms-lease-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"locked\", \"unlocked\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetPropertiesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_getPropertiesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetPropertiesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDeleteHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_deleteHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDeleteHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileDeleteExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_deleteExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileDeleteExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetHttpHeadersHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_setHttpHeadersHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetHttpHeadersHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreatedOn: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteOn: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeOn: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetHttpHeadersExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_setHttpHeadersExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetHttpHeadersExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetMetadataHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_setMetadataHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetMetadataHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileSetMetadataExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_setMetadataExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileSetMetadataExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAcquireLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_acquireLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAcquireLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAcquireLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_acquireLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAcquireLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileReleaseLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_releaseLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileReleaseLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileReleaseLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_releaseLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileReleaseLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileChangeLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_changeLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileChangeLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileChangeLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_changeLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileChangeLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileBreakLeaseHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_breakLeaseHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileBreakLeaseHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      leaseId: {\n        serializedName: \"x-ms-lease-id\",\n        xmlName: \"x-ms-lease-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      clientRequestId: {\n        serializedName: \"x-ms-client-request-id\",\n        xmlName: \"x-ms-client-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileBreakLeaseExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_breakLeaseExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileBreakLeaseExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_uploadRangeHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      contentMD5: {\n        serializedName: \"content-md5\",\n        xmlName: \"content-md5\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_uploadRangeExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeFromURLHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_uploadRangeFromURLHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeFromURLHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      xMsContentCrc64: {\n        serializedName: \"x-ms-content-crc64\",\n        xmlName: \"x-ms-content-crc64\",\n        type: {\n          name: \"ByteArray\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileUploadRangeFromURLExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_uploadRangeFromURLExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileUploadRangeFromURLExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetRangeListHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_getRangeListHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetRangeListHeaders\",\n    modelProperties: {\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileContentLength: {\n        serializedName: \"x-ms-content-length\",\n        xmlName: \"x-ms-content-length\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileGetRangeListExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_getRangeListExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileGetRangeListExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileStartCopyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_startCopyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileStartCopyHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      copyId: {\n        serializedName: \"x-ms-copy-id\",\n        xmlName: \"x-ms-copy-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      copyStatus: {\n        serializedName: \"x-ms-copy-status\",\n        xmlName: \"x-ms-copy-status\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"pending\", \"success\", \"aborted\", \"failed\"]\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileStartCopyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_startCopyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileStartCopyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAbortCopyHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_abortCopyHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAbortCopyHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileAbortCopyExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_abortCopyExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileAbortCopyExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileListHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_listHandlesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileListHandlesHeaders\",\n    modelProperties: {\n      contentType: {\n        serializedName: \"content-type\",\n        xmlName: \"content-type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileListHandlesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_listHandlesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileListHandlesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileForceCloseHandlesHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_forceCloseHandlesHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileForceCloseHandlesHeaders\",\n    modelProperties: {\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      marker: {\n        serializedName: \"x-ms-marker\",\n        xmlName: \"x-ms-marker\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfHandlesClosed: {\n        serializedName: \"x-ms-number-of-handles-closed\",\n        xmlName: \"x-ms-number-of-handles-closed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      numberOfHandlesFailedToClose: {\n        serializedName: \"x-ms-number-of-handles-failed\",\n        xmlName: \"x-ms-number-of-handles-failed\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileForceCloseHandlesExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_forceCloseHandlesExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileForceCloseHandlesExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileRenameHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_renameHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileRenameHeaders\",\n    modelProperties: {\n      etag: {\n        serializedName: \"etag\",\n        xmlName: \"etag\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModified: {\n        serializedName: \"last-modified\",\n        xmlName: \"last-modified\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      requestId: {\n        serializedName: \"x-ms-request-id\",\n        xmlName: \"x-ms-request-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"x-ms-version\",\n        xmlName: \"x-ms-version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      date: {\n        serializedName: \"date\",\n        xmlName: \"date\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      isServerEncrypted: {\n        serializedName: \"x-ms-request-server-encrypted\",\n        xmlName: \"x-ms-request-server-encrypted\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      filePermissionKey: {\n        serializedName: \"x-ms-file-permission-key\",\n        xmlName: \"x-ms-file-permission-key\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileAttributes: {\n        serializedName: \"x-ms-file-attributes\",\n        xmlName: \"x-ms-file-attributes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileCreationTime: {\n        serializedName: \"x-ms-file-creation-time\",\n        xmlName: \"x-ms-file-creation-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileLastWriteTime: {\n        serializedName: \"x-ms-file-last-write-time\",\n        xmlName: \"x-ms-file-last-write-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileChangeTime: {\n        serializedName: \"x-ms-file-change-time\",\n        xmlName: \"x-ms-file-change-time\",\n        type: {\n          name: \"DateTimeRfc1123\"\n        }\n      },\n      fileId: {\n        serializedName: \"x-ms-file-id\",\n        xmlName: \"x-ms-file-id\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fileParentId: {\n        serializedName: \"x-ms-file-parent-id\",\n        xmlName: \"x-ms-file-parent-id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FileRenameExceptionHeaders: coreHttp.CompositeMapper = {\n  serializedName: \"File_renameExceptionHeaders\",\n  type: {\n    name: \"Composite\",\n    className: \"FileRenameExceptionHeaders\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"x-ms-error-code\",\n        xmlName: \"x-ms-error-code\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter,\n  QueryCollectionFormat\n} from \"@azure/core-http\";\nimport {\n  FileServiceProperties as FileServicePropertiesMapper,\n  SharePermission as SharePermissionMapper\n} from \"../models/mappers\";\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const properties: OperationParameter = {\n  parameterPath: \"properties\",\n  mapper: FileServicePropertiesMapper\n};\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const url: OperationURLParameter = {\n  parameterPath: \"url\",\n  mapper: {\n    serializedName: \"url\",\n    required: true,\n    xmlName: \"url\",\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const restype: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"service\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"properties\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const timeoutInSeconds: OperationQueryParameter = {\n  parameterPath: [\"options\", \"timeoutInSeconds\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 0\n    },\n    serializedName: \"timeout\",\n    xmlName: \"timeout\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const version: OperationParameter = {\n  parameterPath: \"version\",\n  mapper: {\n    defaultValue: \"2021-04-10\",\n    isConstant: true,\n    serializedName: \"x-ms-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accept1: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp1: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"list\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prefix: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prefix\"],\n  mapper: {\n    serializedName: \"prefix\",\n    xmlName: \"prefix\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const marker: OperationQueryParameter = {\n  parameterPath: [\"options\", \"marker\"],\n  mapper: {\n    serializedName: \"marker\",\n    xmlName: \"marker\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const maxResults: OperationQueryParameter = {\n  parameterPath: [\"options\", \"maxResults\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"maxresults\",\n    xmlName: \"maxresults\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const include: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListSharesIncludeType\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"snapshots\", \"metadata\", \"deleted\"]\n        }\n      }\n    }\n  },\n  collectionFormat: QueryCollectionFormat.Csv\n};\n\nexport const restype1: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"share\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const metadata: OperationParameter = {\n  parameterPath: [\"options\", \"metadata\"],\n  mapper: {\n    serializedName: \"x-ms-meta\",\n    xmlName: \"x-ms-meta\",\n    type: {\n      name: \"Dictionary\",\n      value: { type: { name: \"String\" } }\n    },\n    headerCollectionPrefix: \"x-ms-meta-\"\n  }\n};\n\nexport const quota: OperationParameter = {\n  parameterPath: [\"options\", \"quota\"],\n  mapper: {\n    constraints: {\n      InclusiveMinimum: 1\n    },\n    serializedName: \"x-ms-share-quota\",\n    xmlName: \"x-ms-share-quota\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const accessTier: OperationParameter = {\n  parameterPath: [\"options\", \"accessTier\"],\n  mapper: {\n    serializedName: \"x-ms-access-tier\",\n    xmlName: \"x-ms-access-tier\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"TransactionOptimized\", \"Hot\", \"Cool\"]\n    }\n  }\n};\n\nexport const enabledProtocols: OperationParameter = {\n  parameterPath: [\"options\", \"enabledProtocols\"],\n  mapper: {\n    serializedName: \"x-ms-enabled-protocols\",\n    xmlName: \"x-ms-enabled-protocols\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const rootSquash: OperationParameter = {\n  parameterPath: [\"options\", \"rootSquash\"],\n  mapper: {\n    serializedName: \"x-ms-root-squash\",\n    xmlName: \"x-ms-root-squash\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"NoRootSquash\", \"RootSquash\", \"AllSquash\"]\n    }\n  }\n};\n\nexport const shareSnapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"shareSnapshot\"],\n  mapper: {\n    serializedName: \"sharesnapshot\",\n    xmlName: \"sharesnapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const leaseId: OperationParameter = {\n  parameterPath: [\"options\", \"leaseAccessConditions\", \"leaseId\"],\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deleteSnapshots: OperationParameter = {\n  parameterPath: [\"options\", \"deleteSnapshots\"],\n  mapper: {\n    serializedName: \"x-ms-delete-snapshots\",\n    xmlName: \"x-ms-delete-snapshots\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"include\", \"include-leased\"]\n    }\n  }\n};\n\nexport const comp2: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"lease\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"acquire\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const duration: OperationParameter = {\n  parameterPath: [\"options\", \"duration\"],\n  mapper: {\n    serializedName: \"x-ms-lease-duration\",\n    xmlName: \"x-ms-lease-duration\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const proposedLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"proposedLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-proposed-lease-id\",\n    xmlName: \"x-ms-proposed-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const requestId: OperationParameter = {\n  parameterPath: [\"options\", \"requestId\"],\n  mapper: {\n    serializedName: \"x-ms-client-request-id\",\n    xmlName: \"x-ms-client-request-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action1: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"release\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const leaseId1: OperationParameter = {\n  parameterPath: \"leaseId\",\n  mapper: {\n    serializedName: \"x-ms-lease-id\",\n    required: true,\n    xmlName: \"x-ms-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action2: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"change\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action3: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"renew\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const action4: OperationParameter = {\n  parameterPath: \"action\",\n  mapper: {\n    defaultValue: \"break\",\n    isConstant: true,\n    serializedName: \"x-ms-lease-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const breakPeriod: OperationParameter = {\n  parameterPath: [\"options\", \"breakPeriod\"],\n  mapper: {\n    serializedName: \"x-ms-lease-break-period\",\n    xmlName: \"x-ms-lease-break-period\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const comp3: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"snapshot\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sharePermission: OperationParameter = {\n  parameterPath: \"sharePermission\",\n  mapper: SharePermissionMapper\n};\n\nexport const comp4: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"filepermission\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const accept2: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filePermissionKey: OperationParameter = {\n  parameterPath: \"filePermissionKey\",\n  mapper: {\n    serializedName: \"x-ms-file-permission-key\",\n    required: true,\n    xmlName: \"x-ms-file-permission-key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp5: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"metadata\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp6: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"acl\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const shareAcl: OperationParameter = {\n  parameterPath: [\"options\", \"shareAcl\"],\n  mapper: {\n    serializedName: \"shareAcl\",\n    xmlName: \"SignedIdentifiers\",\n    xmlIsWrapped: true,\n    xmlElementName: \"SignedIdentifier\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Composite\",\n          className: \"SignedIdentifier\"\n        }\n      }\n    }\n  }\n};\n\nexport const comp7: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"stats\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp8: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"undelete\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deletedShareName: OperationParameter = {\n  parameterPath: [\"options\", \"deletedShareName\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-share-name\",\n    xmlName: \"x-ms-deleted-share-name\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deletedShareVersion: OperationParameter = {\n  parameterPath: [\"options\", \"deletedShareVersion\"],\n  mapper: {\n    serializedName: \"x-ms-deleted-share-version\",\n    xmlName: \"x-ms-deleted-share-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const restype2: OperationQueryParameter = {\n  parameterPath: \"restype\",\n  mapper: {\n    defaultValue: \"directory\",\n    isConstant: true,\n    serializedName: \"restype\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filePermission: OperationParameter = {\n  parameterPath: [\"options\", \"filePermission\"],\n  mapper: {\n    serializedName: \"x-ms-file-permission\",\n    xmlName: \"x-ms-file-permission\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filePermissionKey1: OperationParameter = {\n  parameterPath: [\"options\", \"filePermissionKey\"],\n  mapper: {\n    serializedName: \"x-ms-file-permission-key\",\n    xmlName: \"x-ms-file-permission-key\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileAttributes: OperationParameter = {\n  parameterPath: \"fileAttributes\",\n  mapper: {\n    serializedName: \"x-ms-file-attributes\",\n    required: true,\n    xmlName: \"x-ms-file-attributes\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileCreatedOn: OperationParameter = {\n  parameterPath: \"fileCreatedOn\",\n  mapper: {\n    serializedName: \"x-ms-file-creation-time\",\n    required: true,\n    xmlName: \"x-ms-file-creation-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileLastWriteOn: OperationParameter = {\n  parameterPath: \"fileLastWriteOn\",\n  mapper: {\n    serializedName: \"x-ms-file-last-write-time\",\n    required: true,\n    xmlName: \"x-ms-file-last-write-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const include1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    xmlName: \"include\",\n    xmlElementName: \"ListFilesIncludeType\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Timestamps\", \"Etag\", \"Attributes\", \"PermissionKey\"]\n        }\n      }\n    }\n  },\n  collectionFormat: QueryCollectionFormat.Csv\n};\n\nexport const includeExtendedInfo: OperationParameter = {\n  parameterPath: [\"options\", \"includeExtendedInfo\"],\n  mapper: {\n    serializedName: \"x-ms-file-extended-info\",\n    xmlName: \"x-ms-file-extended-info\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const comp9: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"listhandles\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const recursive: OperationParameter = {\n  parameterPath: [\"options\", \"recursive\"],\n  mapper: {\n    serializedName: \"x-ms-recursive\",\n    xmlName: \"x-ms-recursive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const comp10: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"forceclosehandles\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const handleId: OperationParameter = {\n  parameterPath: \"handleId\",\n  mapper: {\n    serializedName: \"x-ms-handle-id\",\n    required: true,\n    xmlName: \"x-ms-handle-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp11: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"rename\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const renameSource: OperationParameter = {\n  parameterPath: \"renameSource\",\n  mapper: {\n    serializedName: \"x-ms-file-rename-source\",\n    required: true,\n    xmlName: \"x-ms-file-rename-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const replaceIfExists: OperationParameter = {\n  parameterPath: [\"options\", \"replaceIfExists\"],\n  mapper: {\n    serializedName: \"x-ms-file-rename-replace-if-exists\",\n    xmlName: \"x-ms-file-rename-replace-if-exists\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const ignoreReadOnly: OperationParameter = {\n  parameterPath: [\"options\", \"ignoreReadOnly\"],\n  mapper: {\n    serializedName: \"x-ms-file-rename-ignore-readonly\",\n    xmlName: \"x-ms-file-rename-ignore-readonly\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const sourceLeaseId: OperationParameter = {\n  parameterPath: [\"options\", \"sourceLeaseAccessConditions\", \"sourceLeaseId\"],\n  mapper: {\n    serializedName: \"x-ms-source-lease-id\",\n    xmlName: \"x-ms-source-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const destinationLeaseId: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"destinationLeaseAccessConditions\",\n    \"destinationLeaseId\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-destination-lease-id\",\n    xmlName: \"x-ms-destination-lease-id\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileAttributes1: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"fileAttributes\"],\n  mapper: {\n    serializedName: \"x-ms-file-attributes\",\n    xmlName: \"x-ms-file-attributes\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileCreationTime: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"fileCreationTime\"],\n  mapper: {\n    serializedName: \"x-ms-file-creation-time\",\n    xmlName: \"x-ms-file-creation-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileLastWriteTime: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"fileLastWriteTime\"],\n  mapper: {\n    serializedName: \"x-ms-file-last-write-time\",\n    xmlName: \"x-ms-file-last-write-time\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentLength: OperationParameter = {\n  parameterPath: \"fileContentLength\",\n  mapper: {\n    serializedName: \"x-ms-content-length\",\n    required: true,\n    xmlName: \"x-ms-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const fileTypeConstant: OperationParameter = {\n  parameterPath: \"fileTypeConstant\",\n  mapper: {\n    defaultValue: \"file\",\n    isConstant: true,\n    serializedName: \"x-ms-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentType: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentType\"],\n  mapper: {\n    serializedName: \"x-ms-content-type\",\n    xmlName: \"x-ms-content-type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentEncoding: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentEncoding\"],\n  mapper: {\n    serializedName: \"x-ms-content-encoding\",\n    xmlName: \"x-ms-content-encoding\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentLanguage: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentLanguage\"],\n  mapper: {\n    serializedName: \"x-ms-content-language\",\n    xmlName: \"x-ms-content-language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileCacheControl: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileCacheControl\"],\n  mapper: {\n    serializedName: \"x-ms-cache-control\",\n    xmlName: \"x-ms-cache-control\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-content-md5\",\n    xmlName: \"x-ms-content-md5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const fileContentDisposition: OperationParameter = {\n  parameterPath: [\"options\", \"fileHttpHeaders\", \"fileContentDisposition\"],\n  mapper: {\n    serializedName: \"x-ms-content-disposition\",\n    xmlName: \"x-ms-content-disposition\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const range: OperationParameter = {\n  parameterPath: [\"options\", \"range\"],\n  mapper: {\n    serializedName: \"x-ms-range\",\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const rangeGetContentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"rangeGetContentMD5\"],\n  mapper: {\n    serializedName: \"x-ms-range-get-content-md5\",\n    xmlName: \"x-ms-range-get-content-md5\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const fileContentLength1: OperationParameter = {\n  parameterPath: [\"options\", \"fileContentLength\"],\n  mapper: {\n    serializedName: \"x-ms-content-length\",\n    xmlName: \"x-ms-content-length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const contentType1: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/octet-stream\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const body: OperationParameter = {\n  parameterPath: [\"options\", \"body\"],\n  mapper: {\n    serializedName: \"body\",\n    xmlName: \"body\",\n    type: {\n      name: \"Stream\"\n    }\n  }\n};\n\nexport const accept3: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/xml\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp12: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"range\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const range1: OperationParameter = {\n  parameterPath: \"range\",\n  mapper: {\n    serializedName: \"x-ms-range\",\n    required: true,\n    xmlName: \"x-ms-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileRangeWrite: OperationParameter = {\n  parameterPath: \"fileRangeWrite\",\n  mapper: {\n    defaultValue: \"update\",\n    serializedName: \"x-ms-write\",\n    required: true,\n    xmlName: \"x-ms-write\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"update\", \"clear\"]\n    }\n  }\n};\n\nexport const contentLength: OperationParameter = {\n  parameterPath: \"contentLength\",\n  mapper: {\n    serializedName: \"Content-Length\",\n    required: true,\n    xmlName: \"Content-Length\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const contentMD5: OperationParameter = {\n  parameterPath: [\"options\", \"contentMD5\"],\n  mapper: {\n    serializedName: \"Content-MD5\",\n    xmlName: \"Content-MD5\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const copySource: OperationParameter = {\n  parameterPath: \"copySource\",\n  mapper: {\n    serializedName: \"x-ms-copy-source\",\n    required: true,\n    xmlName: \"x-ms-copy-source\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceRange: OperationParameter = {\n  parameterPath: [\"options\", \"sourceRange\"],\n  mapper: {\n    serializedName: \"x-ms-source-range\",\n    xmlName: \"x-ms-source-range\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const fileRangeWriteFromUrl: OperationParameter = {\n  parameterPath: \"fileRangeWriteFromUrl\",\n  mapper: {\n    defaultValue: \"update\",\n    isConstant: true,\n    serializedName: \"x-ms-write\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sourceContentCrc64: OperationParameter = {\n  parameterPath: [\"options\", \"sourceContentCrc64\"],\n  mapper: {\n    serializedName: \"x-ms-source-content-crc64\",\n    xmlName: \"x-ms-source-content-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const sourceIfMatchCrc64: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfMatchCrc64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-match-crc64\",\n    xmlName: \"x-ms-source-if-match-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const sourceIfNoneMatchCrc64: OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"sourceModifiedAccessConditions\",\n    \"sourceIfNoneMatchCrc64\"\n  ],\n  mapper: {\n    serializedName: \"x-ms-source-if-none-match-crc64\",\n    xmlName: \"x-ms-source-if-none-match-crc64\",\n    type: {\n      name: \"ByteArray\"\n    }\n  }\n};\n\nexport const copySourceAuthorization: OperationParameter = {\n  parameterPath: [\"options\", \"copySourceAuthorization\"],\n  mapper: {\n    serializedName: \"x-ms-copy-source-authorization\",\n    xmlName: \"x-ms-copy-source-authorization\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const comp13: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"rangelist\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const prevsharesnapshot: OperationQueryParameter = {\n  parameterPath: [\"options\", \"prevsharesnapshot\"],\n  mapper: {\n    serializedName: \"prevsharesnapshot\",\n    xmlName: \"prevsharesnapshot\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filePermissionCopyMode: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"filePermissionCopyMode\"],\n  mapper: {\n    serializedName: \"x-ms-file-permission-copy-mode\",\n    xmlName: \"x-ms-file-permission-copy-mode\",\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"source\", \"override\"]\n    }\n  }\n};\n\nexport const ignoreReadOnly1: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"ignoreReadOnly\"],\n  mapper: {\n    serializedName: \"x-ms-file-copy-ignore-readonly\",\n    xmlName: \"x-ms-file-copy-ignore-readonly\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const setArchiveAttribute: OperationParameter = {\n  parameterPath: [\"options\", \"copyFileSmbInfo\", \"setArchiveAttribute\"],\n  mapper: {\n    serializedName: \"x-ms-file-copy-set-archive\",\n    xmlName: \"x-ms-file-copy-set-archive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const comp14: OperationQueryParameter = {\n  parameterPath: \"comp\",\n  mapper: {\n    defaultValue: \"copy\",\n    isConstant: true,\n    serializedName: \"comp\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const copyId: OperationQueryParameter = {\n  parameterPath: \"copyId\",\n  mapper: {\n    serializedName: \"copyid\",\n    required: true,\n    xmlName: \"copyid\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const copyActionAbortConstant: OperationParameter = {\n  parameterPath: \"copyActionAbortConstant\",\n  mapper: {\n    defaultValue: \"abort\",\n    isConstant: true,\n    serializedName: \"x-ms-copy-action\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  FileServiceProperties,\n  ServiceSetPropertiesOptionalParams,\n  ServiceSetPropertiesResponse,\n  ServiceGetPropertiesOptionalParams,\n  ServiceGetPropertiesResponse,\n  ServiceListSharesSegmentOptionalParams,\n  ServiceListSharesSegmentResponse\n} from \"../models\";\n\n/** Class representing a Service. */\nexport class Service {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class Service class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Sets properties for a storage account's File service endpoint, including properties for Storage\n   * Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param properties The StorageService properties.\n   * @param options The options parameters.\n   */\n  setProperties(\n    properties: FileServiceProperties,\n    options?: ServiceSetPropertiesOptionalParams\n  ): Promise<ServiceSetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      properties,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setPropertiesOperationSpec\n    ) as Promise<ServiceSetPropertiesResponse>;\n  }\n\n  /**\n   * Gets the properties of a storage account's File service, including properties for Storage Analytics\n   * metrics and CORS (Cross-Origin Resource Sharing) rules.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ServiceGetPropertiesOptionalParams\n  ): Promise<ServiceGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<ServiceGetPropertiesResponse>;\n  }\n\n  /**\n   * The List Shares Segment operation returns a list of the shares and share snapshots under the\n   * specified account.\n   * @param options The options parameters.\n   */\n  listSharesSegment(\n    options?: ServiceListSharesSegmentOptionalParams\n  ): Promise<ServiceListSharesSegmentResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listSharesSegmentOperationSpec\n    ) as Promise<ServiceListSharesSegmentResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ServiceSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceSetPropertiesExceptionHeaders\n    }\n  },\n  requestBody: Parameters.properties,\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FileServiceProperties,\n      headersMapper: Mappers.ServiceGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.restype,\n    Parameters.comp,\n    Parameters.timeoutInSeconds\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listSharesSegmentOperationSpec: coreHttp.OperationSpec = {\n  path: \"/\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListSharesResponse,\n      headersMapper: Mappers.ServiceListSharesSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ServiceListSharesSegmentExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp1,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.include\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  ShareCreateOptionalParams,\n  ShareCreateResponse,\n  ShareGetPropertiesOptionalParams,\n  ShareGetPropertiesResponse,\n  ShareDeleteOptionalParams,\n  ShareDeleteResponse,\n  ShareAcquireLeaseOptionalParams,\n  ShareAcquireLeaseResponse,\n  ShareReleaseLeaseOptionalParams,\n  ShareReleaseLeaseResponse,\n  ShareChangeLeaseOptionalParams,\n  ShareChangeLeaseResponse,\n  ShareRenewLeaseOptionalParams,\n  ShareRenewLeaseResponse,\n  ShareBreakLeaseOptionalParams,\n  ShareBreakLeaseResponse,\n  ShareCreateSnapshotOptionalParams,\n  ShareCreateSnapshotResponse,\n  SharePermission,\n  ShareCreatePermissionOptionalParams,\n  ShareCreatePermissionResponse,\n  ShareGetPermissionOptionalParams,\n  ShareGetPermissionResponse,\n  ShareSetPropertiesOptionalParams,\n  ShareSetPropertiesResponse,\n  ShareSetMetadataOptionalParams,\n  ShareSetMetadataResponse,\n  ShareGetAccessPolicyOptionalParams,\n  ShareGetAccessPolicyResponse,\n  ShareSetAccessPolicyOptionalParams,\n  ShareSetAccessPolicyResponse,\n  ShareGetStatisticsOptionalParams,\n  ShareGetStatisticsResponse,\n  ShareRestoreOptionalParams,\n  ShareRestoreResponse\n} from \"../models\";\n\n/** Class representing a Share. */\nexport class Share {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class Share class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new share under the specified account. If the share with the same name already exists, the\n   * operation fails.\n   * @param options The options parameters.\n   */\n  create(options?: ShareCreateOptionalParams): Promise<ShareCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<ShareCreateResponse>;\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified share or share snapshot.\n   * The data returned does not include the share's list of files.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: ShareGetPropertiesOptionalParams\n  ): Promise<ShareGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<ShareGetPropertiesResponse>;\n  }\n\n  /**\n   * Operation marks the specified share or share snapshot for deletion. The share or share snapshot and\n   * any files contained within it are later deleted during garbage collection.\n   * @param options The options parameters.\n   */\n  delete(options?: ShareDeleteOptionalParams): Promise<ShareDeleteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<ShareDeleteResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: ShareAcquireLeaseOptionalParams\n  ): Promise<ShareAcquireLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      acquireLeaseOperationSpec\n    ) as Promise<ShareAcquireLeaseResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: ShareReleaseLeaseOptionalParams\n  ): Promise<ShareReleaseLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      releaseLeaseOperationSpec\n    ) as Promise<ShareReleaseLeaseResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    options?: ShareChangeLeaseOptionalParams\n  ): Promise<ShareChangeLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      changeLeaseOperationSpec\n    ) as Promise<ShareChangeLeaseResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  renewLease(\n    leaseId: string,\n    options?: ShareRenewLeaseOptionalParams\n  ): Promise<ShareRenewLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      renewLeaseOperationSpec\n    ) as Promise<ShareRenewLeaseResponse>;\n  }\n\n  /**\n   * The Lease Share operation establishes and manages a lock on a share, or the specified snapshot for\n   * set and delete share operations.\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: ShareBreakLeaseOptionalParams\n  ): Promise<ShareBreakLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      breakLeaseOperationSpec\n    ) as Promise<ShareBreakLeaseResponse>;\n  }\n\n  /**\n   * Creates a read-only snapshot of a share.\n   * @param options The options parameters.\n   */\n  createSnapshot(\n    options?: ShareCreateSnapshotOptionalParams\n  ): Promise<ShareCreateSnapshotResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createSnapshotOperationSpec\n    ) as Promise<ShareCreateSnapshotResponse>;\n  }\n\n  /**\n   * Create a permission (a security descriptor).\n   * @param sharePermission A permission (a security descriptor) at the share level.\n   * @param options The options parameters.\n   */\n  createPermission(\n    sharePermission: SharePermission,\n    options?: ShareCreatePermissionOptionalParams\n  ): Promise<ShareCreatePermissionResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      sharePermission,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createPermissionOperationSpec\n    ) as Promise<ShareCreatePermissionResponse>;\n  }\n\n  /**\n   * Returns the permission (security descriptor) for a given key\n   * @param filePermissionKey Key of the permission to be set for the directory/file.\n   * @param options The options parameters.\n   */\n  getPermission(\n    filePermissionKey: string,\n    options?: ShareGetPermissionOptionalParams\n  ): Promise<ShareGetPermissionResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      filePermissionKey,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPermissionOperationSpec\n    ) as Promise<ShareGetPermissionResponse>;\n  }\n\n  /**\n   * Sets properties for the specified share.\n   * @param options The options parameters.\n   */\n  setProperties(\n    options?: ShareSetPropertiesOptionalParams\n  ): Promise<ShareSetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setPropertiesOperationSpec\n    ) as Promise<ShareSetPropertiesResponse>;\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified share.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: ShareSetMetadataOptionalParams\n  ): Promise<ShareSetMetadataResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setMetadataOperationSpec\n    ) as Promise<ShareSetMetadataResponse>;\n  }\n\n  /**\n   * Returns information about stored access policies specified on the share.\n   * @param options The options parameters.\n   */\n  getAccessPolicy(\n    options?: ShareGetAccessPolicyOptionalParams\n  ): Promise<ShareGetAccessPolicyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getAccessPolicyOperationSpec\n    ) as Promise<ShareGetAccessPolicyResponse>;\n  }\n\n  /**\n   * Sets a stored access policy for use with shared access signatures.\n   * @param options The options parameters.\n   */\n  setAccessPolicy(\n    options?: ShareSetAccessPolicyOptionalParams\n  ): Promise<ShareSetAccessPolicyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setAccessPolicyOperationSpec\n    ) as Promise<ShareSetAccessPolicyResponse>;\n  }\n\n  /**\n   * Retrieves statistics related to the share.\n   * @param options The options parameters.\n   */\n  getStatistics(\n    options?: ShareGetStatisticsOptionalParams\n  ): Promise<ShareGetStatisticsResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getStatisticsOperationSpec\n    ) as Promise<ShareGetStatisticsResponse>;\n  }\n\n  /**\n   * Restores a previously deleted Share.\n   * @param options The options parameters.\n   */\n  restore(options?: ShareRestoreOptionalParams): Promise<ShareRestoreResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      restoreOperationSpec\n    ) as Promise<ShareRestoreResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst serializer = new coreHttp.Serializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreateExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype1],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.quota,\n    Parameters.accessTier,\n    Parameters.enabledProtocols,\n    Parameters.rootSquash\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ShareDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareDeleteExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.deleteSnapshots\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareAcquireLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n    Parameters.requestId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareReleaseLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.leaseId1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareChangeLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.proposedLeaseId,\n    Parameters.requestId,\n    Parameters.leaseId1,\n    Parameters.action2\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst renewLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareRenewLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareRenewLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.requestId,\n    Parameters.leaseId1,\n    Parameters.action3\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.ShareBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareBreakLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.shareSnapshot,\n    Parameters.comp2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.requestId,\n    Parameters.action4,\n    Parameters.breakPeriod\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst createSnapshotOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreateSnapshotHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreateSnapshotExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp3\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst createPermissionOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareCreatePermissionHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareCreatePermissionExceptionHeaders\n    }\n  },\n  requestBody: Parameters.sharePermission,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp4\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version\n  ],\n  isXML: false,\n  contentType: \"application/xml; charset=utf-8\",\n  serializer: xmlSerializer\n};\nconst getPermissionOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SharePermission,\n      headersMapper: Mappers.ShareGetPermissionHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetPermissionExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp4\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept2,\n    Parameters.filePermissionKey\n  ],\n  serializer\n};\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype1\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.quota,\n    Parameters.accessTier,\n    Parameters.rootSquash,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetMetadataExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp5\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"SignedIdentifier\" }\n          }\n        },\n        serializedName: \"SignedIdentifiers\",\n        xmlName: \"SignedIdentifiers\",\n        xmlIsWrapped: true,\n        xmlElementName: \"SignedIdentifier\"\n      },\n      headersMapper: Mappers.ShareGetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetAccessPolicyExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp6\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setAccessPolicyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.ShareSetAccessPolicyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareSetAccessPolicyExceptionHeaders\n    }\n  },\n  requestBody: Parameters.shareAcl,\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp6\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.contentType,\n    Parameters.accept,\n    Parameters.version,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  contentType: \"application/xml; charset=utf-8\",\n  mediaType: \"xml\",\n  serializer: xmlSerializer\n};\nconst getStatisticsOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ShareStats,\n      headersMapper: Mappers.ShareGetStatisticsHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareGetStatisticsExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp7\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst restoreOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.ShareRestoreHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.ShareRestoreExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype1,\n    Parameters.comp8\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.requestId,\n    Parameters.deletedShareName,\n    Parameters.deletedShareVersion\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  DirectoryCreateOptionalParams,\n  DirectoryCreateResponse,\n  DirectoryGetPropertiesOptionalParams,\n  DirectoryGetPropertiesResponse,\n  DirectoryDeleteOptionalParams,\n  DirectoryDeleteResponse,\n  DirectorySetPropertiesOptionalParams,\n  DirectorySetPropertiesResponse,\n  DirectorySetMetadataOptionalParams,\n  DirectorySetMetadataResponse,\n  DirectoryListFilesAndDirectoriesSegmentOptionalParams,\n  DirectoryListFilesAndDirectoriesSegmentResponse,\n  DirectoryListHandlesOptionalParams,\n  DirectoryListHandlesResponse,\n  DirectoryForceCloseHandlesOptionalParams,\n  DirectoryForceCloseHandlesResponse,\n  DirectoryRenameOptionalParams,\n  DirectoryRenameResponse\n} from \"../models\";\n\n/** Class representing a Directory. */\nexport class Directory {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class Directory class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new directory under the specified share or parent directory.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   *                       ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The options parameters.\n   */\n  create(\n    fileAttributes: string,\n    fileCreatedOn: string,\n    fileLastWriteOn: string,\n    options?: DirectoryCreateOptionalParams\n  ): Promise<DirectoryCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      fileAttributes,\n      fileCreatedOn,\n      fileLastWriteOn,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<DirectoryCreateResponse>;\n  }\n\n  /**\n   * Returns all system properties for the specified directory, and can also be used to check the\n   * existence of a directory. The data returned does not include the files in the directory or any\n   * subdirectories.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: DirectoryGetPropertiesOptionalParams\n  ): Promise<DirectoryGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<DirectoryGetPropertiesResponse>;\n  }\n\n  /**\n   * Removes the specified empty directory. Note that the directory must be empty before it can be\n   * deleted.\n   * @param options The options parameters.\n   */\n  delete(\n    options?: DirectoryDeleteOptionalParams\n  ): Promise<DirectoryDeleteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<DirectoryDeleteResponse>;\n  }\n\n  /**\n   * Sets properties on the directory.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   *                       ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The options parameters.\n   */\n  setProperties(\n    fileAttributes: string,\n    fileCreatedOn: string,\n    fileLastWriteOn: string,\n    options?: DirectorySetPropertiesOptionalParams\n  ): Promise<DirectorySetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      fileAttributes,\n      fileCreatedOn,\n      fileLastWriteOn,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setPropertiesOperationSpec\n    ) as Promise<DirectorySetPropertiesResponse>;\n  }\n\n  /**\n   * Updates user defined metadata for the specified directory.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: DirectorySetMetadataOptionalParams\n  ): Promise<DirectorySetMetadataResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setMetadataOperationSpec\n    ) as Promise<DirectorySetMetadataResponse>;\n  }\n\n  /**\n   * Returns a list of files or directories under the specified share or directory. It lists the contents\n   * only for a single level of the directory hierarchy.\n   * @param options The options parameters.\n   */\n  listFilesAndDirectoriesSegment(\n    options?: DirectoryListFilesAndDirectoriesSegmentOptionalParams\n  ): Promise<DirectoryListFilesAndDirectoriesSegmentResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listFilesAndDirectoriesSegmentOperationSpec\n    ) as Promise<DirectoryListFilesAndDirectoriesSegmentResponse>;\n  }\n\n  /**\n   * Lists handles for directory.\n   * @param options The options parameters.\n   */\n  listHandles(\n    options?: DirectoryListHandlesOptionalParams\n  ): Promise<DirectoryListHandlesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listHandlesOperationSpec\n    ) as Promise<DirectoryListHandlesResponse>;\n  }\n\n  /**\n   * Closes all handles open for given directory.\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterisk (‘*’) is\n   *                 a wildcard that specifies all handles.\n   * @param options The options parameters.\n   */\n  forceCloseHandles(\n    handleId: string,\n    options?: DirectoryForceCloseHandlesOptionalParams\n  ): Promise<DirectoryForceCloseHandlesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      handleId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      forceCloseHandlesOperationSpec\n    ) as Promise<DirectoryForceCloseHandlesResponse>;\n  }\n\n  /**\n   * Renames a directory\n   * @param renameSource Required. Specifies the URI-style path of the source file, up to 2 KB in length.\n   * @param options The options parameters.\n   */\n  rename(\n    renameSource: string,\n    options?: DirectoryRenameOptionalParams\n  ): Promise<DirectoryRenameResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      renameSource,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      renameOperationSpec\n    ) as Promise<DirectoryRenameResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.DirectoryCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryCreateExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectoryGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.shareSnapshot,\n    Parameters.restype2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.DirectoryDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryDeleteExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.restype2],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectorySetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectorySetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.comp,\n    Parameters.timeoutInSeconds,\n    Parameters.restype2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectorySetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectorySetMetadataExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp5,\n    Parameters.restype2\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listFilesAndDirectoriesSegmentOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListFilesAndDirectoriesSegmentResponse,\n      headersMapper: Mappers.DirectoryListFilesAndDirectoriesSegmentHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper:\n        Mappers.DirectoryListFilesAndDirectoriesSegmentExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp1,\n    Parameters.prefix,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.shareSnapshot,\n    Parameters.restype2,\n    Parameters.include1\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.includeExtendedInfo\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listHandlesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListHandlesResponse,\n      headersMapper: Mappers.DirectoryListHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryListHandlesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.shareSnapshot,\n    Parameters.comp9\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.recursive\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst forceCloseHandlesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectoryForceCloseHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryForceCloseHandlesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.shareSnapshot,\n    Parameters.comp10\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.recursive,\n    Parameters.handleId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst renameOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.DirectoryRenameHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.DirectoryRenameExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.restype2,\n    Parameters.comp11\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.renameSource,\n    Parameters.replaceIfExists,\n    Parameters.ignoreReadOnly,\n    Parameters.sourceLeaseId,\n    Parameters.destinationLeaseId,\n    Parameters.fileAttributes1,\n    Parameters.fileCreationTime,\n    Parameters.fileLastWriteTime\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { StorageClientContext } from \"../storageClientContext\";\nimport {\n  FileCreateOptionalParams,\n  FileCreateResponse,\n  FileDownloadOptionalParams,\n  FileDownloadResponse,\n  FileGetPropertiesOptionalParams,\n  FileGetPropertiesResponse,\n  FileDeleteOptionalParams,\n  FileDeleteResponse,\n  FileSetHttpHeadersOptionalParams,\n  FileSetHttpHeadersResponse,\n  FileSetMetadataOptionalParams,\n  FileSetMetadataResponse,\n  FileAcquireLeaseOptionalParams,\n  FileAcquireLeaseResponse,\n  FileReleaseLeaseOptionalParams,\n  FileReleaseLeaseResponse,\n  FileChangeLeaseOptionalParams,\n  FileChangeLeaseResponse,\n  FileBreakLeaseOptionalParams,\n  FileBreakLeaseResponse,\n  FileRangeWriteType,\n  FileUploadRangeOptionalParams,\n  FileUploadRangeResponse,\n  FileUploadRangeFromURLOptionalParams,\n  FileUploadRangeFromURLResponse,\n  FileGetRangeListOptionalParams,\n  FileGetRangeListResponse,\n  FileStartCopyOptionalParams,\n  FileStartCopyResponse,\n  FileAbortCopyOptionalParams,\n  FileAbortCopyResponse,\n  FileListHandlesOptionalParams,\n  FileListHandlesResponse,\n  FileForceCloseHandlesOptionalParams,\n  FileForceCloseHandlesResponse,\n  FileRenameOptionalParams,\n  FileRenameResponse\n} from \"../models\";\n\n/** Class representing a File. */\nexport class File {\n  private readonly client: StorageClientContext;\n\n  /**\n   * Initialize a new instance of the class File class.\n   * @param client Reference to the service client\n   */\n  constructor(client: StorageClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a new file or replaces a file. Note it only initializes the file with no content.\n   * @param fileContentLength Specifies the maximum size for the file, up to 4 TB.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   *                       ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The options parameters.\n   */\n  create(\n    fileContentLength: number,\n    fileAttributes: string,\n    fileCreatedOn: string,\n    fileLastWriteOn: string,\n    options?: FileCreateOptionalParams\n  ): Promise<FileCreateResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      fileContentLength,\n      fileAttributes,\n      fileCreatedOn,\n      fileLastWriteOn,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      createOperationSpec\n    ) as Promise<FileCreateResponse>;\n  }\n\n  /**\n   * Reads or downloads a file from the system, including its metadata and properties.\n   * @param options The options parameters.\n   */\n  download(\n    options?: FileDownloadOptionalParams\n  ): Promise<FileDownloadResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      downloadOperationSpec\n    ) as Promise<FileDownloadResponse>;\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties for the file. It\n   * does not return the content of the file.\n   * @param options The options parameters.\n   */\n  getProperties(\n    options?: FileGetPropertiesOptionalParams\n  ): Promise<FileGetPropertiesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getPropertiesOperationSpec\n    ) as Promise<FileGetPropertiesResponse>;\n  }\n\n  /**\n   * removes the file from the storage account.\n   * @param options The options parameters.\n   */\n  delete(options?: FileDeleteOptionalParams): Promise<FileDeleteResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      deleteOperationSpec\n    ) as Promise<FileDeleteResponse>;\n  }\n\n  /**\n   * Sets HTTP headers on the file.\n   * @param fileAttributes If specified, the provided file attributes shall be set. Default value:\n   *                       ‘Archive’ for file and ‘Directory’ for directory. ‘None’ can also be specified as default.\n   * @param fileCreatedOn Creation time for the file/directory. Default value: Now.\n   * @param fileLastWriteOn Last write time for the file/directory. Default value: Now.\n   * @param options The options parameters.\n   */\n  setHttpHeaders(\n    fileAttributes: string,\n    fileCreatedOn: string,\n    fileLastWriteOn: string,\n    options?: FileSetHttpHeadersOptionalParams\n  ): Promise<FileSetHttpHeadersResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      fileAttributes,\n      fileCreatedOn,\n      fileLastWriteOn,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setHttpHeadersOperationSpec\n    ) as Promise<FileSetHttpHeadersResponse>;\n  }\n\n  /**\n   * Updates user-defined metadata for the specified file.\n   * @param options The options parameters.\n   */\n  setMetadata(\n    options?: FileSetMetadataOptionalParams\n  ): Promise<FileSetMetadataResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      setMetadataOperationSpec\n    ) as Promise<FileSetMetadataResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  acquireLease(\n    options?: FileAcquireLeaseOptionalParams\n  ): Promise<FileAcquireLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      acquireLeaseOperationSpec\n    ) as Promise<FileAcquireLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  releaseLease(\n    leaseId: string,\n    options?: FileReleaseLeaseOptionalParams\n  ): Promise<FileReleaseLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      releaseLeaseOperationSpec\n    ) as Promise<FileReleaseLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param leaseId Specifies the current lease ID on the resource.\n   * @param options The options parameters.\n   */\n  changeLease(\n    leaseId: string,\n    options?: FileChangeLeaseOptionalParams\n  ): Promise<FileChangeLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      leaseId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      changeLeaseOperationSpec\n    ) as Promise<FileChangeLeaseResponse>;\n  }\n\n  /**\n   * [Update] The Lease File operation establishes and manages a lock on a file for write and delete\n   * operations\n   * @param options The options parameters.\n   */\n  breakLease(\n    options?: FileBreakLeaseOptionalParams\n  ): Promise<FileBreakLeaseResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      breakLeaseOperationSpec\n    ) as Promise<FileBreakLeaseResponse>;\n  }\n\n  /**\n   * Upload a range of bytes to a file.\n   * @param range Specifies the range of bytes to be written. Both the start and end of the range must be\n   *              specified. For an update operation, the range can be up to 4 MB in size. For a clear operation, the\n   *              range can be up to the value of the file's full size. The File service accepts only a single byte\n   *              range for the Range and 'x-ms-range' headers, and the byte range must be specified in the following\n   *              format: bytes=startByte-endByte.\n   * @param fileRangeWrite Specify one of the following options: - Update: Writes the bytes specified by\n   *                       the request body into the specified range. The Range and Content-Length headers must match to\n   *                       perform the update. - Clear: Clears the specified range and releases the space used in storage for\n   *                       that range. To clear a range, set the Content-Length header to zero, and set the Range header to a\n   *                       value that indicates the range to clear, up to maximum file size.\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When the\n   *                      x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param options The options parameters.\n   */\n  uploadRange(\n    range: string,\n    fileRangeWrite: FileRangeWriteType,\n    contentLength: number,\n    options?: FileUploadRangeOptionalParams\n  ): Promise<FileUploadRangeResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      range,\n      fileRangeWrite,\n      contentLength,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      uploadRangeOperationSpec\n    ) as Promise<FileUploadRangeResponse>;\n  }\n\n  /**\n   * Upload a range of bytes to a file where the contents are read from a URL.\n   * @param range Writes data to the specified byte range in the file.\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file\n   *                   to another file within the same storage account, you may use Shared Key to authenticate the source\n   *                   file. If you are copying a file from another storage account, or if you are copying a blob from the\n   *                   same storage account or another storage account, then you must authenticate the source file or blob\n   *                   using a shared access signature. If the source is a public blob, no authentication is required to\n   *                   perform the copy operation. A file in a share snapshot can also be specified as a copy source.\n   * @param contentLength Specifies the number of bytes being transmitted in the request body. When the\n   *                      x-ms-write header is set to clear, the value of this header must be set to zero.\n   * @param options The options parameters.\n   */\n  uploadRangeFromURL(\n    range: string,\n    copySource: string,\n    contentLength: number,\n    options?: FileUploadRangeFromURLOptionalParams\n  ): Promise<FileUploadRangeFromURLResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      range,\n      copySource,\n      contentLength,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      uploadRangeFromURLOperationSpec\n    ) as Promise<FileUploadRangeFromURLResponse>;\n  }\n\n  /**\n   * Returns the list of valid ranges for a file.\n   * @param options The options parameters.\n   */\n  getRangeList(\n    options?: FileGetRangeListOptionalParams\n  ): Promise<FileGetRangeListResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      getRangeListOperationSpec\n    ) as Promise<FileGetRangeListResponse>;\n  }\n\n  /**\n   * Copies a blob or file to a destination file within the storage account.\n   * @param copySource Specifies the URL of the source file or blob, up to 2 KB in length. To copy a file\n   *                   to another file within the same storage account, you may use Shared Key to authenticate the source\n   *                   file. If you are copying a file from another storage account, or if you are copying a blob from the\n   *                   same storage account or another storage account, then you must authenticate the source file or blob\n   *                   using a shared access signature. If the source is a public blob, no authentication is required to\n   *                   perform the copy operation. A file in a share snapshot can also be specified as a copy source.\n   * @param options The options parameters.\n   */\n  startCopy(\n    copySource: string,\n    options?: FileStartCopyOptionalParams\n  ): Promise<FileStartCopyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      copySource,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      startCopyOperationSpec\n    ) as Promise<FileStartCopyResponse>;\n  }\n\n  /**\n   * Aborts a pending Copy File operation, and leaves a destination file with zero length and full\n   * metadata.\n   * @param copyId The copy identifier provided in the x-ms-copy-id header of the original Copy File\n   *               operation.\n   * @param options The options parameters.\n   */\n  abortCopy(\n    copyId: string,\n    options?: FileAbortCopyOptionalParams\n  ): Promise<FileAbortCopyResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      copyId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      abortCopyOperationSpec\n    ) as Promise<FileAbortCopyResponse>;\n  }\n\n  /**\n   * Lists handles for file\n   * @param options The options parameters.\n   */\n  listHandles(\n    options?: FileListHandlesOptionalParams\n  ): Promise<FileListHandlesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      listHandlesOperationSpec\n    ) as Promise<FileListHandlesResponse>;\n  }\n\n  /**\n   * Closes all handles open for given file\n   * @param handleId Specifies handle ID opened on the file or directory to be closed. Asterisk (‘*’) is\n   *                 a wildcard that specifies all handles.\n   * @param options The options parameters.\n   */\n  forceCloseHandles(\n    handleId: string,\n    options?: FileForceCloseHandlesOptionalParams\n  ): Promise<FileForceCloseHandlesResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      handleId,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      forceCloseHandlesOperationSpec\n    ) as Promise<FileForceCloseHandlesResponse>;\n  }\n\n  /**\n   * Renames a file\n   * @param renameSource Required. Specifies the URI-style path of the source file, up to 2 KB in length.\n   * @param options The options parameters.\n   */\n  rename(\n    renameSource: string,\n    options?: FileRenameOptionalParams\n  ): Promise<FileRenameResponse> {\n    const operationArguments: coreHttp.OperationArguments = {\n      renameSource,\n      options: coreHttp.operationOptionsToRequestOptionsBase(options || {})\n    };\n    return this.client.sendOperationRequest(\n      operationArguments,\n      renameOperationSpec\n    ) as Promise<FileRenameResponse>;\n  }\n}\n// Operation Specifications\nconst xmlSerializer = new coreHttp.Serializer(Mappers, /* isXml */ true);\n\nconst createOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.FileCreateHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileCreateExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn,\n    Parameters.fileContentLength,\n    Parameters.fileTypeConstant,\n    Parameters.fileContentType,\n    Parameters.fileContentEncoding,\n    Parameters.fileContentLanguage,\n    Parameters.fileCacheControl,\n    Parameters.fileContentMD5,\n    Parameters.fileContentDisposition\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst downloadOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.FileDownloadHeaders\n    },\n    206: {\n      bodyMapper: {\n        type: { name: \"Stream\" },\n        serializedName: \"parsedResponse\"\n      },\n      headersMapper: Mappers.FileDownloadHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileDownloadExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.range,\n    Parameters.rangeGetContentMD5\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getPropertiesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"HEAD\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileGetPropertiesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileGetPropertiesExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.shareSnapshot],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst deleteOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"DELETE\",\n  responses: {\n    202: {\n      headersMapper: Mappers.FileDeleteHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileDeleteExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setHttpHeadersOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileSetHttpHeadersHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSetHttpHeadersExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.comp, Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes,\n    Parameters.fileCreatedOn,\n    Parameters.fileLastWriteOn,\n    Parameters.fileContentType,\n    Parameters.fileContentEncoding,\n    Parameters.fileContentLanguage,\n    Parameters.fileCacheControl,\n    Parameters.fileContentMD5,\n    Parameters.fileContentDisposition,\n    Parameters.fileContentLength1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst setMetadataOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileSetMetadataHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileSetMetadataExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp5],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst acquireLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.FileAcquireLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileAcquireLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.action,\n    Parameters.duration,\n    Parameters.proposedLeaseId,\n    Parameters.requestId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst releaseLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileReleaseLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileReleaseLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.requestId,\n    Parameters.action1,\n    Parameters.leaseId1\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst changeLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileChangeLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileChangeLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.proposedLeaseId,\n    Parameters.requestId,\n    Parameters.leaseId1,\n    Parameters.action2\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst breakLeaseOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.FileBreakLeaseHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileBreakLeaseExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp2],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.requestId,\n    Parameters.action4\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst uploadRangeOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.FileUploadRangeHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileUploadRangeExceptionHeaders\n    }\n  },\n  requestBody: Parameters.body,\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp12],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.leaseId,\n    Parameters.contentType1,\n    Parameters.accept3,\n    Parameters.range1,\n    Parameters.fileRangeWrite,\n    Parameters.contentLength,\n    Parameters.contentMD5\n  ],\n  contentType: \"application/octet-stream\",\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst uploadRangeFromURLOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    201: {\n      headersMapper: Mappers.FileUploadRangeFromURLHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileUploadRangeFromURLExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp12],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.range1,\n    Parameters.contentLength,\n    Parameters.copySource,\n    Parameters.sourceRange,\n    Parameters.fileRangeWriteFromUrl,\n    Parameters.sourceContentCrc64,\n    Parameters.sourceIfMatchCrc64,\n    Parameters.sourceIfNoneMatchCrc64,\n    Parameters.copySourceAuthorization\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst getRangeListOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ShareFileRangeList,\n      headersMapper: Mappers.FileGetRangeListHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileGetRangeListExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.shareSnapshot,\n    Parameters.comp13,\n    Parameters.prevsharesnapshot\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.range\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst startCopyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    202: {\n      headersMapper: Mappers.FileStartCopyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileStartCopyExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.leaseId,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.fileAttributes1,\n    Parameters.fileCreationTime,\n    Parameters.fileLastWriteTime,\n    Parameters.copySource,\n    Parameters.filePermissionCopyMode,\n    Parameters.ignoreReadOnly1,\n    Parameters.setArchiveAttribute\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst abortCopyOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    204: {\n      headersMapper: Mappers.FileAbortCopyHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileAbortCopyExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.comp14,\n    Parameters.copyId\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.leaseId,\n    Parameters.copyActionAbortConstant\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst listHandlesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ListHandlesResponse,\n      headersMapper: Mappers.FileListHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileListHandlesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.maxResults,\n    Parameters.shareSnapshot,\n    Parameters.comp9\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [Parameters.version, Parameters.accept1],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst forceCloseHandlesOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileForceCloseHandlesHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileForceCloseHandlesExceptionHeaders\n    }\n  },\n  queryParameters: [\n    Parameters.timeoutInSeconds,\n    Parameters.marker,\n    Parameters.shareSnapshot,\n    Parameters.comp10\n  ],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.handleId\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\nconst renameOperationSpec: coreHttp.OperationSpec = {\n  path: \"/{shareName}/{directory}/{fileName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      headersMapper: Mappers.FileRenameHeaders\n    },\n    default: {\n      bodyMapper: Mappers.StorageError,\n      headersMapper: Mappers.FileRenameExceptionHeaders\n    }\n  },\n  queryParameters: [Parameters.timeoutInSeconds, Parameters.comp11],\n  urlParameters: [Parameters.url],\n  headerParameters: [\n    Parameters.version,\n    Parameters.accept1,\n    Parameters.metadata,\n    Parameters.filePermission,\n    Parameters.filePermissionKey1,\n    Parameters.renameSource,\n    Parameters.replaceIfExists,\n    Parameters.ignoreReadOnly,\n    Parameters.sourceLeaseId,\n    Parameters.destinationLeaseId,\n    Parameters.fileAttributes1,\n    Parameters.fileCreationTime,\n    Parameters.fileLastWriteTime\n  ],\n  isXML: true,\n  serializer: xmlSerializer\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createClientLogger } from \"@azure/logger\";\n\n/**\n * The `@azure/logger` configuration for this package.\n */\nexport const logger = createClientLogger(\"storage-file-share\");\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource,\n} from \"@azure/core-http\";\n\nimport { HeaderConstants, URLConstants } from \"../utils/constants\";\nimport { setURLParameter } from \"../utils/utils.common\";\n\n/**\n * StorageBrowserPolicy will handle differences between Node.js and browser runtime, including:\n *\n * 1. Browsers cache GET/HEAD requests by adding conditional headers such as 'IF_MODIFIED_SINCE'.\n * StorageBrowserPolicy is a policy used to add a timestamp query to GET/HEAD request URL\n * thus avoid the browser cache.\n *\n * 2. Remove cookie header for security\n *\n * 3. Remove content-length header to avoid browsers warning\n */\nexport class StorageBrowserPolicy extends BaseRequestPolicy {\n  /**\n   * Creates an instance of StorageBrowserPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      return this._nextPolicy.sendRequest(request);\n    }\n\n    if (request.method.toUpperCase() === \"GET\" || request.method.toUpperCase() === \"HEAD\") {\n      request.url = setURLParameter(\n        request.url,\n        URLConstants.Parameters.FORCE_BROWSER_NO_CACHE,\n        new Date().getTime().toString()\n      );\n    }\n\n    request.headers.remove(HeaderConstants.COOKIE);\n\n    // According to XHR standards, content-length should be fully controlled by browsers\n    request.headers.remove(HeaderConstants.CONTENT_LENGTH);\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageBrowserPolicy } from \"./policies/StorageBrowserPolicy\";\nexport { StorageBrowserPolicy };\n\n/**\n * StorageBrowserPolicyFactory is a factory class helping generating BrowserPolicy objects.\n */\nexport class StorageBrowserPolicyFactory implements RequestPolicyFactory {\n  /**\n   * Creates a StorageBrowserPolicyFactory object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageBrowserPolicy {\n    return new StorageBrowserPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  AbortSignalLike,\n  BaseRequestPolicy,\n  HttpOperationResponse,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  RestError,\n  WebResource,\n} from \"@azure/core-http\";\n\nimport { AbortError } from \"@azure/abort-controller\";\n\nimport { StorageRetryOptions } from \"../StorageRetryPolicyFactory\";\nimport { URLConstants } from \"../utils/constants\";\nimport { delay, setURLParameter } from \"../utils/utils.common\";\nimport { logger } from \"../log\";\n\n/**\n * A factory method used to generated a RetryPolicy factory.\n *\n * @param retryOptions -\n */\nexport function NewStorageRetryPolicyFactory(\n  retryOptions?: StorageRetryOptions\n): RequestPolicyFactory {\n  return {\n    create: (nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy => {\n      return new StorageRetryPolicy(nextPolicy, options, retryOptions);\n    },\n  };\n}\n\n/**\n * RetryPolicy types.\n */\nexport enum StorageRetryPolicyType {\n  /**\n   * Exponential retry. Retry time delay grows exponentially.\n   */\n  EXPONENTIAL,\n  /**\n   * Linear retry. Retry time delay grows linearly.\n   */\n  FIXED,\n}\n\n// Default values of RetryOptions\nconst DEFAULT_RETRY_OPTIONS: StorageRetryOptions = {\n  maxRetryDelayInMs: 120 * 1000,\n  maxTries: 4,\n  retryDelayInMs: 4 * 1000,\n  retryPolicyType: StorageRetryPolicyType.EXPONENTIAL,\n  tryTimeoutInMs: undefined, // Use server side default timeout strategy\n};\n\nconst RETRY_ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * Retry policy with exponential retry and linear retry implemented.\n */\nexport class StorageRetryPolicy extends BaseRequestPolicy {\n  /**\n   * RetryOptions.\n   */\n  private readonly retryOptions: StorageRetryOptions;\n\n  /**\n   * Creates an instance of RetryPolicy.\n   *\n   * @param nextPolicy -\n   * @param options -\n   * @param retryOptions -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    retryOptions: StorageRetryOptions = DEFAULT_RETRY_OPTIONS\n  ) {\n    super(nextPolicy, options);\n\n    // Initialize retry options\n    this.retryOptions = {\n      retryPolicyType: retryOptions.retryPolicyType\n        ? retryOptions.retryPolicyType\n        : DEFAULT_RETRY_OPTIONS.retryPolicyType,\n\n      maxTries:\n        retryOptions.maxTries && retryOptions.maxTries >= 1\n          ? Math.floor(retryOptions.maxTries)\n          : DEFAULT_RETRY_OPTIONS.maxTries,\n\n      tryTimeoutInMs:\n        retryOptions.tryTimeoutInMs && retryOptions.tryTimeoutInMs >= 0\n          ? retryOptions.tryTimeoutInMs\n          : DEFAULT_RETRY_OPTIONS.tryTimeoutInMs,\n\n      retryDelayInMs:\n        retryOptions.retryDelayInMs && retryOptions.retryDelayInMs >= 0\n          ? Math.min(\n              retryOptions.retryDelayInMs,\n              retryOptions.maxRetryDelayInMs\n                ? retryOptions.maxRetryDelayInMs\n                : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs!\n            )\n          : DEFAULT_RETRY_OPTIONS.retryDelayInMs,\n\n      maxRetryDelayInMs:\n        retryOptions.maxRetryDelayInMs && retryOptions.maxRetryDelayInMs >= 0\n          ? retryOptions.maxRetryDelayInMs\n          : DEFAULT_RETRY_OPTIONS.maxRetryDelayInMs,\n    };\n  }\n\n  /**\n   * Sends request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this.attemptSendRequest(request, false, 1);\n  }\n\n  /**\n   * Decide and perform next retry. Won't mutate request parameter.\n   *\n   * @param request -\n   * @param response -\n   * @param secondaryHas404 -  If attempt was against the secondary & it returned a StatusNotFound (404), then\n   *                                   the resource was not found. This may be due to replication delay. So, in this\n   *                                   case, we'll never try the secondary again for this operation.\n   * @param attempt -           How many retries has been attempted to performed, starting from 1, which includes\n   *                                   the attempt will be performed by this method call.\n   */\n  protected async attemptSendRequest(\n    request: WebResource,\n    secondaryHas404: boolean,\n    attempt: number\n  ): Promise<HttpOperationResponse> {\n    const newRequest: WebResource = request.clone();\n\n    const isPrimaryRetry = true; // File doesn't support secondary endpoint\n\n    // Set the server-side timeout query parameter \"timeout=[seconds]\"\n    if (this.retryOptions.tryTimeoutInMs) {\n      newRequest.url = setURLParameter(\n        newRequest.url,\n        URLConstants.Parameters.TIMEOUT,\n        Math.floor(this.retryOptions.tryTimeoutInMs! / 1000).toString()\n      );\n    }\n\n    let response: HttpOperationResponse | undefined;\n    try {\n      logger.info(`RetryPolicy: =====> Try=${attempt} ${isPrimaryRetry ? \"Primary\" : \"Secondary\"}`);\n      response = await this._nextPolicy.sendRequest(newRequest);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response)) {\n        return response;\n      }\n\n      secondaryHas404 = secondaryHas404 || (!isPrimaryRetry && response.status === 404);\n    } catch (err) {\n      logger.error(`RetryPolicy: Caught error, message: ${err.message}, code: ${err.code}`);\n      if (!this.shouldRetry(isPrimaryRetry, attempt, response, err)) {\n        throw err;\n      }\n    }\n\n    await this.delay(isPrimaryRetry, attempt, request.abortSignal);\n    return this.attemptSendRequest(request, secondaryHas404, ++attempt);\n  }\n\n  /**\n   * Decide whether to retry according to last HTTP response and retry counters.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param response -\n   * @param err -\n   */\n  protected shouldRetry(\n    isPrimaryRetry: boolean,\n    attempt: number,\n    response?: HttpOperationResponse,\n    err?: RestError\n  ): boolean {\n    if (attempt >= this.retryOptions.maxTries!) {\n      logger.info(\n        `RetryPolicy: Attempt(s) ${attempt} >= maxTries ${this.retryOptions\n          .maxTries!}, no further try.`\n      );\n      return false;\n    }\n\n    // Handle network failures, you may need to customize the list when you implement\n    // your own http client\n    const retriableErrors = [\n      \"ETIMEDOUT\",\n      \"ESOCKETTIMEDOUT\",\n      \"ECONNREFUSED\",\n      \"ECONNRESET\",\n      \"ENOENT\",\n      \"ENOTFOUND\",\n      \"TIMEOUT\",\n      \"EPIPE\",\n      \"REQUEST_SEND_ERROR\", // For default xhr based http client provided in ms-rest-js\n    ];\n    if (err) {\n      for (const retriableError of retriableErrors) {\n        if (\n          err.name.toUpperCase().includes(retriableError) ||\n          err.message.toUpperCase().includes(retriableError) ||\n          (err.code && err.code.toString().toUpperCase() === retriableError)\n        ) {\n          logger.info(`RetryPolicy: Network error ${retriableError} found, will retry.`);\n          return true;\n        }\n      }\n    }\n\n    // If attempt was against the secondary & it returned a StatusNotFound (404), then\n    // the resource was not found. This may be due to replication delay. So, in this\n    // case, we'll never try the secondary again for this operation.\n    if (response || err) {\n      const statusCode = response ? response.status : err ? err.statusCode : 0;\n      if (!isPrimaryRetry && statusCode === 404) {\n        logger.info(`RetryPolicy: Secondary access with 404, will retry.`);\n        return true;\n      }\n\n      // Server internal error or server timeout\n      if (statusCode === 503 || statusCode === 500) {\n        logger.info(`RetryPolicy: Will retry for status code ${statusCode}.`);\n        return true;\n      }\n    }\n\n    if (err?.code === \"PARSE_ERROR\" && err?.message.startsWith(`Error \"Error: Unclosed root tag`)) {\n      logger.info(\n        \"RetryPolicy: Incomplete XML response likely due to service timeout, will retry.\"\n      );\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Delay a calculated time between retries.\n   *\n   * @param isPrimaryRetry -\n   * @param attempt -\n   * @param abortSignal -\n   */\n  private async delay(isPrimaryRetry: boolean, attempt: number, abortSignal?: AbortSignalLike) {\n    let delayTimeInMs: number = 0;\n\n    if (isPrimaryRetry) {\n      switch (this.retryOptions.retryPolicyType) {\n        case StorageRetryPolicyType.EXPONENTIAL:\n          delayTimeInMs = Math.min(\n            (Math.pow(2, attempt - 1) - 1) * this.retryOptions.retryDelayInMs!,\n            this.retryOptions.maxRetryDelayInMs!\n          );\n          break;\n        case StorageRetryPolicyType.FIXED:\n          delayTimeInMs = this.retryOptions.retryDelayInMs!;\n          break;\n      }\n    } else {\n      delayTimeInMs = Math.random() * 1000;\n    }\n\n    logger.info(`RetryPolicy: Delay for ${delayTimeInMs}ms`);\n    return delay(delayTimeInMs, abortSignal, RETRY_ABORT_ERROR);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { StorageRetryPolicy, StorageRetryPolicyType } from \"./policies/StorageRetryPolicy\";\n\nexport { StorageRetryPolicyType, StorageRetryPolicy };\n\n/**\n * Retry options interface.\n */\nexport interface StorageRetryOptions {\n  /**\n   * Optional. StorageRetryPolicyType, default is exponential retry policy.\n   */\n  readonly retryPolicyType?: StorageRetryPolicyType;\n\n  /**\n   * Optional. Max try number of attempts, default is 4.\n   * A value of 1 means 1 try and no retries.\n   * A value smaller than 1 means default retry number of attempts.\n   */\n  readonly maxTries?: number;\n\n  /**\n   * Optional. Indicates the maximum time in ms allowed for any single try of an HTTP request.\n   * A value of zero or undefined means that you accept our default timeout, 60s or 60 * 1000ms.\n   *\n   * NOTE: When transferring large amounts of data, the default TryTimeout will probably\n   * not be sufficient. You should override this value based on the bandwidth available to\n   * the host machine and proximity to the Storage service. A good starting point may be something\n   * like (60 seconds per MB of anticipated-payload-size)\n   */\n  readonly tryTimeoutInMs?: number;\n\n  /**\n   * Optional. Specifies the amount of delay to use before retrying an operation (default is 4s or 4 * 1000ms).\n   * The delay increases (exponentially or linearly) with each retry up to a maximum specified by\n   * maxRetryDelayInMs. If you specify 0, then you must also specify 0 for maxRetryDelayInMs.\n   */\n  readonly retryDelayInMs?: number;\n\n  /**\n   * Optional. Specifies the maximum delay allowed before retrying an operation (default is 120s or 120 * 1000ms).\n   * If you specify 0, then you must also specify 0 for retryDelayInMs.\n   */\n  readonly maxRetryDelayInMs?: number;\n}\n\n/**\n * StorageRetryPolicyFactory is a factory class helping generating StorageRetryPolicy objects.\n */\nexport class StorageRetryPolicyFactory implements RequestPolicyFactory {\n  private retryOptions?: StorageRetryOptions;\n\n  /**\n   * Creates an instance of StorageRetryPolicyFactory.\n   * @param retryOptions -\n   */\n  constructor(retryOptions?: StorageRetryOptions) {\n    this.retryOptions = retryOptions;\n  }\n\n  /**\n   * Creates a StorageRetryPolicy object.\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): StorageRetryPolicy {\n    return new StorageRetryPolicy(nextPolicy, options, this.retryOptions);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  HttpHeaders,\n  HttpOperationResponse,\n  isNode,\n  RequestPolicy,\n  RequestPolicyOptions,\n  WebResource,\n} from \"@azure/core-http\";\n\nimport { HeaderConstants } from \"../utils/constants\";\n\n/**\n * TelemetryPolicy is a policy used to tag user-agent header for every requests.\n */\nexport class TelemetryPolicy extends BaseRequestPolicy {\n  /**\n   * Telemetry string.\n   */\n  public readonly telemetry: string;\n\n  /**\n   * Creates an instance of TelemetryPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param telemetry -\n   */\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions, telemetry: string) {\n    super(nextPolicy, options);\n    this.telemetry = telemetry;\n  }\n\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public async sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    if (isNode) {\n      if (!request.headers) {\n        request.headers = new HttpHeaders();\n      }\n      if (!request.headers.get(HeaderConstants.USER_AGENT)) {\n        request.headers.set(HeaderConstants.USER_AGENT, this.telemetry);\n      }\n    }\n\n    return this._nextPolicy.sendRequest(request);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  isNode,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  UserAgentOptions,\n} from \"@azure/core-http\";\nimport * as os from \"os\";\n\nimport { TelemetryPolicy } from \"./policies/TelemetryPolicy\";\nimport { SDK_VERSION } from \"./utils/constants\";\n\n/**\n * TelemetryPolicyFactory is a factory class helping generating {@link TelemetryPolicy} objects.\n */\nexport class TelemetryPolicyFactory implements RequestPolicyFactory {\n  /**\n   * @internal\n   */\n  public readonly telemetryString: string;\n\n  /**\n   * Creates an instance of TelemetryPolicyFactory.\n   * @param telemetry -\n   */\n  constructor(telemetry?: UserAgentOptions) {\n    const userAgentInfo: string[] = [];\n\n    if (isNode) {\n      if (telemetry) {\n        const telemetryString = telemetry.userAgentPrefix || \"\";\n        if (telemetryString.length > 0 && userAgentInfo.indexOf(telemetryString) === -1) {\n          userAgentInfo.push(telemetryString);\n        }\n      }\n\n      // e.g. azsdk-js-storagefile/11.0.0\n      const libInfo = `azsdk-js-storagefile/${SDK_VERSION}`;\n      if (userAgentInfo.indexOf(libInfo) === -1) {\n        userAgentInfo.push(libInfo);\n      }\n\n      // e.g. (NODE-VERSION 4.9.1; Windows_NT 10.0.16299)\n      const runtimeInfo = `(NODE-VERSION ${process.version}; ${os.type()} ${os.release()})`;\n      if (userAgentInfo.indexOf(runtimeInfo) === -1) {\n        userAgentInfo.push(runtimeInfo);\n      }\n    }\n\n    this.telemetryString = userAgentInfo.join(\" \");\n  }\n\n  /**\n   * Creates a {@link RequestPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(nextPolicy: RequestPolicy, options: RequestPolicyOptions): TelemetryPolicy {\n    return new TelemetryPolicy(nextPolicy, options, this.telemetryString);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { DefaultHttpClient } from \"@azure/core-http\";\nimport { IHttpClient } from \"../Pipeline\";\n\nconst _defaultHttpClient = new DefaultHttpClient();\n\nexport function getCachedDefaultHttpClient(): IHttpClient {\n  return _defaultHttpClient;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { BaseRequestPolicy, HttpOperationResponse, WebResource } from \"@azure/core-http\";\n\n/**\n * Credential policy used to sign HTTP(S) requests before sending. This is an\n * abstract class.\n */\nexport abstract class CredentialPolicy extends BaseRequestPolicy {\n  /**\n   * Sends out request.\n   *\n   * @param request -\n   */\n  public sendRequest(request: WebResource): Promise<HttpOperationResponse> {\n    return this._nextPolicy.sendRequest(this.signRequest(request));\n  }\n\n  /**\n   * Child classes must implement this method with request signing. This method\n   * will be executed in {@link sendRequest}.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    // Child classes must override this method with request signing. This method\n    // will be executed in sendRequest().\n    return request;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * AnonymousCredentialPolicy is used with HTTP(S) requests that read public resources\n * or for use with Shared Access Signatures (SAS).\n */\nexport class AnonymousCredentialPolicy extends CredentialPolicy {\n  /**\n   * Creates an instance of AnonymousCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   */\n  // The base class has a protected constructor. Adding a public one to enable constructing of this class.\n  /* eslint-disable-next-line @typescript-eslint/no-useless-constructor*/\n  constructor(nextPolicy: RequestPolicy, options: RequestPolicyOptions) {\n    super(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param _nextPolicy -\n   * @param _options -\n   */\n  public create(_nextPolicy: RequestPolicy, _options: RequestPolicyOptions): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions\n) => CredentialPolicy;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { AnonymousCredentialPolicy } from \"../policies/AnonymousCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * AnonymousCredential provides a credentialPolicyCreator member used to create\n * {@link AnonymousCredentialPolicy} objects. AnonymousCredentialPolicy is used with\n * HTTP(S) requests that read public resources or for use with Shared Access\n * Signatures (SAS).\n */\nexport class AnonymousCredential extends Credential {\n  /**\n   * Creates an {@link AnonymousCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): AnonymousCredentialPolicy {\n    return new AnonymousCredentialPolicy(nextPolicy, options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport {\n  BaseRequestPolicy,\n  deserializationPolicy,\n  disableResponseDecompressionPolicy,\n  HttpClient as IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpRequestBody,\n  RequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicyOptions,\n  ServiceClientOptions,\n  WebResource,\n  proxyPolicy,\n  isNode,\n  tracingPolicy,\n  logPolicy,\n  ProxyOptions,\n  UserAgentOptions,\n  KeepAliveOptions,\n  keepAlivePolicy,\n  generateClientRequestIdPolicy,\n} from \"@azure/core-http\";\n\nimport { logger } from \"./log\";\nimport { StorageBrowserPolicyFactory } from \"./StorageBrowserPolicyFactory\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageRetryOptions, StorageRetryPolicyFactory } from \"./StorageRetryPolicyFactory\";\nimport { TelemetryPolicyFactory } from \"./TelemetryPolicyFactory\";\nimport {\n  StorageFileLoggingAllowedHeaderNames,\n  StorageFileLoggingAllowedQueryParameters,\n} from \"./utils/constants\";\nimport { getCachedDefaultHttpClient } from \"./utils/cache\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\n\n// Export following interfaces and types for customers who want to implement their\n// own RequestPolicy or HTTPClient\nexport {\n  deserializationPolicy,\n  IHttpClient,\n  HttpHeaders,\n  HttpOperationResponse,\n  HttpRequestBody,\n  WebResource,\n  BaseRequestPolicy,\n  RequestPolicyFactory,\n  RequestPolicy,\n  RequestPolicyOptions,\n};\n\n/**\n * Option interface for Pipeline constructor.\n */\nexport interface PipelineOptions {\n  /**\n   * Optional. Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * A Pipeline class containing HTTP request policies.\n * You can create a default Pipeline by calling {@link newPipeline}.\n * Or you can create a Pipeline with your own policies by the constructor of Pipeline.\n *\n * Refer to {@link newPipeline} and provided policies as reference before\n * implementing your customized Pipeline.\n */\nexport class Pipeline {\n  /**\n   * A list of chained request policy factories.\n   */\n  public readonly factories: RequestPolicyFactory[];\n  /**\n   * Configures pipeline logger and HTTP client.\n   */\n  public readonly options: PipelineOptions;\n\n  /**\n   * Creates an instance of Pipeline. Customize HTTPClient by implementing IHttpClient interface.\n   *\n   * @param factories -\n   * @param options -\n   */\n  constructor(factories: RequestPolicyFactory[], options: PipelineOptions = {}) {\n    this.factories = factories;\n    // when options.httpClient is not specified, passing in a DefaultHttpClient instance to\n    // avoid each client creating its own http client.\n    this.options = {\n      ...options,\n      httpClient: options.httpClient || getCachedDefaultHttpClient(),\n    };\n  }\n\n  /**\n   * Transfer Pipeline object to ServiceClientOptions object which required by\n   * ServiceClient constructor.\n   *\n   * @returns The ServiceClientOptions object from this Pipeline.\n   */\n  public toServiceClientOptions(): ServiceClientOptions {\n    return {\n      httpClient: this.options.httpClient,\n      requestPolicyFactories: this.factories,\n    };\n  }\n}\n\n/**\n * Option interface for {@link newPipeline} function.\n */\nexport interface StoragePipelineOptions {\n  /**\n   * Options to configure a proxy for outgoing requests.\n   */\n  proxyOptions?: ProxyOptions;\n  /**\n   * Options for adding user agent details to outgoing requests.\n   */\n  userAgentOptions?: UserAgentOptions;\n  /**\n   * Configures the built-in retry policy behavior.\n   */\n  retryOptions?: StorageRetryOptions;\n  /**\n   * Keep alive configurations. Default keep-alive is enabled.\n   */\n  keepAliveOptions?: KeepAliveOptions;\n  /**\n   * Configures the HTTP client to send requests and receive responses.\n   */\n  httpClient?: IHttpClient;\n}\n\n/**\n * Creates a new {@link Pipeline} object with {@link Credential} provided.\n *\n * @param credential - Such as AnonymousCredential, StorageSharedKeyCredential.\n * @param pipelineOptions - Optional. Options.\n * @returns A new Pipeline object.\n */\nexport function newPipeline(\n  credential?: Credential,\n  pipelineOptions: StoragePipelineOptions = {}\n): Pipeline {\n  if (credential === undefined) {\n    credential = new AnonymousCredential();\n  }\n\n  // Order is important. Closer to the API at the top & closer to the network at the bottom.\n  // The credential's policy factory must appear close to the wire so it can sign any\n  // changes made by other factories (like UniqueRequestIDPolicyFactory)\n  const telemetryPolicy = new TelemetryPolicyFactory(pipelineOptions.userAgentOptions);\n  const factories: RequestPolicyFactory[] = [\n    tracingPolicy({ userAgent: telemetryPolicy.telemetryString }),\n    keepAlivePolicy(pipelineOptions.keepAliveOptions),\n    telemetryPolicy,\n    generateClientRequestIdPolicy(),\n    new StorageBrowserPolicyFactory(),\n    new StorageRetryPolicyFactory(pipelineOptions.retryOptions), // Retry policy should be above any policy that throws retryable errors\n    deserializationPolicy(), // Default deserializationPolicy is provided by protocol layer\n    logPolicy({\n      logger: logger.info,\n      allowedHeaderNames: StorageFileLoggingAllowedHeaderNames,\n      allowedQueryParameters: StorageFileLoggingAllowedQueryParameters,\n    }),\n  ];\n\n  if (isNode) {\n    // policies only available in Node.js runtime, not in browsers\n    factories.push(proxyPolicy(pipelineOptions.proxyOptions));\n    factories.push(disableResponseDecompressionPolicy());\n  }\n  factories.push(credential);\n\n  return new Pipeline(factories, pipelineOptions);\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { RequestPolicy, RequestPolicyOptions, WebResource } from \"@azure/core-http\";\nimport { StorageSharedKeyCredential } from \"../credentials/StorageSharedKeyCredential\";\nimport { HeaderConstants } from \"../utils/constants\";\nimport { getURLPath, getURLQueries } from \"../utils/utils.common\";\nimport { CredentialPolicy } from \"./CredentialPolicy\";\n\n/**\n * StorageSharedKeyCredentialPolicy is a policy used to sign HTTP request with a shared key.\n */\nexport class StorageSharedKeyCredentialPolicy extends CredentialPolicy {\n  /**\n   * Reference to {@link StorageSharedKeyCredential} which generates StorageSharedKeyCredentialPolicy\n   */\n  private readonly factory: StorageSharedKeyCredential;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredentialPolicy.\n   * @param nextPolicy -\n   * @param options -\n   * @param factory -\n   */\n  constructor(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions,\n    factory: StorageSharedKeyCredential\n  ) {\n    super(nextPolicy, options);\n    this.factory = factory;\n  }\n\n  /**\n   * Signs request.\n   *\n   * @param request -\n   */\n  protected signRequest(request: WebResource): WebResource {\n    request.headers.set(HeaderConstants.X_MS_DATE, new Date().toUTCString());\n\n    if (\n      request.body &&\n      (typeof request.body === \"string\" || (request.body as Buffer) !== undefined) &&\n      request.body.length > 0\n    ) {\n      request.headers.set(HeaderConstants.CONTENT_LENGTH, Buffer.byteLength(request.body));\n    }\n\n    const stringToSign: string =\n      [\n        request.method.toUpperCase(),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LANGUAGE),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_ENCODING),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_LENGTH),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_MD5),\n        this.getHeaderValueToSign(request, HeaderConstants.CONTENT_TYPE),\n        this.getHeaderValueToSign(request, HeaderConstants.DATE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_NONE_MATCH),\n        this.getHeaderValueToSign(request, HeaderConstants.IF_UNMODIFIED_SINCE),\n        this.getHeaderValueToSign(request, HeaderConstants.RANGE),\n      ].join(\"\\n\") +\n      \"\\n\" +\n      this.getCanonicalizedHeadersString(request) +\n      this.getCanonicalizedResourceString(request);\n\n    const signature: string = this.factory.computeHMACSHA256(stringToSign);\n    request.headers.set(\n      HeaderConstants.AUTHORIZATION,\n      `SharedKey ${this.factory.accountName}:${signature}`\n    );\n\n    // console.log(`[URL]:${request.url}`);\n    // console.log(`[HEADERS]:${request.headers.toString()}`);\n    // console.log(`[STRING TO SIGN]:${JSON.stringify(stringToSign)}`);\n    // console.log(`[KEY]: ${request.headers.get(HeaderConstants.AUTHORIZATION)}`);\n    return request;\n  }\n\n  /**\n   * Retrieve header value according to shared key sign rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n   *\n   * @param request -\n   * @param headerName -\n   */\n  private getHeaderValueToSign(request: WebResource, headerName: string): string {\n    const value = request.headers.get(headerName);\n\n    if (!value) {\n      return \"\";\n    }\n\n    // When using version 2015-02-21 or later, if Content-Length is zero, then\n    // set the Content-Length part of the StringToSign to an empty string.\n    // https://docs.microsoft.com/en-us/rest/api/storageservices/authenticate-with-shared-key\n    if (headerName === HeaderConstants.CONTENT_LENGTH && value === \"0\") {\n      return \"\";\n    }\n\n    return value;\n  }\n\n  /**\n   * To construct the CanonicalizedHeaders portion of the signature string, follow these steps:\n   * 1. Retrieve all headers for the resource that begin with x-ms-, including the x-ms-date header.\n   * 2. Convert each HTTP header name to lowercase.\n   * 3. Sort the headers lexicographically by header name, in ascending order.\n   *    Each header may appear only once in the string.\n   * 4. Replace any linear whitespace in the header value with a single space.\n   * 5. Trim any whitespace around the colon in the header.\n   * 6. Finally, append a new-line character to each canonicalized header in the resulting list.\n   *    Construct the CanonicalizedHeaders string by concatenating all headers in this list into a single string.\n   *\n   * @param request -\n   */\n  private getCanonicalizedHeadersString(request: WebResource): string {\n    let headersArray = request.headers.headersArray().filter((value) => {\n      return value.name.toLowerCase().startsWith(HeaderConstants.PREFIX_FOR_STORAGE);\n    });\n\n    headersArray.sort((a, b): number => {\n      return a.name.toLowerCase().localeCompare(b.name.toLowerCase());\n    });\n\n    // Remove duplicate headers\n    headersArray = headersArray.filter((value, index, array) => {\n      if (index > 0 && value.name.toLowerCase() === array[index - 1].name.toLowerCase()) {\n        return false;\n      }\n      return true;\n    });\n\n    let canonicalizedHeadersStringToSign: string = \"\";\n    headersArray.forEach((header) => {\n      canonicalizedHeadersStringToSign += `${header.name\n        .toLowerCase()\n        .trimRight()}:${header.value.trimLeft()}\\n`;\n    });\n\n    return canonicalizedHeadersStringToSign;\n  }\n\n  /**\n   * Retrieves the webResource canonicalized resource string.\n   *\n   * @param request -\n   */\n  private getCanonicalizedResourceString(request: WebResource): string {\n    const path = getURLPath(request.url) || \"/\";\n\n    let canonicalizedResourceString: string = \"\";\n    canonicalizedResourceString += `/${this.factory.accountName}${path}`;\n\n    const queries = getURLQueries(request.url);\n    const lowercaseQueries: { [key: string]: string } = {};\n    if (queries) {\n      const queryKeys: string[] = [];\n      for (const key in queries) {\n        if (Object.prototype.hasOwnProperty.call(queries, key)) {\n          const lowercaseKey = key.toLowerCase();\n          lowercaseQueries[lowercaseKey] = queries[key];\n          queryKeys.push(lowercaseKey);\n        }\n      }\n\n      queryKeys.sort();\n      for (const key of queryKeys) {\n        canonicalizedResourceString += `\\n${key}:${decodeURIComponent(lowercaseQueries[key])}`;\n      }\n    }\n\n    return canonicalizedResourceString;\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { createHmac } from \"crypto\";\nimport { RequestPolicy, RequestPolicyOptions } from \"@azure/core-http\";\n\nimport { StorageSharedKeyCredentialPolicy } from \"../policies/StorageSharedKeyCredentialPolicy\";\nimport { Credential } from \"./Credential\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * StorageSharedKeyCredential for account key authorization of Azure Storage service.\n */\nexport class StorageSharedKeyCredential extends Credential {\n  /**\n   * Azure Storage account name; readonly.\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage account key; readonly.\n   */\n  private readonly accountKey: Buffer;\n\n  /**\n   * Creates an instance of StorageSharedKeyCredential.\n   * @param accountName -\n   * @param accountKey -\n   */\n  constructor(accountName: string, accountKey: string) {\n    super();\n    this.accountName = accountName;\n    this.accountKey = Buffer.from(accountKey, \"base64\");\n  }\n\n  /**\n   * Creates a {@link StorageSharedKeyCredentialPolicy} object.\n   *\n   * @param nextPolicy -\n   * @param options -\n   */\n  public create(\n    nextPolicy: RequestPolicy,\n    options: RequestPolicyOptions\n  ): StorageSharedKeyCredentialPolicy {\n    return new StorageSharedKeyCredentialPolicy(nextPolicy, options, this);\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param stringToSign -\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    return createHmac(\"sha256\", this.accountKey).update(stringToSign, \"utf8\").digest(\"base64\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { OperationOptions, RequestOptionsBase } from \"@azure/core-http\";\nimport { createSpanFunction } from \"@azure/core-tracing\";\n\n/**\n * Creates a span using the global tracer.\n * @internal\n */\nexport const createSpan = createSpanFunction({\n  packagePrefix: \"Azure.Storage.File\",\n  namespace: \"Microsoft.Storage\",\n});\n\n/**\n * @internal\n *\n * Adapt the tracing options from OperationOptions to what they need to be for\n * RequestOptionsBase (when we update to later OpenTelemetry versions this is now\n * two separate fields, not just one).\n */\nexport function convertTracingToRequestOptionsBase(\n  options?: OperationOptions\n): Pick<RequestOptionsBase, \"spanOptions\" | \"tracingContext\"> {\n  return {\n    // By passing spanOptions if they exist at runtime, we're backwards compatible with @azure/core-tracing@preview.13 and earlier.\n    spanOptions: (options?.tracingOptions as any)?.spanOptions,\n    tracingContext: options?.tracingOptions?.tracingContext,\n  };\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreHttp from \"@azure/core-http\";\nimport { StorageClientOptionalParams } from \"./models\";\n\nconst packageName = \"azure-storage-file-share\";\nconst packageVersion = \"12.9.0\";\n\nexport class StorageClientContext extends coreHttp.ServiceClient {\n  url: string;\n  version: string;\n  fileRangeWriteFromUrl: string;\n\n  /**\n   * Initializes a new instance of the StorageClientContext class.\n   * @param url The URL of the service account, share, directory or file that is the target of the\n   *            desired operation.\n   * @param options The parameter options\n   */\n  constructor(url: string, options?: StorageClientOptionalParams) {\n    if (url === undefined) {\n      throw new Error(\"'url' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = coreHttp.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(undefined, options);\n\n    this.requestContentType = \"application/json; charset=utf-8\";\n\n    this.baseUri = options.endpoint || \"{url}\";\n\n    // Parameter assignments\n    this.url = url;\n\n    // Assigning values to Constant parameters\n    this.version = options.version || \"2021-04-10\";\n    this.fileRangeWriteFromUrl = options.fileRangeWriteFromUrl || \"update\";\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { Pipeline } from \"./Pipeline\";\nimport { escapeURLPath, getAccountNameFromUrl } from \"./utils/utils.common\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { OperationTracingOptions } from \"@azure/core-tracing\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { Credential } from \"./credentials/Credential\";\nimport { isNode } from \"@azure/core-http\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\n\n/**\n * An interface for options common to every remote operation.\n */\nexport interface CommonOptions {\n  tracingOptions?: OperationTracingOptions;\n}\n\n/**\n * A StorageClient represents a base client class for ServiceClient, ContainerClient and etc.\n */\nexport abstract class StorageClient {\n  /**\n   * URL string value.\n   */\n  public readonly url: string;\n  public readonly accountName: string;\n\n  /**\n   * Request policy pipeline.\n   *\n   * @internal\n   */\n  protected readonly pipeline: Pipeline;\n\n  /**\n   * Credential in the pipleline to authenticate requests to the service, such as AnonymousCredential, StorageSharedKeyCredential.\n   * Initialized to an AnonymousCredential if not able to retrieve it from the pipeline.\n   *\n   * @internal\n   */\n  protected readonly credential: Credential;\n\n  /**\n   * StorageClient is a reference to protocol layer operations entry, which is\n   * generated by AutoRest generator.\n   */\n  protected readonly storageClientContext: StorageClientContext;\n\n  /**\n   * Creates an instance of StorageClient.\n   * @param url -\n   * @param pipeline -\n   */\n  protected constructor(url: string, pipeline: Pipeline) {\n    // URL should be encoded and only once, protocol layer shouldn't encode URL again\n    this.url = escapeURLPath(url);\n    this.accountName = getAccountNameFromUrl(url);\n\n    this.pipeline = pipeline;\n    this.storageClientContext = new StorageClientContext(this.url, {\n      version: SERVICE_VERSION,\n      ...pipeline.toServiceClientOptions(),\n    });\n\n    // Remove the default content-type in generated code of StorageClientContext\n    const storageClientContext = this.storageClientContext as any;\n    if (storageClientContext.requestContentType) {\n      storageClientContext.requestContentType = undefined;\n    }\n\n    // Retrieve credential from the pipeline.\n    this.credential = new AnonymousCredential();\n    for (const factory of this.pipeline.factories) {\n      if (\n        (isNode && factory instanceof StorageSharedKeyCredential) ||\n        factory instanceof AnonymousCredential\n      ) {\n        this.credential = factory;\n        break;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * This is a helper class to construct a string representing the NTFS attributes to a file or directory.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file#file-system-attributes\n */\nexport class FileSystemAttributes {\n  /**\n   * Creates a FileSystemAttributes from the specified attributes string. This method will throw an\n   * Error if it encounters a string that does not correspond to a valid attributes.\n   *\n   * @param fileAttributes - The value of header x-ms-file-attributes.\n   */\n  public static parse(fileAttributes: string): FileSystemAttributes {\n    if (!fileAttributes) {\n      throw new RangeError(`Invalid fileAttributes: '${fileAttributes}'.`);\n    }\n\n    const fileSystemAttributes = new FileSystemAttributes();\n\n    const attributes = fileAttributes.trim().split(\"|\");\n\n    for (let str of attributes) {\n      str = str.trim();\n      switch (str) {\n        case \"ReadOnly\":\n          fileSystemAttributes.readonly = true;\n          break;\n        case \"Hidden\":\n          fileSystemAttributes.hidden = true;\n          break;\n        case \"System\":\n          fileSystemAttributes.system = true;\n          break;\n        case \"None\":\n          fileSystemAttributes.none = true;\n          break;\n        case \"Temporary\":\n          fileSystemAttributes.temporary = true;\n          break;\n        case \"Offline\":\n          fileSystemAttributes.offline = true;\n          break;\n        case \"Directory\":\n          fileSystemAttributes.directory = true;\n          break;\n        case \"Archive\":\n          fileSystemAttributes.archive = true;\n          break;\n        case \"NotContentIndexed\":\n          fileSystemAttributes.notContentIndexed = true;\n          break;\n        case \"NoScrubData\":\n          fileSystemAttributes.noScrubData = true;\n          break;\n        default:\n          throw new RangeError(`Invalid attribute: ${str}`);\n      }\n    }\n\n    return fileSystemAttributes;\n  }\n\n  /**\n   * Specifies a directory or file that is read-only.\n   */\n  public readonly: boolean = false;\n\n  /**\n   * Specifies a directory or file is hidden.\n   */\n  public hidden: boolean = false;\n\n  /**\n   * Specifies a directory or file that the operating system uses a part of, or uses exclusively.\n   */\n  public system: boolean = false;\n\n  /**\n   * Specifies a directory or file that does not have other attributes set. This attribute is valid only when used alone.\n   */\n  public none: boolean = false;\n\n  /**\n   * Specifies the handle identifies a directory.\n   */\n  public directory: boolean = false;\n\n  /**\n   * Specifies a directory or file is an archive. Applications typically use this attribute to mark files for backup or removal.\n   */\n  public archive: boolean = false;\n\n  /**\n   * Specifies if a file is temporary.\n   */\n  public temporary: boolean = false;\n\n  /**\n   * Specifies the data of a directory or file is not available immediately.\n   * This file system attribute is presented primarily to provide compatibility with Windows - Azure Files does not support with offline storage options.\n   */\n  public offline: boolean = false;\n\n  /**\n   * Specifies the directory or file is not to be indexed by the content indexing service.\n   */\n  public notContentIndexed: boolean = false;\n\n  /**\n   * Specifies the user data stream not to be read by the background data integrity scanner.\n   * This file system attribute is presented primarily to provide compatibility with Windows.\n   * Applicable to directory or file.\n   */\n  public noScrubData: boolean = false;\n\n  /**\n   * Converts the given attributes to a string.\n   *\n   * @returns A string which represents the FileSystemAttributes\n   */\n  public toString(): string {\n    const attributes: string[] = [];\n    if (this.readonly) {\n      attributes.push(\"ReadOnly\");\n    }\n    if (this.hidden) {\n      attributes.push(\"Hidden\");\n    }\n    if (this.system) {\n      attributes.push(\"System\");\n    }\n    if (this.none) {\n      attributes.push(\"None\");\n    }\n    if (this.temporary) {\n      attributes.push(\"Temporary\");\n    }\n    if (this.directory) {\n      attributes.push(\"Directory\");\n    }\n    if (this.archive) {\n      attributes.push(\"Archive\");\n    }\n    if (this.offline) {\n      attributes.push(\"Offline\");\n    }\n    if (this.notContentIndexed) {\n      attributes.push(\"NotContentIndexed\");\n    }\n    if (this.noScrubData) {\n      attributes.push(\"NoScrubData\");\n    }\n    return attributes.join(\"|\");\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortError } from \"@azure/abort-controller\";\nimport { TransferProgressEvent } from \"@azure/core-http\";\nimport { Readable } from \"stream\";\nimport { AbortSignal, AbortSignalLike } from \"@azure/abort-controller\";\n\nexport type ReadableStreamGetter = (offset: number) => Promise<NodeJS.ReadableStream>;\n\nexport interface RetriableReadableStreamOptions {\n  abortSignal?: AbortSignalLike;\n  /**\n   * Max retry count (greater than or equal to 0), undefined or invalid value means no retry\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * Read progress event handler\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Debug purpose only. Used to inject an unexpected end to existing internal stream,\n   * to test stream retry works well or not.\n   *\n   * When assign it to true, for next incoming \"data\" event of internal stream,\n   * RetriableReadableStream will try to emit an \"end\" event to existing internal\n   * stream to force it end and start retry from the breaking point.\n   * The value will then update to \"undefined\", once the injection works.\n   */\n  doInjectErrorOnce?: boolean;\n}\n\nconst ABORT_ERROR = new AbortError(\"The operation was aborted.\");\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * A Node.js ReadableStream will internally retry when internal ReadableStream unexpected ends.\n */\nexport class RetriableReadableStream extends Readable {\n  private aborter: AbortSignalLike;\n  private start: number;\n  private offset: number;\n  private end: number;\n  private getter: ReadableStreamGetter;\n  private source: NodeJS.ReadableStream;\n  private retries: number = 0;\n  private maxRetryRequests: number;\n  private onProgress?: (progress: TransferProgressEvent) => void;\n  private options: RetriableReadableStreamOptions;\n  private abortHandler = () => {\n    this.source.pause();\n    this.emit(\"error\", ABORT_ERROR);\n  };\n\n  /**\n   * Creates an instance of RetriableReadableStream.\n   *\n   * @param source - The current ReadableStream returned from getter\n   * @param getter - A method calling downloading request returning\n   *                                      a new ReadableStream from specified offset\n   * @param offset - Offset position in original data source to read\n   * @param count - How much data in original data source to read\n   * @param options -\n   */\n  public constructor(\n    source: NodeJS.ReadableStream,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    super();\n    const aborter = options.abortSignal || AbortSignal.none;\n    this.aborter = aborter;\n    this.getter = getter;\n    this.source = source;\n    this.start = offset;\n    this.offset = offset;\n    this.end = offset + count - 1;\n    this.maxRetryRequests =\n      options.maxRetryRequests && options.maxRetryRequests >= 0 ? options.maxRetryRequests : 0;\n    this.onProgress = options.onProgress;\n    this.options = options;\n\n    aborter.addEventListener(\"abort\", this.abortHandler);\n\n    this.setSourceDataHandler();\n    this.setSourceEndHandler();\n    this.setSourceErrorHandler();\n  }\n\n  public _read(): void {\n    if (!this.aborter.aborted) {\n      this.source.resume();\n    }\n  }\n\n  private setSourceDataHandler() {\n    this.source.on(\"data\", (data: Buffer) => {\n      if (this.options.doInjectErrorOnce) {\n        this.options.doInjectErrorOnce = undefined;\n        this.source.pause();\n        this.source.removeAllListeners(\"data\");\n        this.source.emit(\"end\");\n        return;\n      }\n\n      // console.log(\n      //   `Offset: ${this.offset}, Received ${data.length} from internal stream`\n      // );\n      this.offset += data.length;\n      if (this.onProgress) {\n        this.onProgress({ loadedBytes: this.offset - this.start });\n      }\n      if (!this.push(data)) {\n        this.source.pause();\n      }\n    });\n  }\n\n  private setSourceEndHandler() {\n    this.source.on(\"end\", () => {\n      // console.log(\n      //   `Source stream emits end, offset: ${\n      //     this.offset\n      //   }, dest end : ${this.end}`\n      // );\n      if (this.offset - 1 === this.end) {\n        this.aborter.removeEventListener(\"abort\", this.abortHandler);\n        this.push(null);\n      } else if (this.offset <= this.end) {\n        // console.log(\n        //   `retries: ${this.retries}, max retries: ${this.maxRetries}`\n        // );\n        if (this.retries < this.maxRetryRequests) {\n          this.retries += 1;\n          this.getter(this.offset)\n            .then((newSource) => {\n              this.source = newSource;\n              this.setSourceDataHandler();\n              this.setSourceEndHandler();\n              this.setSourceErrorHandler();\n              return;\n            })\n            .catch((error) => {\n              this.emit(\"error\", error);\n            });\n        } else {\n          this.emit(\n            \"error\",\n            new Error(\n              `Data corruption failure: received less data than required and reached maxRetires limitation. Received data offset: ${\n                this.offset - 1\n              }, data needed offset: ${this.end}, retries: ${this.retries}, max retries: ${\n                this.maxRetryRequests\n              }`\n            )\n          );\n        }\n      } else {\n        this.emit(\n          \"error\",\n          new Error(\n            `Data corruption failure: Received more data than original request, data needed offset is ${\n              this.end\n            }, received offset: ${this.offset - 1}`\n          )\n        );\n      }\n    });\n  }\n\n  private setSourceErrorHandler() {\n    this.source.on(\"error\", (error) => {\n      this.emit(\"error\", error);\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpResponse, isNode } from \"@azure/core-http\";\nimport {\n  CopyStatusType,\n  FileDownloadHeaders,\n  FileDownloadResponseModel,\n  LeaseDurationType,\n  LeaseStateType,\n  LeaseStatusType,\n} from \"./generatedModels\";\nimport { Metadata } from \"./models\";\nimport {\n  ReadableStreamGetter,\n  RetriableReadableStream,\n  RetriableReadableStreamOptions,\n} from \"./utils/RetriableReadableStream\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * FileDownloadResponse implements the `FileDownloadResponseModel` interface, and in a Node.js runtime it will\n * automatically retry when its internal read stream unexpectedly ends. (This kind of unexpected end cannot\n * trigger retries defined in the pipeline retry policy.)\n *\n * The {@link readableStreamBody} stream will retry beneath the `ReadableStream` layer, so you can just use it as\n * a normal Node.js Readable stream.\n */\nexport class FileDownloadResponse implements FileDownloadResponseModel {\n  /**\n   * Indicates that the service supports\n   * requests for partial file content.\n   *\n   * @readonly\n   */\n  public get acceptRanges(): string | undefined {\n    return this.originalResponse.acceptRanges;\n  }\n\n  /**\n   * Returnes if it was previously specified\n   * for the file.\n   *\n   * @readonly\n   */\n  public get cacheControl(): string | undefined {\n    return this.originalResponse.cacheControl;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the 'x-ms-content-disposition' header and specifies how to process the\n   * response.\n   *\n   * @readonly\n   */\n  public get contentDisposition(): string | undefined {\n    return this.originalResponse.contentDisposition;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Encoding request header.\n   *\n   * @readonly\n   */\n  public get contentEncoding(): string | undefined {\n    return this.originalResponse.contentEncoding;\n  }\n\n  /**\n   * Returns the value that was specified\n   * for the Content-Language request header.\n   *\n   * @readonly\n   */\n  public get contentLanguage(): string | undefined {\n    return this.originalResponse.contentLanguage;\n  }\n\n  /**\n   * The number of bytes present in the\n   * response body.\n   *\n   * @readonly\n   */\n  public get contentLength(): number | undefined {\n    return this.originalResponse.contentLength;\n  }\n\n  /**\n   * If the file has an MD5 hash and the\n   * request is to read the full file, this response header is returned so that\n   * the client can check for message content integrity. If the request is to\n   * read a specified range and the 'x-ms-range-get-content-md5' is set to\n   * true, then the request returns an MD5 hash for the range, as long as the\n   * range size is less than or equal to 4 MB. If neither of these sets of\n   * conditions is true, then no value is returned for the 'Content-MD5'\n   * header.\n   *\n   * @readonly\n   */\n  public get contentMD5(): Uint8Array | undefined {\n    return this.originalResponse.contentMD5;\n  }\n\n  /**\n   * Indicates the range of bytes returned if\n   * the client requested a subset of the file by setting the Range request\n   * header.\n   *\n   * @readonly\n   */\n  public get contentRange(): string | undefined {\n    return this.originalResponse.contentRange;\n  }\n\n  /**\n   * The content type specified for the file.\n   * The default content type is 'application/octet-stream'\n   *\n   * @readonly\n   */\n  public get contentType(): string | undefined {\n    return this.originalResponse.contentType;\n  }\n\n  /**\n   * Conclusion time of the last attempted\n   * Copy File operation where this file was the destination file. This value\n   * can specify the time of a completed, aborted, or failed copy attempt.\n   *\n   * @readonly\n   */\n  public get copyCompletedOn(): Date | undefined {\n    return this.originalResponse.copyCompletedOn;\n  }\n\n  /**\n   * String identifier for the last attempted Copy\n   * File operation where this file was the destination file.\n   *\n   * @readonly\n   */\n  public get copyId(): string | undefined {\n    return this.originalResponse.copyId;\n  }\n\n  /**\n   * Contains the number of bytes copied and\n   * the total bytes in the source in the last attempted Copy File operation\n   * where this file was the destination file. Can show between 0 and\n   * Content-Length bytes copied.\n   *\n   * @readonly\n   */\n  public get copyProgress(): string | undefined {\n    return this.originalResponse.copyProgress;\n  }\n\n  /**\n   * URL up to 2KB in length that specifies the\n   * source file used in the last attempted Copy File operation where this file\n   * was the destination file.\n   *\n   * @readonly\n   */\n  public get copySource(): string | undefined {\n    return this.originalResponse.copySource;\n  }\n\n  /**\n   * State of the copy operation\n   * identified by 'x-ms-copy-id'. Possible values include: 'pending',\n   * 'success', 'aborted', 'failed'\n   *\n   * @readonly\n   */\n  public get copyStatus(): CopyStatusType | undefined {\n    return this.originalResponse.copyStatus;\n  }\n\n  /**\n   * Only appears when\n   * x-ms-copy-status is failed or pending. Describes cause of fatal or\n   * non-fatal copy operation failure.\n   *\n   * @readonly\n   */\n  public get copyStatusDescription(): string | undefined {\n    return this.originalResponse.copyStatusDescription;\n  }\n\n  /**\n   * A UTC date/time value generated by the service that\n   * indicates the time at which the response was initiated.\n   *\n   * @readonly\n   */\n  public get date(): Date | undefined {\n    return this.originalResponse.date;\n  }\n\n  /**\n   * The ETag contains a value that you can use to\n   * perform operations conditionally, in quotes.\n   *\n   * @readonly\n   */\n  public get etag(): string | undefined {\n    return this.originalResponse.etag;\n  }\n\n  public get errorCode(): string | undefined {\n    return this.originalResponse.errorCode;\n  }\n\n  /**\n   * If the file has a MD5 hash, and if\n   * request contains range header (Range or x-ms-range), this response header\n   * is returned with the value of the whole file's MD5 value. This value may\n   * or may not be equal to the value returned in Content-MD5 header, with the\n   * latter calculated from the requested range.\n   *\n   * @readonly\n   */\n  public get fileContentMD5(): Uint8Array | undefined {\n    return this.originalResponse.fileContentMD5;\n  }\n\n  /**\n   * The value of this header is set to\n   * true if the file data and application metadata are completely encrypted\n   * using the specified algorithm. Otherwise, the value is set to false (when\n   * the file is unencrypted, or if only parts of the file/application metadata\n   * are encrypted).\n   *\n   * @readonly\n   */\n  public get isServerEncrypted(): boolean | undefined {\n    return this.originalResponse.isServerEncrypted;\n  }\n\n  /**\n   * Returns the date and time the file was last\n   * modified. Any operation that modifies the file or its properties updates\n   * the last modified time.\n   *\n   * @readonly\n   */\n  public get lastModified(): Date | undefined {\n    return this.originalResponse.lastModified;\n  }\n\n  /**\n   * A name-value pair\n   * to associate with a file storage object.\n   *\n   * @readonly\n   */\n  public get metadata(): Metadata | undefined {\n    return this.originalResponse.metadata;\n  }\n\n  /**\n   * This header uniquely identifies the request\n   * that was made and can be used for troubleshooting the request.\n   *\n   * @readonly\n   */\n  public get requestId(): string | undefined {\n    return this.originalResponse.requestId;\n  }\n\n  /**\n   * Indicates the version of the File service used\n   * to execute the request.\n   *\n   * @readonly\n   */\n  public get version(): string | undefined {\n    return this.originalResponse.version;\n  }\n\n  /**\n   * Attributes set for the file.\n   *\n   * @readonly\n   */\n  public get fileAttributes(): string | undefined {\n    return this.originalResponse.fileAttributes;\n  }\n\n  /**\n   * Creation time for the file.\n   *\n   * @readonly\n   */\n  public get fileCreatedOn(): Date | undefined {\n    return this.originalResponse.fileCreatedOn;\n  }\n\n  /**\n   * Last write time for the file.\n   *\n   * @readonly\n   */\n  public get fileLastWriteOn(): Date | undefined {\n    return this.originalResponse.fileLastWriteOn;\n  }\n\n  /**\n   * Change time for the file.\n   *\n   * @readonly\n   */\n  public get fileChangeOn(): Date | undefined {\n    return this.originalResponse.fileChangeOn;\n  }\n\n  /**\n   * Key of the permission set for the file.\n   *\n   * @readonly\n   */\n  public get filePermissionKey(): string | undefined {\n    return this.originalResponse.filePermissionKey;\n  }\n\n  /**\n   * The fileId of the file.\n   *\n   * @readonly\n   */\n  public get fileId(): string | undefined {\n    return this.originalResponse.fileId;\n  }\n\n  /**\n   * The parent fileId of the file.\n   *\n   * @readonly\n   */\n  public get fileParentId(): string | undefined {\n    return this.originalResponse.fileParentId;\n  }\n\n  /**\n   * The response body as a browser Blob.\n   * Always undefined in node.js.\n   *\n   * @readonly\n   */\n  public get contentAsBlob(): Promise<Blob> | undefined {\n    return this.originalResponse.blobBody;\n  }\n\n  /**\n   * When a file is leased, specifies whether the lease is of infinite or fixed duration. Possible\n   * values include: 'infinite', 'fixed'\n   */\n  public get leaseDuration(): LeaseDurationType | undefined {\n    return this.originalResponse.leaseDuration;\n  }\n\n  /**\n   * Lease state of the file. Possible values include: 'available', 'leased', 'expired',\n   * 'breaking', 'broken'\n   */\n  public get leaseState(): LeaseStateType | undefined {\n    return this.originalResponse.leaseState;\n  }\n\n  /**\n   * The current lease status of the file. Possible values include: 'locked', 'unlocked'\n   */\n  public get leaseStatus(): LeaseStatusType | undefined {\n    return this.originalResponse.leaseStatus;\n  }\n\n  /**\n   * The response body as a node.js Readable stream.\n   * Always undefined in the browser.\n   *\n   * It will automatically retry when internal read stream unexpected ends.\n   *\n   * @readonly\n   */\n  public get readableStreamBody(): NodeJS.ReadableStream | undefined {\n    return isNode ? this.fileDownloadStream : undefined;\n  }\n\n  public get _response(): HttpResponse & {\n    parsedHeaders: FileDownloadHeaders;\n  } {\n    return this.originalResponse._response;\n  }\n\n  private originalResponse: FileDownloadResponseModel;\n  private fileDownloadStream?: RetriableReadableStream;\n\n  /**\n   * Creates an instance of FileDownloadResponse.\n   *\n   * @param originalResponse -\n   * @param getter -\n   * @param offset -\n   * @param count -\n   * @param options -\n   */\n  public constructor(\n    originalResponse: FileDownloadResponseModel,\n    getter: ReadableStreamGetter,\n    offset: number,\n    count: number,\n    options: RetriableReadableStreamOptions = {}\n  ) {\n    this.originalResponse = originalResponse;\n    this.fileDownloadStream = new RetriableReadableStream(\n      this.originalResponse.readableStreamBody!,\n      getter,\n      offset,\n      count,\n      options\n    );\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n/**\n * Range for Service Operations.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/specifying-the-range-header-for-file-service-operations\n */\nexport interface Range {\n  /**\n   * StartByte, larger than or equal 0.\n   */\n  offset: number;\n  /**\n   * Optional. Count of bytes, larger than 0.\n   * If not provided, will return bytes from offset to the end.\n   */\n  count?: number;\n}\n\n/**\n * Generate a range string. For example:\n *\n * \"bytes=255-\" or \"bytes=0-511\"\n *\n * @param range - A range of byte positions.\n * @returns The string representation for the byte range.\n */\nexport function rangeToString(range: Range): string {\n  if (range.offset < 0) {\n    throw new RangeError(`Range.offset cannot be smaller than 0.`);\n  }\n  if (range.count && range.count <= 0) {\n    throw new RangeError(\n      `Range.count must be larger than 0. Leave it undefined if you want a range from offset to the end.`\n    );\n  }\n  return range.count\n    ? `bytes=${range.offset}-${range.offset + range.count - 1}`\n    : `bytes=${range.offset}-`;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { FileSystemAttributes } from \"./FileSystemAttributes\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport { logger } from \"./log\";\n\nexport interface Metadata {\n  [propertyName: string]: string;\n}\n\nexport interface FileHttpHeaders {\n  /**\n   * Optional. Sets the file's cache\n   * control. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileCacheControl?: string;\n  /**\n   * Optional. Sets the file's content type.\n   * If specified, this property is stored with the file and returned with a\n   * read request.\n   */\n  fileContentType?: string;\n  /**\n   * Optional. An MD5 hash of the file\n   * content. Note that this hash is not validated, as the hashes for the\n   * individual blocks were validated when each was uploaded.\n   */\n  fileContentMD5?: Uint8Array;\n  /**\n   * Optional. Sets the file's content\n   * encoding. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileContentEncoding?: string;\n  /**\n   * Optional. Set the file's content\n   * language. If specified, this property is stored with the file and returned\n   * with a read request.\n   */\n  fileContentLanguage?: string;\n  /**\n   * Optional. Sets the file's\n   * Content-Disposition header.\n   */\n  fileContentDisposition?: string;\n}\n\n/**\n * Indicates inherit file permission from the parent directory.\n */\nexport type FilePermissionInheritType = \"inherit\";\n\n/**\n * Indicates keep existing file permission value unchanged.\n */\nexport type FilePermissionPreserveType = \"preserve\";\n\n/**\n * Indicates setting as the time of the request.\n */\nexport type TimeNowType = \"now\";\n\n/**\n * Indicates keep existing time value unchanged.\n */\nexport type TimePreserveType = \"preserve\";\n\n/**\n * Indicates keep existing file attributes unchanged.\n */\nexport type FileAttributesPreserveType = \"preserve\";\n\nexport interface FileAndDirectoryCreateCommonOptions {\n  /**\n   * The permission(security descriptor) to be set for the file or directory in the\n   * Security Descriptor Definition Language (SDDL). If specified, it must have an owner, group, and discretionary access control list (DACL).\n   * A value of inherit may be passed to inherit from the parent directory.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   * And if both are not specified, inherit will be set to filePermission as default value by client library.\n   */\n  filePermission?: string | FilePermissionInheritType;\n\n  /**\n   * The key of the permission to be set for the file or directory. This can be created using the Create-Permission API.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   */\n  filePermissionKey?: string;\n\n  /**\n   * The file system attributes to be set on the file or directory.\n   */\n  fileAttributes?: FileSystemAttributes;\n\n  /**\n   * The Coordinated Universal Time (UTC) creation time property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * By default, the value will be set as now.\n   */\n  creationTime?: Date | TimeNowType;\n\n  /**\n   * The Coordinated Universal Time (UTC) last write property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * By default, the value will be set as now.\n   */\n  lastWriteTime?: Date | TimeNowType;\n}\n\nexport interface FileAndDirectorySetPropertiesCommonOptions {\n  /**\n   * The permission(security descriptor) to be set for the file or directory in the\n   * Security Descriptor Definition Language (SDDL). If specified, it must have an owner, group, and discretionary access control list (DACL).\n   * A value of inherit may be passed to inherit from the parent directory.\n   * A value of preserve may be passed to keep the value unchanged.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   * And if both are not specified, preserve will be set to filePermission as default value by client library.\n   */\n  filePermission?: string | FilePermissionInheritType | FilePermissionPreserveType;\n\n  /**\n   * The key of the permission to be set for the file or directory. This can be created using the Create-Permission API.\n   *\n   * Note that only one of filePermission or filePermissionKey can be specified.\n   */\n  filePermissionKey?: string;\n\n  /**\n   * The file system attributes to be set on the file or directory.\n   */\n  fileAttributes?: FileSystemAttributes | FileAttributesPreserveType;\n\n  /**\n   * The Coordinated Universal Time (UTC) creation time property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * A value of preserve may be passed to keep an existing value unchanged.\n   * By default, the value will be set as preserve.\n   */\n  creationTime?: Date | TimeNowType | TimePreserveType;\n\n  /**\n   * The Coordinated Universal Time (UTC) last write property for the directory.\n   * A value of now may be used to indicate the time of the request.\n   * A value of preserve may be passed to keep an existing value unchanged.\n   * By default, the value will be set as preserve.\n   */\n  lastWriteTime?: Date | TimeNowType | TimePreserveType;\n}\n\n/**\n * Close handles result information.\n */\nexport interface CloseHandlesInfo {\n  closedHandlesCount: number;\n  /**\n   * Contains count of number of handles that failed to close.\n   */\n  closeFailureCount?: number;\n}\n\n/**\n * Protocols to enable on the share. For now, only support SMB or NFS.\n */\nexport interface ShareProtocols {\n  /**\n   * The share can be accessed by SMBv3.0, SMBv2.1 and REST.\n   */\n  smbEnabled?: boolean;\n  /**\n   * The share can be accessed by NFSv4.1.\n   */\n  nfsEnabled?: boolean;\n}\n\n/**\n * Convert protocols from joined string to ShareProtocols.\n *\n * @param protocolsString -\n */\nexport function toShareProtocols(protocolsString?: string): ShareProtocols | undefined {\n  if (protocolsString === undefined) {\n    return undefined;\n  }\n\n  const protocolStrArray = protocolsString.split(\";\");\n  const protocols: ShareProtocols = {};\n  for (const protocol of protocolStrArray) {\n    if (protocol === \"SMB\") {\n      protocols.smbEnabled = true;\n    } else if (protocol === \"NFS\") {\n      protocols.nfsEnabled = true;\n    }\n  }\n  return protocols;\n}\n\n/**\n * Convert ShareProtocols to joined string.\n *\n * @param protocols -\n */\nexport function toShareProtocolsString(protocols: ShareProtocols = {}): string | undefined {\n  let protocolStr = undefined;\n\n  if (protocols.smbEnabled === true) {\n    protocolStr = \"SMB\";\n  }\n  if (protocols.nfsEnabled === true) {\n    logger.info(\n      `Using \"NFS\" in favor of \"SMB\" for the share protocol as currently they can't be supported at the same time.`\n    );\n    protocolStr = \"NFS\";\n  }\n  return protocolStr;\n}\n\nexport function validateFilePermissionOptions(\n  filePermission?: string,\n  filePermissionKey?: string\n): void {\n  if (filePermission && filePermissionKey) {\n    throw new RangeError(\"Only one of filePermission or filePermissionKey can be specified.\");\n  }\n}\n\nexport function validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(\n  options: FileAndDirectoryCreateCommonOptions\n): FileAndDirectoryCreateCommonOptions {\n  // Would better deep copy params set by user.\n\n  if (!options) {\n    options = {};\n  }\n\n  validateFilePermissionOptions(options.filePermission, options.filePermissionKey);\n\n  if (!options.creationTime) {\n    options.creationTime = \"now\";\n  }\n\n  if (!options.lastWriteTime) {\n    options.lastWriteTime = \"now\";\n  }\n\n  if (!options.filePermission && !options.filePermissionKey) {\n    options.filePermission = \"inherit\";\n  }\n\n  return options;\n}\n\nexport function validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(\n  options: FileAndDirectorySetPropertiesCommonOptions\n): FileAndDirectorySetPropertiesCommonOptions {\n  // Would better deep copy params set by user.\n\n  if (!options) {\n    options = {};\n  }\n\n  validateFilePermissionOptions(options.filePermission, options.filePermissionKey);\n\n  if (!options.creationTime) {\n    options.creationTime = \"preserve\";\n  }\n\n  if (!options.lastWriteTime) {\n    options.lastWriteTime = \"preserve\";\n  }\n\n  if (!options.fileAttributes) {\n    options.fileAttributes = \"preserve\";\n  }\n\n  if (!options.filePermission && !options.filePermissionKey) {\n    options.filePermission = \"preserve\";\n  }\n\n  return options;\n}\n\nexport function fileAttributesToString(\n  fileAttributes: FileSystemAttributes | FileAttributesPreserveType\n): string {\n  return fileAttributes instanceof FileSystemAttributes\n    ? fileAttributes.toString()\n    : fileAttributes;\n}\n\nexport function fileCreationTimeToString(time: Date | TimeNowType | TimePreserveType): string {\n  return time instanceof Date ? truncatedISO8061Date(time) : time;\n}\n\nexport function fileLastWriteTimeToString(time: Date | TimeNowType | TimePreserveType): string {\n  return time instanceof Date ? truncatedISO8061Date(time) : time;\n}\n\n/**\n * Represents authentication information in Authorization, ProxyAuthorization,\n * WWW-Authenticate, and Proxy-Authenticate header values.\n */\nexport interface HttpAuthorization {\n  /**\n   * The scheme to use for authorization.\n   */\n  scheme: string;\n\n  /**\n   * the credentials containing the authentication information of the user agent for the resource being requested.\n   */\n  value: string;\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\n// In browser, during webpack or browserify bundling, this module will be replaced by 'events'\n// https://github.com/Gozala/events\nimport { EventEmitter } from \"events\";\n\n/**\n * Operation is an async function to be executed and managed by Batch.\n */\nexport declare type Operation = () => Promise<any>;\n\n/**\n * States for Batch.\n */\nenum BatchStates {\n  Good,\n  Error,\n}\n\n/**\n * Batch provides basic parallel execution with concurrency limits.\n * Will stop execute left operations when one of the executed operation throws an error.\n * But Batch cannot cancel ongoing operations, you need to cancel them by yourself.\n */\nexport class Batch {\n  /**\n   * Concurrency. Must be lager than 0.\n   */\n  private concurrency: number;\n\n  /**\n   * Number of active operations under execution.\n   */\n  private actives: number = 0;\n\n  /**\n   * Number of completed operations under execution.\n   */\n  private completed: number = 0;\n\n  /**\n   * Offset of next operation to be executed.\n   */\n  private offset: number = 0;\n\n  /**\n   * Operation array to be executed.\n   */\n  private operations: Operation[] = [];\n\n  /**\n   * States of Batch. When an error happens, state will turn into error.\n   * Batch will stop execute left operations.\n   */\n  private state: BatchStates = BatchStates.Good;\n\n  /**\n   * A private emitter used to pass events inside this class.\n   */\n  private emitter: EventEmitter;\n\n  /**\n   * Creates an instance of Batch.\n   * @param concurrency -\n   */\n  public constructor(concurrency: number = 5) {\n    if (concurrency < 1) {\n      throw new RangeError(\"concurrency must be larger than 0\");\n    }\n    this.concurrency = concurrency;\n    this.emitter = new EventEmitter();\n  }\n\n  /**\n   * Add a operation into queue.\n   *\n   * @param operation -\n   */\n  public addOperation(operation: Operation): void {\n    this.operations.push(async () => {\n      try {\n        this.actives++;\n        await operation();\n        this.actives--;\n        this.completed++;\n        this.parallelExecute();\n      } catch (error) {\n        this.emitter.emit(\"error\", error);\n      }\n    });\n  }\n\n  /**\n   * Start execute operations in the queue.\n   *\n   */\n  public async do(): Promise<void> {\n    if (this.operations.length === 0) {\n      return Promise.resolve();\n    }\n\n    this.parallelExecute();\n\n    return new Promise<void>((resolve, reject) => {\n      this.emitter.on(\"finish\", resolve);\n\n      this.emitter.on(\"error\", (error) => {\n        this.state = BatchStates.Error;\n        reject(error);\n      });\n    });\n  }\n\n  /**\n   * Get next operation to be executed. Return null when reaching ends.\n   *\n   */\n  private nextOperation(): Operation | null {\n    if (this.offset < this.operations.length) {\n      return this.operations[this.offset++];\n    }\n    return null;\n  }\n\n  /**\n   * Start execute operations. One one the most important difference between\n   * this method with do() is that do() wraps as an sync method.\n   *\n   */\n  private parallelExecute(): void {\n    if (this.state === BatchStates.Error) {\n      return;\n    }\n\n    if (this.completed >= this.operations.length) {\n      this.emitter.emit(\"finish\");\n      return;\n    }\n\n    while (this.actives < this.concurrency) {\n      const operation = this.nextOperation();\n      if (operation) {\n        operation();\n      } else {\n        return;\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { EventEmitter } from \"events\";\nimport { Readable } from \"stream\";\n\n/**\n * OutgoingHandler is an async function triggered by BufferScheduler.\n */\nexport declare type OutgoingHandler = (buffer: Buffer, offset?: number) => Promise<any>;\n\n/**\n * This class accepts a Node.js Readable stream as input, and keeps reading data\n * from the stream into the internal buffer structure, until it reaches maxBuffers.\n * Every available buffer will try to trigger outgoingHandler.\n *\n * The internal buffer structure includes an incoming buffer array, and a outgoing\n * buffer array. The incoming buffer array includes the \"empty\" buffers can be filled\n * with new incoming data. The outgoing array includes the filled buffers to be\n * handled by outgoingHandler. Every above buffer size is defined by parameter bufferSize.\n *\n * NUM_OF_ALL_BUFFERS = BUFFERS_IN_INCOMING + BUFFERS_IN_OUTGOING + BUFFERS_UNDER_HANDLING\n *\n * NUM_OF_ALL_BUFFERS lesser than or equal to maxBuffers\n *\n * PERFORMANCE IMPROVEMENT TIPS:\n * 1. Input stream highWaterMark is better to set a same value with bufferSize\n *    parameter, which will avoid Buffer.concat() operations.\n * 2. Concurrency should set a smaller value than maxBuffers, which is helpful to\n *    reduce the possibility when a outgoing handler waits for the stream data.\n *    in this situation, outgoing handlers are blocked.\n *    Outgoing queue shouldn't be empty.\n */\nexport class BufferScheduler {\n  /**\n   * Size of buffers in incoming and outgoing queues. This class will try to align\n   * data read from Readable stream into buffer chunks with bufferSize defined.\n   */\n  private readonly bufferSize: number;\n\n  /**\n   * How many buffers can be created or maintained.\n   */\n  private readonly maxBuffers: number;\n\n  /**\n   * A Node.js Readable stream.\n   */\n  private readonly readable: Readable;\n\n  /**\n   * OutgoingHandler is an async function triggered by BufferScheduler when there\n   * are available buffers in outgoing array.\n   */\n  private readonly outgoingHandler: OutgoingHandler;\n\n  /**\n   * An internal event emitter.\n   */\n  private readonly emitter: EventEmitter = new EventEmitter();\n\n  /**\n   * Concurrency of executing outgoingHandlers. (0 lesser than concurrency lesser than or equal to maxBuffers)\n   */\n  private readonly concurrency: number;\n\n  /**\n   * An internal offset marker to track data offset in bytes of next outgoingHandler.\n   */\n  private offset: number = 0;\n\n  /**\n   * An internal marker to track whether stream is end.\n   */\n  private isStreamEnd: boolean = false;\n\n  /**\n   * An internal marker to track whether stream or outgoingHandler returns error.\n   */\n  private isError: boolean = false;\n\n  /**\n   * How many handlers are executing.\n   */\n  private executingOutgoingHandlers: number = 0;\n\n  /**\n   * Encoding of the input Readable stream which has string data type instead of Buffer.\n   */\n  private encoding?: BufferEncoding;\n\n  /**\n   * How many buffers have been allocated.\n   */\n  private numBuffers: number = 0;\n\n  /**\n   * Because this class doesn't know how much data every time stream pops, which\n   * is defined by highWaterMarker of the stream. So BufferScheduler will cache\n   * data received from the stream, when data in unresolvedDataArray exceeds the\n   * blockSize defined, it will try to concat a blockSize of buffer, fill into available\n   * buffers from incoming and push to outgoing array.\n   */\n  private unresolvedDataArray: Buffer[] = [];\n\n  /**\n   * How much data consisted in unresolvedDataArray.\n   */\n  private unresolvedLength: number = 0;\n\n  /**\n   * The array includes all the available buffers can be used to fill data from stream.\n   */\n  private incoming: Buffer[] = [];\n\n  /**\n   * The array (queue) includes all the buffers filled from stream data.\n   */\n  private outgoing: Buffer[] = [];\n\n  /**\n   * Creates an instance of BufferScheduler.\n   *\n   * @param readable - A Node.js Readable stream\n   * @param bufferSize - Buffer size of every maintained buffer\n   * @param maxBuffers - How many buffers can be allocated\n   * @param outgoingHandler - An async function scheduled to be\n   *                                          triggered when a buffer fully filled\n   *                                          with stream data\n   * @param concurrency - Concurrency of executing outgoingHandlers (greater than 0)\n   * @param encoding - [Optional] Encoding of Readable stream when it's a string stream\n   */\n  constructor(\n    readable: Readable,\n    bufferSize: number,\n    maxBuffers: number,\n    outgoingHandler: OutgoingHandler,\n    concurrency: number,\n    encoding?: BufferEncoding\n  ) {\n    if (bufferSize <= 0) {\n      throw new RangeError(`bufferSize must be larger than 0, current is ${bufferSize}`);\n    }\n\n    if (maxBuffers <= 0) {\n      throw new RangeError(`maxBuffers must be larger than 0, current is ${maxBuffers}`);\n    }\n\n    if (concurrency <= 0) {\n      throw new RangeError(`concurrency must be larger than 0, current is ${concurrency}`);\n    }\n\n    this.bufferSize = bufferSize;\n    this.maxBuffers = maxBuffers;\n    this.readable = readable;\n    this.outgoingHandler = outgoingHandler;\n    this.concurrency = concurrency;\n    this.encoding = encoding;\n  }\n\n  /**\n   * Start the scheduler, will return error when stream of any of the outgoingHandlers\n   * returns error.\n   *\n   */\n  public async do(): Promise<void> {\n    return new Promise<void>((resolve, reject) => {\n      this.readable.on(\"data\", (data) => {\n        data = typeof data === \"string\" ? Buffer.from(data, this.encoding) : data;\n        this.appendUnresolvedData(data);\n\n        if (!this.resolveData()) {\n          this.readable.pause();\n        }\n      });\n\n      this.readable.on(\"error\", (err) => {\n        this.emitter.emit(\"error\", err);\n      });\n\n      this.readable.on(\"end\", () => {\n        this.isStreamEnd = true;\n        this.emitter.emit(\"checkEnd\");\n      });\n\n      this.emitter.on(\"error\", (err) => {\n        this.isError = true;\n        this.readable.pause();\n        reject(err);\n      });\n\n      this.emitter.on(\"checkEnd\", () => {\n        if (this.outgoing.length > 0) {\n          this.triggerOutgoingHandlers();\n          return;\n        }\n\n        if (this.isStreamEnd && this.executingOutgoingHandlers === 0) {\n          if (this.unresolvedLength > 0 && this.unresolvedLength < this.bufferSize) {\n            this.outgoingHandler(this.shiftBufferFromUnresolvedDataArray(), this.offset)\n              .then(resolve)\n              .catch(reject);\n          } else if (this.unresolvedLength >= this.bufferSize) {\n            return;\n          } else {\n            resolve();\n          }\n        }\n      });\n    });\n  }\n\n  /**\n   * Insert a new data into unresolved array.\n   *\n   * @param data -\n   */\n  private appendUnresolvedData(data: Buffer) {\n    this.unresolvedDataArray.push(data);\n    this.unresolvedLength += data.length;\n  }\n\n  /**\n   * Try to shift a buffer with size in blockSize. The buffer returned may be less\n   * than blockSize when data in unresolvedDataArray is less than bufferSize.\n   *\n   */\n  private shiftBufferFromUnresolvedDataArray(): Buffer {\n    if (this.unresolvedLength >= this.bufferSize) {\n      if (this.bufferSize === this.unresolvedDataArray[0].length) {\n        this.unresolvedLength -= this.bufferSize;\n        return this.unresolvedDataArray.shift()!;\n      }\n\n      // Lazy concat because Buffer.concat highly drops performance\n      let merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      const buffer = merged.slice(0, this.bufferSize);\n      merged = merged.slice(this.bufferSize);\n      this.unresolvedDataArray = [merged];\n      this.unresolvedLength -= buffer.length;\n      return buffer;\n    } else if (this.unresolvedLength > 0) {\n      const merged = Buffer.concat(this.unresolvedDataArray, this.unresolvedLength);\n      this.unresolvedDataArray = [];\n      this.unresolvedLength = 0;\n      return merged;\n    } else {\n      return Buffer.allocUnsafe(0);\n    }\n  }\n\n  /**\n   * Resolve data in unresolvedDataArray. For every buffer with size in blockSize\n   * shifted, it will try to get (or allocate a buffer) from incoming, and fill it,\n   * then push it into outgoing to be handled by outgoing handler.\n   *\n   * Return false when available buffers in incoming are not enough, else true.\n   *\n   * @returns Return false when buffers in incoming are not enough, else true.\n   */\n  private resolveData(): boolean {\n    while (this.unresolvedLength >= this.bufferSize) {\n      let buffer: Buffer;\n\n      if (this.incoming.length > 0) {\n        buffer = this.incoming.shift()!;\n      } else {\n        if (this.numBuffers < this.maxBuffers) {\n          buffer = Buffer.allocUnsafe(this.bufferSize);\n          this.numBuffers++;\n        } else {\n          // No available buffer, wait for buffer returned\n          return false;\n        }\n      }\n\n      buffer.fill(this.shiftBufferFromUnresolvedDataArray());\n      this.outgoing.push(buffer);\n      this.triggerOutgoingHandlers();\n    }\n    return true;\n  }\n\n  /**\n   * Try to trigger a outgoing handler for every buffer in outgoing. Stop when\n   * concurrency reaches.\n   */\n  private async triggerOutgoingHandlers() {\n    let buffer: Buffer | undefined;\n    do {\n      if (this.executingOutgoingHandlers >= this.concurrency) {\n        return;\n      }\n\n      buffer = this.outgoing.shift();\n      if (buffer) {\n        this.triggerOutgoingHandler(buffer);\n      }\n    } while (buffer);\n  }\n\n  /**\n   * Trigger a outgoing handler for a buffer shifted from outgoing.\n   *\n   * @param buffer -\n   */\n  private async triggerOutgoingHandler(buffer: Buffer): Promise<any> {\n    const bufferLength = buffer.length;\n\n    this.executingOutgoingHandlers++;\n    this.offset += bufferLength;\n\n    try {\n      await this.outgoingHandler(buffer, this.offset - bufferLength);\n    } catch (err) {\n      this.emitter.emit(\"error\", err);\n      return;\n    }\n\n    this.executingOutgoingHandlers--;\n    this.reuseBuffer(buffer);\n    this.emitter.emit(\"checkEnd\");\n  }\n\n  /**\n   * Return buffer used by outgoing handler into incoming.\n   *\n   * @param buffer -\n   */\n  private reuseBuffer(buffer: Buffer) {\n    this.incoming.push(buffer);\n    if (!this.isError && this.resolveData() && !this.isStreamEnd) {\n      this.readable.resume();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport * as fs from \"fs\";\nimport * as util from \"util\";\n\n/**\n * Reads a readable stream into buffer. Fill the buffer from offset to end.\n *\n * @param stream - A Node.js Readable stream\n * @param buffer - Buffer to be filled, length must greater than or equal to offset\n * @param offset - From which position in the buffer to be filled, inclusive\n * @param end - To which position in the buffer to be filled, exclusive\n * @param encoding - Encoding of the Readable stream\n */\nexport async function streamToBuffer(\n  stream: NodeJS.ReadableStream,\n  buffer: Buffer,\n  offset: number,\n  end: number,\n  encoding?: BufferEncoding\n): Promise<void> {\n  let pos = 0; // Position in stream\n  const count = end - offset; // Total amount of data needed in stream\n\n  return new Promise<void>((resolve, reject) => {\n    stream.on(\"readable\", () => {\n      if (pos >= count) {\n        resolve();\n        return;\n      }\n\n      let chunk = stream.read();\n      if (!chunk) {\n        return;\n      }\n      if (typeof chunk === \"string\") {\n        chunk = Buffer.from(chunk, encoding);\n      }\n\n      // How much data needed in this chunk\n      const chunkLength = pos + chunk.length > count ? count - pos : chunk.length;\n\n      buffer.fill(chunk.slice(0, chunkLength), offset + pos, offset + pos + chunkLength);\n      pos += chunkLength;\n    });\n\n    stream.on(\"end\", () => {\n      if (pos < count) {\n        reject(\n          new Error(\n            `Stream drains before getting enough data needed. Data read: ${pos}, data need: ${count}`\n          )\n        );\n      }\n      resolve();\n    });\n\n    stream.on(\"error\", reject);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Writes the content of a readstream to a local file. Returns a Promise which is completed after the file handle is closed.\n *\n * @param rs - The read stream.\n * @param file - Destination file path.\n */\nexport async function readStreamToLocalFile(\n  rs: NodeJS.ReadableStream,\n  file: string\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    const ws = fs.createWriteStream(file);\n\n    rs.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"error\", (err: Error) => {\n      reject(err);\n    });\n\n    ws.on(\"close\", resolve);\n\n    rs.pipe(ws);\n  });\n}\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * Promisified version of fs.stat().\n */\nexport const fsStat = util.promisify(fs.stat);\n\nexport const fsCreateReadStream = fs.createReadStream;\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { HttpRequestBody, HttpResponse, isNode, TransferProgressEvent } from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  CopyFileSmbInfo,\n  DeleteSnapshotsOptionType,\n  DirectoryCreateResponse,\n  DirectoryDeleteResponse,\n  DirectoryGetPropertiesResponse,\n  DirectoryItem,\n  DirectoryListFilesAndDirectoriesSegmentResponse,\n  DirectoryListHandlesResponse,\n  DirectorySetMetadataResponse,\n  DirectorySetPropertiesResponse,\n  DirectoryForceCloseHandlesHeaders,\n  FileAbortCopyResponse,\n  FileCreateResponse,\n  FileDeleteResponse,\n  FileDownloadOptionalParams,\n  FileDownloadResponseModel,\n  FileForceCloseHandlesHeaders,\n  FileGetPropertiesResponse,\n  FileGetRangeListHeaders,\n  FileGetRangeListDiffResponse,\n  FileItem,\n  FileListHandlesResponse,\n  FileSetHTTPHeadersResponse,\n  FileSetMetadataResponse,\n  FileStartCopyResponse,\n  FileUploadRangeFromURLResponse,\n  FileUploadRangeResponse,\n  HandleItem,\n  LeaseAccessConditions,\n  RangeModel,\n  ShareCreatePermissionResponse,\n  ShareCreateResponse,\n  ShareCreateSnapshotResponse,\n  ShareDeleteResponse,\n  ShareGetAccessPolicyHeaders,\n  ShareGetPermissionResponse,\n  ShareGetPropertiesResponseModel,\n  ShareGetStatisticsResponseModel,\n  ShareSetAccessPolicyResponse,\n  ShareSetMetadataResponse,\n  ShareSetQuotaResponse,\n  SignedIdentifierModel,\n  SourceModifiedAccessConditions,\n  ShareAccessTier,\n  ShareSetPropertiesResponse,\n  ShareRootSquash,\n  FileRenameResponse,\n  DirectoryRenameResponse,\n} from \"./generatedModels\";\nimport { Share, Directory, File } from \"./generated/src/operations\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport {\n  DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS,\n  DEFAULT_HIGH_LEVEL_CONCURRENCY,\n  FILE_MAX_SIZE_BYTES,\n  FILE_RANGE_MAX_SIZE_BYTES,\n  URLConstants,\n} from \"./utils/constants\";\nimport {\n  appendToURLPath,\n  setURLParameter,\n  truncatedISO8061Date,\n  extractConnectionStringParts,\n  getShareNameAndPathFromUrl,\n  appendToURLQuery,\n  httpAuthorizationToString,\n  setURLPath,\n  setURLQueries,\n} from \"./utils/utils.common\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { StorageClient, CommonOptions } from \"./StorageClient\";\nimport \"@azure/core-paging\";\nimport { PageSettings, PagedAsyncIterableIterator } from \"@azure/core-paging\";\nimport { FileSystemAttributes } from \"./FileSystemAttributes\";\nimport { FileDownloadResponse } from \"./FileDownloadResponse\";\nimport { Range, rangeToString } from \"./Range\";\nimport {\n  CloseHandlesInfo,\n  FileAndDirectoryCreateCommonOptions,\n  FileAndDirectorySetPropertiesCommonOptions,\n  fileAttributesToString,\n  fileCreationTimeToString,\n  FileHttpHeaders,\n  fileLastWriteTimeToString,\n  Metadata,\n  validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions,\n  validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions,\n  ShareProtocols,\n  toShareProtocolsString,\n  toShareProtocols,\n  HttpAuthorization,\n} from \"./models\";\nimport { Batch } from \"./utils/Batch\";\nimport { BufferScheduler } from \"./utils/BufferScheduler\";\nimport { Readable } from \"stream\";\nimport {\n  fsStat,\n  fsCreateReadStream,\n  readStreamToLocalFile,\n  streamToBuffer,\n} from \"./utils/utils.node\";\nimport { StorageClientContext } from \"./generated/src/storageClientContext\";\nimport { SERVICE_VERSION } from \"./utils/constants\";\nimport { generateUuid } from \"@azure/core-http\";\nimport { generateFileSASQueryParameters } from \"./FileSASSignatureValues\";\nimport { ShareSASPermissions } from \"./ShareSASPermissions\";\nimport { SASProtocol } from \"./SASQueryParameters\";\nimport { SasIPRange } from \"./SasIPRange\";\nimport { FileSASPermissions } from \"./FileSASPermissions\";\nimport { ListFilesIncludeType } from \"./generated/src\";\n\n/**\n * Options to configure the {@link ShareClient.create} operation.\n */\nexport interface ShareCreateOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A name-value pair to associate with a file storage object.\n   */\n  metadata?: { [propertyName: string]: string };\n\n  /**\n   * Specifies the maximum size of the share, in\n   * gigabytes.\n   */\n  quota?: number;\n\n  /**\n   * Specifies the access tier of the share. Possible values include: 'TransactionOptimized',\n   * 'Hot', 'Cool'\n   */\n  accessTier?: ShareAccessTier;\n\n  /**\n   * Supported in version 2020-02-10 and above. Specifies the enabled protocols on the share. If not specified, the default is SMB.\n   */\n  protocols?: ShareProtocols;\n  /**\n   * Root squash to set on the share.  Only valid for NFS shares. Possible values include:\n   * 'NoRootSquash', 'RootSquash', 'AllSquash'.\n   */\n  rootSquash?: ShareRootSquash;\n}\n\n/**\n * Options to configure the {@link ShareClient.delete} operation.\n */\nexport interface ShareDeleteMethodOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the option\n   * include to delete the base share and all of its snapshots. Possible values\n   * include: 'include'\n   */\n  deleteSnapshots?: DeleteSnapshotsOptionType;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.setMetadata} operation.\n */\nexport interface ShareSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.setAccessPolicy} operation.\n */\nexport interface ShareSetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.getAccessPolicy} operation.\n */\nexport interface ShareGetAccessPolicyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.exists} operation.\n */\nexport interface ShareExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.getProperties} operation.\n */\nexport interface ShareGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.setQuota} operation.\n */\nexport interface ShareSetQuotaOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.setProperties} operation.\n */\nexport interface ShareSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Specifies the access tier of the share. Possible values include: 'TransactionOptimized',\n   * 'Hot', 'Cool'.\n   */\n  accessTier?: ShareAccessTier;\n\n  /**\n   * Specifies the maximum size of the share, in gigabytes.\n   */\n  quotaInGB?: number;\n\n  /**\n   * Root squash to set on the share.  Only valid for NFS shares. Possible values include:\n   * 'NoRootSquash', 'RootSquash', 'AllSquash'.\n   */\n  rootSquash?: ShareRootSquash;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareClient.getStatistics} operation.\n */\nexport interface ShareGetStatisticsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * If specified, the operation only succeeds if the resource's lease is active and matches this ID.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Signed Identifier\n */\nexport interface SignedIdentifier {\n  /**\n   * a unique id\n   */\n  id: string;\n  /**\n   * Access Policy\n   */\n  accessPolicy: {\n    /**\n     * the date-time the policy is active.\n     */\n    startsOn: Date;\n    /**\n     * the date-time the policy expires.\n     */\n    expiresOn: Date;\n    /**\n     * the permissions for the acl policy\n     * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-acl\n     */\n    permissions: string;\n  };\n}\n\nexport declare type ShareGetAccessPolicyResponse = {\n  signedIdentifiers: SignedIdentifier[];\n} & ShareGetAccessPolicyHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ShareGetAccessPolicyHeaders;\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: SignedIdentifierModel[];\n    };\n  };\n\n/**\n * Options to configure the {@link ShareClient.createSnapshot} operation.\n */\nexport interface ShareCreateSnapshotOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A name-value pair to associate with a file storage object.\n   */\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * Options to configure the {@link ShareClient.createPermission} operation.\n */\nexport interface ShareCreatePermissionOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n/**\n * Options to configure the {@link ShareClient.getPermission} operation.\n */\nexport interface ShareGetPermissionOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Response data for the {@link ShareClient.getStatistics} Operation.\n */\nexport type ShareGetStatisticsResponse = ShareGetStatisticsResponseModel & {\n  /**\n   * @deprecated shareUsage is going to be deprecated. Please use ShareUsageBytes instead.\n   *\n   * The approximate size of the data stored on the share, rounded up to the nearest gigabyte. Note\n   * that this value may not include all recently created or recently resized files.\n   */\n  shareUsage: number;\n};\n\n/**\n * Contains response data for the {@link ShareClient.createIfNotExists} operation.\n */\nexport interface ShareCreateIfNotExistsResponse extends ShareCreateResponse {\n  /**\n   * Indicate whether the share is successfully created. Is false when the share is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link ShareClient.deleteIfExists} operation.\n */\nexport interface ShareDeleteIfExistsResponse extends ShareDeleteResponse {\n  /**\n   * Indicate whether the share is successfully deleted. Is false if the share does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link ShareClient.getProperties} operation.\n */\nexport type ShareGetPropertiesResponse = ShareGetPropertiesResponseModel & {\n  /**\n   * The protocols that have been enabled on the share.\n   */\n  protocols?: ShareProtocols;\n};\n\n/**\n * Common options of the {@link ShareGenerateSasUrlOptions} and {@link FileGenerateSasUrlOptions}.\n */\nexport interface CommonGenerateSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols, HTTPS only or HTTPSandHTTP\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The time after which the SAS will no longer work.\n   */\n  expiresOn?: Date;\n\n  /**\n   * Optional. IP ranges allowed in this SAS.\n   */\n  ipRange?: SasIPRange;\n\n  /**\n   * Optional. The name of the access policy on the share this SAS references if any.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   */\n  identifier?: string;\n\n  /**\n   * Optional. The cache-control header for the SAS.\n   */\n  cacheControl?: string;\n\n  /**\n   * Optional. The content-disposition header for the SAS.\n   */\n  contentDisposition?: string;\n\n  /**\n   * Optional. The content-encoding header for the SAS.\n   */\n  contentEncoding?: string;\n\n  /**\n   * Optional. The content-language header for the SAS.\n   */\n  contentLanguage?: string;\n\n  /**\n   * Optional. The content-type header for the SAS.\n   */\n  contentType?: string;\n}\n\n/**\n * Options to configure {@link ShareClient.generateSasUrl} operation.\n */\nexport interface ShareGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: ShareSASPermissions;\n}\n\n/**\n * A ShareClient represents a URL to the Azure Storage share allowing you to manipulate its directories and files.\n */\nexport class ShareClient extends StorageClient {\n  /**\n   * Share operation context provided by protocol layer.\n   */\n  private context: Share;\n\n  private _name: string;\n\n  /**\n   * The name of the share\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param name - Share name.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(connectionString: string, name: string, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file share, such as\n   *                     \"https://myaccount.file.core.windows.net/share\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/share?sasString\".\n   * @param credential - Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file share, such as\n   *                     \"https://myaccount.file.core.windows.net/share\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/share?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    urlOrConnectionString: string,\n    credentialOrPipelineOrShareName?: Credential | Pipeline | string,\n    // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    let url: string;\n    if (credentialOrPipelineOrShareName instanceof Pipeline) {\n      // (url: string, pipeline: Pipeline)\n      url = urlOrConnectionString;\n      pipeline = credentialOrPipelineOrShareName;\n    } else if (credentialOrPipelineOrShareName instanceof Credential) {\n      // (url: string, credential?: Credential, options?: StoragePipelineOptions)\n      url = urlOrConnectionString;\n      pipeline = newPipeline(credentialOrPipelineOrShareName, options);\n    } else if (\n      !credentialOrPipelineOrShareName &&\n      typeof credentialOrPipelineOrShareName !== \"string\"\n    ) {\n      // (url: string, credential?: Credential, options?: StoragePipelineOptions)\n      // The second parameter is undefined. Use anonymous credential.\n      url = urlOrConnectionString;\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    } else if (\n      credentialOrPipelineOrShareName &&\n      typeof credentialOrPipelineOrShareName === \"string\"\n    ) {\n      // (connectionString: string, name: string, options?: StoragePipelineOptions)\n      const extractedCreds = extractConnectionStringParts(urlOrConnectionString);\n      const name = credentialOrPipelineOrShareName;\n      if (extractedCreds.kind === \"AccountConnString\") {\n        if (isNode) {\n          const sharedKeyCredential = new StorageSharedKeyCredential(\n            extractedCreds.accountName!,\n            extractedCreds.accountKey\n          );\n          url = appendToURLPath(extractedCreds.url, name);\n          pipeline = newPipeline(sharedKeyCredential, options);\n        } else {\n          throw new Error(\"Account connection string is only supported in Node.js environment\");\n        }\n      } else if (extractedCreds.kind === \"SASConnString\") {\n        url = appendToURLPath(extractedCreds.url, name) + \"?\" + extractedCreds.accountSas;\n        pipeline = newPipeline(new AnonymousCredential(), options);\n      } else {\n        throw new Error(\n          \"Connection string must be either an Account connection string or a SAS connection string\"\n        );\n      }\n    } else {\n      throw new Error(\"Expecting non-empty strings for name parameter\");\n    }\n    super(url, pipeline);\n    this._name = getShareNameAndPathFromUrl(this.url).shareName;\n    this.context = new Share(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new ShareClient object identical to the source but with the specified snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base share.\n   *\n   * @param snapshot - The snapshot timestamp.\n   * @returns A new ShareClient object identical to the source but with the specified snapshot timestamp\n   */\n  public withSnapshot(snapshot: string): ShareClient {\n    return new ShareClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SHARE_SNAPSHOT,\n        snapshot.length === 0 ? undefined : snapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new share under the specified account. If the share with\n   * the same name already exists, the operation fails.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-share\n   *\n   * @param options - Options to Share Create operation.\n   * @returns Response data for the Share Create operation.\n   */\n  public async create(options: ShareCreateOptions = {}): Promise<ShareCreateResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-create\", options);\n    try {\n      return await this.context.create({\n        ...options,\n        enabledProtocols: toShareProtocolsString(options.protocols),\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new share under the specified account. If the share with\n   * the same name already exists, it is not changed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-share\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: ShareCreateOptions = {}\n  ): Promise<ShareCreateIfNotExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createIfNotExists\", options);\n    try {\n      const res = await this.create(updatedOptions);\n      return {\n        succeeded: true,\n        ...res,\n      };\n    } catch (e) {\n      if (e.details?.errorCode === \"ShareAlreadyExists\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when creating a share only if it doesn't already exist.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a {@link ShareDirectoryClient} object.\n   *\n   * @param directoryName - A directory name\n   * @returns The ShareDirectoryClient object for the given directory name.\n   */\n\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-subclients */\n  public getDirectoryClient(directoryName: string): ShareDirectoryClient {\n    return new ShareDirectoryClient(\n      appendToURLPath(this.url, encodeURIComponent(directoryName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Gets the directory client for the root directory of this share.\n   * Note that the root directory always exists and cannot be deleted.\n   *\n   * @readonly A new ShareDirectoryClient object for the root directory.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-subclients */\n  public get rootDirectoryClient(): ShareDirectoryClient {\n    return this.getDirectoryClient(\"\");\n  }\n\n  /**\n   * Creates a new subdirectory under this share.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param directoryName -\n   * @param options - Options to Directory Create operation.\n   * @returns Directory creation response data and the corresponding directory client.\n   */\n  public async createDirectory(\n    directoryName: string,\n    options: DirectoryCreateOptions = {}\n  ): Promise<{\n    directoryClient: ShareDirectoryClient;\n    directoryCreateResponse: DirectoryCreateResponse;\n  }> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createDirectory\", options);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      const directoryCreateResponse = await directoryClient.create(updatedOptions);\n      return {\n        directoryClient,\n        directoryCreateResponse,\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty sub directory under this share.\n   * Note that the directory must be empty before it can be deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param directoryName -\n   * @param options - Options to Directory Delete operation.\n   * @returns Directory deletion response data.\n   */\n  public async deleteDirectory(\n    directoryName: string,\n    options: DirectoryDeleteOptions = {}\n  ): Promise<DirectoryDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-deleteDirectory\", options);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      return await directoryClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new file or replaces a file under the root directory of this share.\n   * Note it only initializes the file with no content.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n   *\n   * @param fileName -\n   * @param size - Specifies the maximum size in bytes for the file, up to 4 TB.\n   * @param options - Options to File Create operation.\n   * @returns File creation response data and the corresponding file client.\n   */\n  public async createFile(\n    fileName: string,\n    size: number,\n    options: FileCreateOptions = {}\n  ): Promise<{ fileClient: ShareFileClient; fileCreateResponse: FileCreateResponse }> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createFile\", options);\n    try {\n      const directoryClient = this.rootDirectoryClient;\n      const fileClient = directoryClient.getFileClient(fileName);\n      const fileCreateResponse = await fileClient.create(size, updatedOptions);\n      return {\n        fileClient,\n        fileCreateResponse,\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes a file under the root directory of this share from the storage account.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code `SharingViolation`\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400\n   * (`InvalidQueryParameterValue`)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param directoryName -\n   * @param fileName -\n   * @param options - Options to File Delete operation.\n   * @returns Promise<FileDeleteResponse> File Delete response data.\n   */\n  public async deleteFile(\n    fileName: string,\n    options: FileDeleteOptions = {}\n  ): Promise<FileDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-deleteFile\", options);\n    try {\n      const directoryClient = this.rootDirectoryClient;\n      const fileClient = directoryClient.getFileClient(fileName);\n      return await fileClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns true if the Azrue share resource represented by this client exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing share might be deleted by other clients or\n   * applications. Vice versa new shares might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: ShareExistsOptions = {}): Promise<boolean> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-exists\", options);\n    try {\n      await this.getProperties(updatedOptions);\n      return true;\n    } catch (e) {\n      if (e.statusCode === 404) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when checking share existence\",\n        });\n        return false;\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata and system properties for the specified\n   * share.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-share-properties\n   *\n   * WARNING: The `metadata` object returned in the response will have its keys in lowercase, even if\n   * they originally contained uppercase characters. This differs from the metadata keys returned by\n   * the `listShares` method of {@link ShareServiceClient} using the `includeMetadata` option, which\n   * will retain their original casing.\n   *\n   * @returns Response data for the Share Get Properties operation.\n   */\n  public async getProperties(\n    options: ShareGetPropertiesOptions = {}\n  ): Promise<ShareGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-getProperties\", options);\n    try {\n      const res = await this.context.getProperties({\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      // parse protocols\n      const protocols = toShareProtocols(res.enabledProtocols);\n      (res as any).protocols = protocols;\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified share for deletion. The share and any directories or files\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-share\n   *\n   * @param options - Options to Share Delete operation.\n   * @returns Response data for the Share Delete operation.\n   */\n  public async delete(options: ShareDeleteMethodOptions = {}): Promise<ShareDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-delete\", options);\n    try {\n      return await this.context.delete({\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Marks the specified share for deletion if it exists. The share and any directories or files\n   * contained within it are later deleted during garbage collection.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-share\n   *\n   * @param options -\n   */\n  public async deleteIfExists(\n    options: ShareDeleteMethodOptions = {}\n  ): Promise<ShareDeleteIfExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-deleteIfExists\", options);\n    try {\n      const res = await this.delete(updatedOptions);\n      return {\n        succeeded: true,\n        ...res,\n      };\n    } catch (e) {\n      if (e.details?.errorCode === \"ShareNotFound\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when deleting a share only if it exists.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets one or more user-defined name-value pairs for the specified share.\n   *\n   * If no option provided, or no metadata defined in the option parameter, the share\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-metadata\n   *\n   * @param metadata - If no metadata provided, all existing directory metadata will be removed.\n   * @param option - Options to Share Set Metadata operation.\n   * @returns Response data for the Share Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: ShareSetMetadataOptions = {}\n  ): Promise<ShareSetMetadataResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-setMetadata\", options);\n    try {\n      return await this.context.setMetadata({\n        ...options,\n        metadata,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the permissions for the specified share. The permissions indicate\n   * whether share data may be accessed publicly.\n   *\n   * WARNING: JavaScript Date will potential lost precision when parsing start and expiry string.\n   * For example, new Date(\"2018-12-31T03:44:23.8827891Z\").toISOString() will get \"2018-12-31T03:44:23.882Z\".\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-share-acl\n   *\n   * @param option - Options to Share Get Access Policy operation.\n   * @returns Response data for the Share Get Access Policy operation.\n   */\n  public async getAccessPolicy(\n    options: ShareGetAccessPolicyOptions = {}\n  ): Promise<ShareGetAccessPolicyResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-getAccessPolicy\", options);\n    try {\n      const response = await this.context.getAccessPolicy({\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      const res: ShareGetAccessPolicyResponse = {\n        _response: response._response,\n        date: response.date,\n        etag: response.etag,\n        lastModified: response.lastModified,\n        requestId: response.requestId,\n        signedIdentifiers: [],\n        version: response.version,\n      };\n\n      for (const identifier of response) {\n        let accessPolicy: any = undefined;\n        if (identifier.accessPolicy) {\n          accessPolicy = {\n            permissions: identifier.accessPolicy.permissions,\n          };\n\n          if (identifier.accessPolicy.expiresOn) {\n            accessPolicy.expiresOn = new Date(identifier.accessPolicy.expiresOn);\n          }\n\n          if (identifier.accessPolicy.startsOn) {\n            accessPolicy.startsOn = new Date(identifier.accessPolicy.startsOn);\n          }\n        }\n\n        res.signedIdentifiers.push({\n          accessPolicy,\n          id: identifier.id,\n        });\n      }\n\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets the permissions for the specified share. The permissions indicate\n   * whether directories or files in a share may be accessed publicly.\n   *\n   * When you set permissions for a share, the existing permissions are replaced.\n   * If no shareAcl provided, the existing share ACL will be\n   * removed.\n   *\n   * When you establish a stored access policy on a share, it may take up to 30 seconds to take effect.\n   * During this interval, a shared access signature that is associated with the stored access policy will\n   * fail with status code 403 (Forbidden), until the access policy becomes active.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-share-acl\n   *\n   * @param shareAcl - Array of signed identifiers, each having a unique Id and details of access policy.\n   * @param option - Options to Share Set Access Policy operation.\n   * @returns Response data for the Share Set Access Policy operation.\n   */\n  public async setAccessPolicy(\n    shareAcl?: SignedIdentifier[],\n    options: ShareSetAccessPolicyOptions = {}\n  ): Promise<ShareSetAccessPolicyResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-setAccessPolicy\", options);\n    try {\n      const acl: SignedIdentifierModel[] = [];\n      for (const identifier of shareAcl || []) {\n        acl.push({\n          accessPolicy: {\n            expiresOn: identifier.accessPolicy?.expiresOn\n              ? truncatedISO8061Date(identifier.accessPolicy.expiresOn)\n              : undefined,\n            permissions: identifier.accessPolicy?.permissions,\n            startsOn: identifier.accessPolicy?.startsOn\n              ? truncatedISO8061Date(identifier.accessPolicy.startsOn)\n              : undefined,\n          },\n          id: identifier.id,\n        });\n      }\n\n      return await this.context.setAccessPolicy({\n        ...options,\n        shareAcl: acl,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a read-only snapshot of a share.\n   *\n   * @param options - Options to Share Create Snapshot operation.\n   * @returns Response data for the Share Create Snapshot operation.\n   */\n  public async createSnapshot(\n    options: ShareCreateSnapshotOptions = {}\n  ): Promise<ShareCreateSnapshotResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createSnapshot\", options);\n    try {\n      return await this.context.createSnapshot({\n        abortSignal: options.abortSignal,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets quota for the specified share.\n   *\n   * @deprecated Use {@link ShareClient.setProperties} instead.\n   *\n   * @param quotaInGB - Specifies the maximum size of the share in gigabytes\n   * @param option - Options to Share Set Quota operation.\n   * @returns Response data for the Share Get Quota operation.\n   */\n  public async setQuota(\n    quotaInGB: number,\n    options: ShareSetQuotaOptions = {}\n  ): Promise<ShareSetQuotaResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-setQuota\", options);\n    try {\n      return await this.context.setProperties({\n        ...options,\n        quota: quotaInGB,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties of the share.\n   *\n   * @param option - Options to Share Set Properties operation.\n   * @returns Response data for the Share Set Properties operation.\n   */\n  public async setProperties(\n    options: ShareSetPropertiesOptions = {}\n  ): Promise<ShareSetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-setProperties\", options);\n    try {\n      return await this.context.setProperties({\n        ...options,\n        quota: options.quotaInGB,\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Retrieves statistics related to the share.\n   *\n   * @param option - Options to Share Get Statistics operation.\n   * @returns Response data for the Share Get Statistics operation.\n   */\n  public async getStatistics(\n    options: ShareGetStatisticsOptions = {}\n  ): Promise<ShareGetStatisticsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-getStatistics\", options);\n    try {\n      const response = await this.context.getStatistics({\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      const GBBytes = 1024 * 1024 * 1024;\n      return { ...response, shareUsage: Math.ceil(response.shareUsageBytes / GBBytes) };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a file permission (a security descriptor) at the share level.\n   * The created security descriptor can be used for the files/directories in the share.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-permission\n   *\n   * @param options - Options to Share Create Permission operation.\n   * @param filePermission - File permission described in the SDDL\n   */\n  public async createPermission(\n    filePermission: string,\n    options: ShareCreatePermissionOptions = {}\n  ): Promise<ShareCreatePermissionResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-createPermission\", options);\n    try {\n      return await this.context.createPermission(\n        {\n          permission: filePermission,\n        },\n        {\n          abortSignal: options.abortSignal,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the Security Descriptor Definition Language (SDDL) for a given file permission key\n   * which indicates a security descriptor.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-permission\n   *\n   * @param options - Options to Share Create Permission operation.\n   * @param filePermissionKey - File permission key which indicates the security descriptor of the permission.\n   */\n  public async getPermission(\n    filePermissionKey: string,\n    options: ShareGetPermissionOptions = {}\n  ): Promise<ShareGetPermissionResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareClient-getPermission\", options);\n    try {\n      return await this.context.getPermission(filePermissionKey, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Only available for ShareClient constructed with a shared key credential.\n   *\n   * Generates a Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: ShareGenerateSasUrlOptions): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the SAS when the client is initialized with a shared key credential\"\n      );\n    }\n\n    const sas = generateFileSASQueryParameters(\n      {\n        shareName: this.name,\n        ...options,\n      },\n      this.credential\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n}\n\n/**\n * Options to configure {@link ShareDirectoryClient.create} operation.\n */\nexport interface DirectoryCreateOptions extends FileAndDirectoryCreateCommonOptions, CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the file storage object.\n   */\n  metadata?: Metadata;\n}\n\nexport interface DirectoryProperties\n  extends FileAndDirectorySetPropertiesCommonOptions,\n    CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure Directory - List Files and Directories Segment operations.\n *\n * See:\n * - {@link ShareDirectoryClient.iterateFilesAndDirectoriesSegments}\n * - {@link ShareDirectoryClient.listFilesAndDirectoriesItems}\n * - {@link ShareDirectoryClient.listFilesAndDirectoriesSegment}\n */\ninterface DirectoryListFilesAndDirectoriesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   */\n  prefix?: string;\n\n  /**\n   * Specifies the maximum number of entries to\n   * return. If the request does not specify maxResults, or specifies a value\n   * greater than 5,000, the server will return up to 5,000 items.\n   */\n  maxResults?: number;\n  /** Include this parameter to specify one or more datasets to include in the response. */\n  include?: ListFilesIncludeType[];\n  /**\n   * Optional. Specified that extended info should be included in the returned {@link FileItem} or {@link DirectoryItem}.\n   * If true, the Content-Length property will be up-to-date, FileId will be returned in response.\n   */\n  includeExtendedInfo?: boolean;\n}\n\n/**\n * Options to configure {@link ShareDirectoryClient.listFilesAndDirectories} operation.\n */\nexport interface DirectoryListFilesAndDirectoriesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   */\n  prefix?: string;\n  /*\n   * Optional. Specified that time stamps should be included in the response.\n   */\n  includeTimestamps?: boolean;\n  /*\n   * Optional. Specified that ETag should be included in the response.\n   */\n  includeEtag?: boolean;\n  /*\n   * Optional. Specified that file attributes should be included in the response.\n   */\n  includeAttributes?: boolean;\n  /*\n   * Optional. Specified that permission key should be included in the response.\n   */\n  includePermissionKey?: boolean;\n  /**\n   * Optional. Specified that extended info should be included in the returned {@link FileItem} or {@link DirectoryItem}.\n   * If true, the Content-Length property will be up-to-date, FileId will be returned in response.\n   */\n  includeExtendedInfo?: boolean;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.delete} operation.\n */\nexport interface DirectoryDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.exists} operation.\n */\nexport interface DirectoryExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.getProperties} operation.\n */\nexport interface DirectoryGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.setMetadata} operation.\n */\nexport interface DirectorySetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure Directory - List Handles Segment operations.\n *\n * See:\n * - {@link ShareDirectoryClient.listHandlesSegment}\n * - {@link ShareDirectoryClient.iterateHandleSegments}\n * - {@link ShareDirectoryClient.listHandleItems}\n *\n */\nexport interface DirectoryListHandlesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of entries to return. If the request does not specify maxResults,\n   * or specifies a value greater than 5,000, the server will return up to 5,000 items.\n   */\n  maxResults?: number;\n  /**\n   * Specifies operation should apply to the directory specified in the URI, its files, its\n   * subdirectories and their files.\n   */\n  recursive?: boolean;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.listHandles} operation.\n */\nexport interface DirectoryListHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies whether operation should apply to the directory specified in the URI, its files, its\n   * subdirectories and their files.\n   */\n  recursive?: boolean;\n}\n\n/**\n * Options to configure Directory - Force Close Handles Segment operations.\n *\n * See:\n * - {@link ShareDirectoryClient.forceCloseHandlesSegment}\n * - {@link ShareDirectoryClient.forceCloseAllHandles}\n */\nexport interface DirectoryForceCloseHandlesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies operation should apply to the directory specified in the URI, its files, its\n   * subdirectories and their files.\n   */\n  recursive?: boolean;\n}\n\n/**\n * Additional response header values for close handles request.\n */\nexport interface DirectoryCloseHandlesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the File service used to execute the request.\n   */\n  version?: string;\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * A string describing next handle to be closed. It is returned when more handles need to be\n   * closed to complete the request.\n   */\n  marker?: string;\n}\n\n/**\n * Response type for {@link ShareDirectoryClient.forceCloseHandle}.\n */\nexport type DirectoryForceCloseHandlesResponse = CloseHandlesInfo &\n  DirectoryCloseHandlesHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: DirectoryForceCloseHandlesHeaders;\n    };\n  };\n\n/**\n * Options to configure {@link ShareDirectoryClient.forceCloseHandle}.\n */\nexport interface DirectoryForceCloseHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Contains response data for the {@link DirectoryClient.createIfNotExists} operation.\n */\nexport interface DirectoryCreateIfNotExistsResponse extends DirectoryCreateResponse {\n  /**\n   * Indicate whether the directory is successfully created. Is false when the directory is not changed as it already exists.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Contains response data for the {@link DirectoryClient.deleteIfExists} operation.\n */\nexport interface DirectoryDeleteIfExistsResponse extends DirectoryDeleteResponse {\n  /**\n   * Indicate whether the directory is successfully deleted. Is false if the directory does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * A ShareDirectoryClient represents a URL to the Azure Storage directory allowing you to manipulate its files and directories.\n */\nexport class ShareDirectoryClient extends StorageClient {\n  /**\n   * context provided by protocol layer.\n   */\n  private context: Directory;\n\n  private _shareName: string;\n  private _path: string;\n  private _name: string;\n\n  /**\n   * The share name corresponding to this directory client\n   */\n  public get shareName(): string {\n    return this._shareName;\n  }\n\n  /**\n   * The full path of the directory\n   */\n  public get path(): string {\n    return this._path;\n  }\n\n  /**\n   * The name of the directory\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Creates an instance of DirectoryClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file directory, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a directory.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a directory name includes %, directory name must be encoded in the URL.\n   *                     Such as a directory named \"mydir%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydir%25\".\n   * @param credential - Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of DirectoryClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file directory, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a directory.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a directory name includes %, directory name must be encoded in the URL.\n   *                     Such as a directory named \"mydir%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydir%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | Pipeline,\n    options: StoragePipelineOptions = {}\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (credentialOrPipeline instanceof Credential) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n\n    super(url, pipeline);\n    ({\n      baseName: this._name,\n      shareName: this._shareName,\n      path: this._path,\n    } = getShareNameAndPathFromUrl(this.url));\n    this.context = new Directory(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new directory under the specified share or parent directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param options - Options to Directory Create operation.\n   * @returns Response data for the Directory  operation.\n   */\n  public async create(options: DirectoryCreateOptions = {}): Promise<DirectoryCreateResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-create\", options);\n    try {\n      if (!options.fileAttributes) {\n        options = validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(options);\n        // By default set it as a directory.\n        const attributes: FileSystemAttributes = new FileSystemAttributes();\n        attributes.directory = true;\n        options.fileAttributes = attributes;\n      }\n\n      return await this.context.create(\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          metadata: options.metadata,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new directory under the specified share or parent directory if it does not already exists.\n   * If the directory already exists, it is not modified.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param options -\n   */\n  public async createIfNotExists(\n    options: DirectoryCreateOptions = {}\n  ): Promise<DirectoryCreateIfNotExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-createIfNotExists\", options);\n    try {\n      const res = await this.create(updatedOptions);\n      return {\n        succeeded: true,\n        ...res,\n      };\n    } catch (e) {\n      if (e.details?.errorCode === \"ResourceAlreadyExists\") {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message:\n            \"Expected exception when creating a directory only if it does not already exist.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties on the directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-properties\n   *\n   * @param DirectoryProperties - Directory properties. If no values are provided,\n   *                                            existing values will be preserved.\n   */\n  public async setProperties(\n    properties: DirectoryProperties = {}\n  ): Promise<DirectorySetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-setProperties\", properties);\n    try {\n      properties = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(properties);\n\n      return await this.context.setProperties(\n        fileAttributesToString(properties.fileAttributes!),\n        fileCreationTimeToString(properties.creationTime!),\n        fileLastWriteTimeToString(properties.lastWriteTime!),\n        {\n          abortSignal: properties.abortSignal,\n          filePermission: properties.filePermission,\n          filePermissionKey: properties.filePermissionKey,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a ShareDirectoryClient object for a sub directory.\n   *\n   * @param subDirectoryName - A subdirectory name\n   * @returns The ShareDirectoryClient object for the given subdirectory name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const directoryClient = shareClient.getDirectoryClient(\"<directory name>\");\n   * await directoryClient.create();\n   * console.log(\"Created directory successfully\");\n   * ```\n   */\n  public getDirectoryClient(subDirectoryName: string): ShareDirectoryClient {\n    return new ShareDirectoryClient(\n      appendToURLPath(this.url, encodeURIComponent(subDirectoryName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new subdirectory under this directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-directory\n   *\n   * @param directoryName -\n   * @param options - Options to Directory Create operation.\n   * @returns Directory create response data and the corresponding DirectoryClient instance.\n   */\n  public async createSubdirectory(\n    directoryName: string,\n    options: DirectoryCreateOptions = {}\n  ): Promise<{\n    directoryClient: ShareDirectoryClient;\n    directoryCreateResponse: DirectoryCreateResponse;\n  }> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-createSubdirectory\", options);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      const directoryCreateResponse = await directoryClient.create(updatedOptions);\n      return {\n        directoryClient,\n        directoryCreateResponse,\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty sub directory under this directory.\n   * Note that the directory must be empty before it can be deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param directoryName -\n   * @param options - Options to Directory Delete operation.\n   * @returns Directory deletion response data.\n   */\n  public async deleteSubdirectory(\n    directoryName: string,\n    options: DirectoryDeleteOptions = {}\n  ): Promise<DirectoryDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-deleteSubdirectory\", options);\n    try {\n      const directoryClient = this.getDirectoryClient(directoryName);\n      return await directoryClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a new file or replaces a file under this directory. Note it only initializes the file with no content.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n   *\n   * @param fileName -\n   * @param size - Specifies the maximum size in bytes for the file, up to 4 TB.\n   * @param options - Options to File Create operation.\n   * @returns File creation response data and the corresponding file client.\n   */\n  public async createFile(\n    fileName: string,\n    size: number,\n    options: FileCreateOptions = {}\n  ): Promise<{ fileClient: ShareFileClient; fileCreateResponse: FileCreateResponse }> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-createFile\", options);\n    try {\n      const fileClient = this.getFileClient(fileName);\n      const fileCreateResponse = await fileClient.create(size, updatedOptions);\n      return {\n        fileClient,\n        fileCreateResponse,\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified file under this directory from the storage account.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code SharingViolation\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400 (InvalidQueryParameterValue)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param fileName - Name of the file to delete\n   * @param options - Options to File Delete operation.\n   * @returns File deletion response data.\n   */\n  public async deleteFile(\n    fileName: string,\n    options: FileDeleteOptions = {}\n  ): Promise<FileDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-deleteFile\", options);\n    try {\n      const fileClient = this.getFileClient(fileName);\n      return await fileClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Creates a {@link ShareFileClient} object.\n   *\n   * @param fileName - A file name.\n   * @returns A new ShareFileClient object for the given file name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\"\n   *\n   * const fileClient = directoryClient.getFileClient(\"<file name>\");\n   *\n   * await fileClient.create(content.length);\n   * console.log(\"Created file successfully!\");\n   *\n   * await fileClient.uploadRange(content, 0, content.length);\n   * console.log(\"Updated file successfully!\")\n   * ```\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-subclients */\n  public getFileClient(fileName: string): ShareFileClient {\n    return new ShareFileClient(\n      appendToURLPath(this.url, encodeURIComponent(fileName)),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Returns true if the specified directory exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing directory might be deleted by other clients or\n   * applications. Vice versa new directories might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: DirectoryExistsOptions = {}): Promise<boolean> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-exists\", options);\n    try {\n      await this.getProperties({\n        abortSignal: options.abortSignal,\n        tracingOptions: {\n          ...options.tracingOptions,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        },\n      });\n      return true;\n    } catch (e) {\n      if (e.statusCode === 404) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when checking directory existence\",\n        });\n        return false;\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all system properties for the specified directory, and can also be used to check the\n   * existence of a directory. The data returned does not include the files in the directory or any\n   * subdirectories.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-directory-properties\n   *\n   * @param options - Options to Directory Get Properties operation.\n   * @returns Response data for the Directory Get Properties operation.\n   */\n  public async getProperties(\n    options: DirectoryGetPropertiesOptions = {}\n  ): Promise<DirectoryGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-getProperties\", options);\n    try {\n      return await this.context.getProperties({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty directory. Note that the directory must be empty before it can be\n   * deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param options - Options to Directory Delete operation.\n   * @returns Response data for the Directory Delete operation.\n   */\n  public async delete(options: DirectoryDeleteOptions = {}): Promise<DirectoryDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-delete\", options);\n    try {\n      return await this.context.delete({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the specified empty directory if it exists. Note that the directory must be empty before it can be\n   * deleted.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-directory\n   *\n   * @param options -\n   */\n  public async deleteIfExists(\n    options: DirectoryDeleteOptions = {}\n  ): Promise<DirectoryDeleteIfExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-deleteIfExists\", options);\n    try {\n      const res = await this.delete(updatedOptions);\n      return {\n        succeeded: true,\n        ...res,\n      };\n    } catch (e) {\n      if (\n        e.details?.errorCode === \"ResourceNotFound\" ||\n        e.details?.errorCode === \"ParentNotFound\"\n      ) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when deleting a directory only if it exists.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Updates user defined metadata for the specified directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-directory-metadata\n   *\n   * @param metadata - If no metadata provided, all existing directory metadata will be removed\n   * @param options - Options to Directory Set Metadata operation.\n   * @returns Response data for the Directory Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata?: Metadata,\n    options: DirectorySetMetadataOptions = {}\n  ): Promise<DirectorySetMetadataResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-setMetadata\", options);\n    try {\n      return await this.context.setMetadata({\n        abortSignal: options.abortSignal,\n        metadata,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link DirectoryListFilesAndDirectoriesSegmentResponse} objects\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list of files and directories to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all files and directories remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list files and directories operation.\n   */\n  private async *iterateFilesAndDirectoriesSegments(\n    marker?: string,\n    options: DirectoryListFilesAndDirectoriesSegmentOptions = {}\n  ): AsyncIterableIterator<DirectoryListFilesAndDirectoriesSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let listFilesAndDirectoriesResponse;\n    do {\n      listFilesAndDirectoriesResponse = await this.listFilesAndDirectoriesSegment(marker, options);\n      marker = listFilesAndDirectoriesResponse.continuationToken;\n      yield await listFilesAndDirectoriesResponse;\n    } while (marker);\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for file and directory items\n   *\n   * @param options - Options to list files and directories operation.\n   */\n  private async *listFilesAndDirectoriesItems(\n    options: DirectoryListFilesAndDirectoriesSegmentOptions = {}\n  ): AsyncIterableIterator<\n    ({ kind: \"file\" } & FileItem) | ({ kind: \"directory\" } & DirectoryItem)\n  > {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let marker: string | undefined;\n    for await (const listFilesAndDirectoriesResponse of this.iterateFilesAndDirectoriesSegments(\n      marker,\n      options\n    )) {\n      for (const file of listFilesAndDirectoriesResponse.segment.fileItems) {\n        yield { kind: \"file\", ...file };\n      }\n      for (const directory of listFilesAndDirectoriesResponse.segment.directoryItems) {\n        yield { kind: \"directory\", ...directory };\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the files and directories\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the files and directories in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const entity of directoryClient.listFilesAndDirectories()) {\n   *   if (entity.kind === \"directory\") {\n   *     console.log(`${i++} - directory\\t: ${entity.name}`);\n   *   } else {\n   *     console.log(`${i++} - file\\t: ${entity.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = directoryClient.listFilesAndDirectories();\n   * let entity = await iter.next();\n   * while (!entity.done) {\n   *   if (entity.value.kind === \"directory\") {\n   *     console.log(`${i++} - directory\\t: ${entity.value.name}`);\n   *   } else {\n   *     console.log(`${i++} - file\\t: ${entity.value.name}`);\n   *   }\n   *   entity = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of directoryClient\n   *   .listFilesAndDirectories()\n   *   .byPage({ maxPageSize: 20 })) {\n   *   for (const fileItem of response.segment.fileItems) {\n   *     console.log(`${i++} - file\\t: ${fileItem.name}`);\n   *   }\n   *   for (const dirItem of response.segment.directoryItems) {\n   *     console.log(`${i++} - directory\\t: ${dirItem.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = directoryClient.listFilesAndDirectories().byPage({ maxPageSize: 3 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 3 file and directory names\n   * for (const fileItem of response.segment.fileItems) {\n   *   console.log(`${i++} - file\\t: ${fileItem.name}`);\n   * }\n   *\n   * for (const dirItem of response.segment.directoryItems) {\n   *   console.log(`${i++} - directory\\t: ${dirItem.name}`);\n   * }\n   *\n   * // Gets next marker\n   * let dirMarker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   * iterator = directoryClient\n   *   .listFilesAndDirectories()\n   *   .byPage({ continuationToken: dirMarker, maxPageSize: 4 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 file and directory names\n   * for (const fileItem of response.segment.fileItems) {\n   *   console.log(`${i++} - file\\t: ${fileItem.name}`);\n   * }\n   *\n   * for (const dirItem of response.segment.directoryItems) {\n   *   console.log(`${i++} - directory\\t: ${dirItem.name}`);\n   * }\n   * ```\n   *\n   * @param options - Options to list files and directories operation.\n   * @returns An asyncIterableIterator that supports paging.\n   */\n  public listFilesAndDirectories(\n    options: DirectoryListFilesAndDirectoriesOptions = {}\n  ): PagedAsyncIterableIterator<\n    ({ kind: \"file\" } & FileItem) | ({ kind: \"directory\" } & DirectoryItem),\n    DirectoryListFilesAndDirectoriesSegmentResponse\n  > {\n    const include: ListFilesIncludeType[] = [];\n    if (options.includeTimestamps) {\n      include.push(\"Timestamps\");\n    }\n    if (options.includeEtag) {\n      include.push(\"Etag\");\n    }\n    if (options.includeAttributes) {\n      include.push(\"Attributes\");\n    }\n    if (options.includePermissionKey) {\n      include.push(\"PermissionKey\");\n    }\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const updatedOptions: DirectoryListFilesAndDirectoriesSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n\n    // AsyncIterableIterator to iterate over files and directories\n    const iter = this.listFilesAndDirectoriesItems(updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.iterateFilesAndDirectoriesSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Returns a list of files or directories under the specified share or directory. It lists the\n   * contents only for a single level of the directory hierarchy.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-directories-and-files\n   *\n   * @param marker - A string value that identifies the portion of the list to be returned with the next list operation.\n   * @param options - Options to Directory List Files and Directories Segment operation.\n   * @returns Response data for the Directory List Files and Directories operation.\n   */\n  private async listFilesAndDirectoriesSegment(\n    marker?: string,\n    options: DirectoryListFilesAndDirectoriesSegmentOptions = {}\n  ): Promise<DirectoryListFilesAndDirectoriesSegmentResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"ShareDirectoryClient-listFilesAndDirectoriesSegment\",\n      options\n    );\n\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    try {\n      return await this.context.listFilesAndDirectoriesSegment({\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link DirectoryListHandlesResponse}\n   *\n   * @param marker - A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param options - Options to list handles operation.\n   */\n  private async *iterateHandleSegments(\n    marker?: string,\n    options: DirectoryListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<DirectoryListHandlesResponse> {\n    let listHandlesResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listHandlesResponse = await this.listHandlesSegment(marker, options);\n        marker = listHandlesResponse.continuationToken;\n        yield await listHandlesResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for handles\n   *\n   * @param options - Options to list handles operation.\n   */\n  private async *listHandleItems(\n    options: DirectoryListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<HandleItem> {\n    let marker: string | undefined;\n    for await (const listHandlesResponse of this.iterateHandleSegments(marker, options)) {\n      if (listHandlesResponse.handleList) {\n        for (const handle of listHandlesResponse.handleList) {\n          yield handle;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the handles.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the handles in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = dirClient.listHandles();\n   * for await (const handle of iter) {\n   *   console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = dirClient.listHandles();\n   * let handleItem = await iter.next();\n   * while (!handleItem.done) {\n   *   console.log(`Handle ${i++}: ${handleItem.value.path}, opened time ${handleItem.value.openTime}, clientIp ${handleItem.value.clientIp}`);\n   *   handleItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of dirClient.listHandles({ recursive: true }).byPage({ maxPageSize: 20 })) {\n   *   if (response.handleList) {\n   *     for (const handle of response.handleList) {\n   *       console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = dirClient.listHandles().byPage({ maxPageSize: 2 });\n   * let response = await iterator.next();\n   *\n   * // Prints 2 handles\n   * if (response.value.handleList) {\n   *   for (const handle of response.value.handleList) {\n   *     console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.value.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   * console.log(`    continuation`);\n   * iterator = dirClient.listHandles().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = await iterator.next();\n   *\n   * // Prints 2 more handles assuming you have more than four directory/files opened\n   * if (!response.done && response.value.handleList) {\n   *   for (const handle of response.value.handleList) {\n   *     console.log(`Handle ${i++}: ${handle.path}, opened time ${handle.openTime}, clientIp ${handle.clientIp}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param options - Options to list handles operation.\n   *\n   * An asyncIterableIterator that supports paging.\n   */\n  public listHandles(\n    options: DirectoryListHandlesOptions = {}\n  ): PagedAsyncIterableIterator<HandleItem, DirectoryListHandlesResponse> {\n    // an AsyncIterableIterator to iterate over handles\n    const iter = this.listHandleItems(options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.iterateHandleSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...options,\n        });\n      },\n    };\n  }\n\n  /**\n   * Lists handles for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles\n   *\n   * @param marker - Optional. A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param options -\n   */\n  private async listHandlesSegment(\n    marker?: string,\n    options: DirectoryListHandlesSegmentOptions = {}\n  ): Promise<DirectoryListHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-listHandlesSegment\", options);\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const response = await this.context.listHandles({\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      // TODO: Protocol layer issue that when handle list is in returned XML\n      // response.handleList is an empty string\n      if ((response.handleList as any) === \"\") {\n        response.handleList = undefined;\n      }\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close all handles for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param marker - Optional. A string value that identifies the position of handles that will\n   *                          be closed with the next force close handles operation.\n   *                          The operation returns a marker value within the response\n   *                          body if there are more handles to close. The marker value\n   *                          may then be used in a subsequent call to close the next set of handles.\n   * @param options -\n   */\n  private async forceCloseHandlesSegment(\n    marker?: string,\n    options: DirectoryForceCloseHandlesSegmentOptions = {}\n  ): Promise<DirectoryForceCloseHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"ShareDirectoryClient-forceCloseHandlesSegment\",\n      options\n    );\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const rawResponse = await this.context.forceCloseHandles(\"*\", {\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n      const response = rawResponse as DirectoryForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close all handles for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param options -\n   */\n  public async forceCloseAllHandles(\n    options: DirectoryForceCloseHandlesSegmentOptions = {}\n  ): Promise<CloseHandlesInfo> {\n    const { span, updatedOptions } = createSpan(\n      \"ShareDirectoryClient-forceCloseAllHandles\",\n      options\n    );\n    try {\n      let handlesClosed = 0;\n      let numberOfHandlesFailedToClose = 0;\n      let marker: string | undefined = \"\";\n\n      do {\n        const response: DirectoryForceCloseHandlesResponse = await this.forceCloseHandlesSegment(\n          marker,\n          updatedOptions\n        );\n        marker = response.marker;\n        if (response.closedHandlesCount) {\n          handlesClosed += response.closedHandlesCount;\n        }\n        if (response.closeFailureCount) {\n          numberOfHandlesFailedToClose += response.closeFailureCount;\n        }\n      } while (marker);\n\n      return { closedHandlesCount: handlesClosed, closeFailureCount: numberOfHandlesFailedToClose };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close a specific handle for a directory.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param aborter - Create a new Aborter instance with Aborter.none or Aborter.timeout(),\n   *                          goto documents of Aborter for more examples about request cancellation\n   * @param handleId - Specific handle ID, cannot be asterisk \"*\".\n   *                          Use forceCloseHandlesSegment() to close all handles.\n   * @param options -\n   */\n  public async forceCloseHandle(\n    handleId: string,\n    options: DirectoryForceCloseHandlesOptions = {}\n  ): Promise<DirectoryForceCloseHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-forceCloseHandle\", options);\n    try {\n      if (handleId === \"*\") {\n        throw new RangeError(\n          `Parameter handleID should be a specified handle ID. Use forceCloseHandlesSegment() to close all handles.`\n        );\n      }\n\n      const rawResponse = await this.context.forceCloseHandles(handleId, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n      const response = rawResponse as DirectoryForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Renames a directory.\n   * This API only supports renaming a directory in the same share.\n   *\n   * @param destinationPath - Specifies the destination path to rename to. The path will be encoded to put into a URL to specify the destination.\n   * @param options - Options for the renaming operation.\n   * @returns Response data for the file renaming operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   *\n   * // Rename the directory\n   * await diretoryClient.rename(destinationPath);\n   * console.log(\"Renamed directory successfully!\");\n   * ```\n   */\n  public async rename(\n    destinationPath: string,\n    options: DirectoryRenameOptions = {}\n  ): Promise<{\n    destinationDirectoryClient: ShareDirectoryClient;\n    directoryRenameResponse: DirectoryRenameResponse;\n  }> {\n    const { span, updatedOptions } = createSpan(\"ShareDirectoryClient-rename\", options);\n    const split: string[] = destinationPath.split(\"?\");\n    let destinationUrl: string;\n    if (split.length === 2) {\n      const pathOnly = encodeURIComponent(split[0]);\n      const renameDestination = `/${this.shareName}/${pathOnly}`;\n      destinationUrl = setURLPath(this.url, renameDestination);\n      destinationUrl = setURLQueries(destinationUrl, split[1]);\n    } else if (split.length === 1) {\n      const pathOnly = encodeURIComponent(destinationPath);\n      const renameDestination = `/${this.shareName}/${pathOnly}`;\n      destinationUrl = setURLPath(this.url, renameDestination);\n    } else {\n      throw new RangeError(\"Destination path should not contain more than one query string\");\n    }\n\n    const destDirectory = new ShareDirectoryClient(destinationUrl, this.pipeline);\n\n    try {\n      const response = await destDirectory.context.rename(this.url, {\n        ...updatedOptions,\n        sourceLeaseAccessConditions: updatedOptions.sourceLeaseAccessConditions\n          ? {\n              sourceLeaseId: updatedOptions.sourceLeaseAccessConditions.leaseId,\n            }\n          : undefined,\n        destinationLeaseAccessConditions: updatedOptions.destinationLeaseAccessConditions\n          ? {\n              destinationLeaseId: updatedOptions.destinationLeaseAccessConditions.leaseId,\n            }\n          : undefined,\n      });\n\n      return {\n        destinationDirectoryClient: destDirectory,\n        directoryRenameResponse: response,\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * Options to configure the {@link ShareFileClient.create} operation.\n */\nexport interface FileCreateOptions extends FileAndDirectoryCreateCommonOptions, CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * File HTTP headers like Content-Type.\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n\n  /**\n   * A collection of key-value string pair to associate with the file storage object.\n   */\n  metadata?: Metadata;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\nexport interface FileProperties extends FileAndDirectorySetPropertiesCommonOptions, CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * File HTTP headers like Content-Type.\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\nexport interface SetPropertiesResponse extends FileSetHTTPHeadersResponse {}\n\n/**\n * Options to configure the {@link ShareFileClient.delete} operation.\n */\nexport interface FileDeleteOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure File - Download operations.\n *\n * See:\n * - {@link ShareFileClient.download}\n * - {@link ShareFileClient.downloadToFile}\n */\nexport interface FileDownloadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original body download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional ShareFileClient.download() request will be made\n   * from the broken point, until the requested range has been successfully downloaded or maxRetryRequests is reached.\n   *\n   * Default value is 5, please set a larger value when loading large files in poor network.\n   */\n  maxRetryRequests?: number;\n\n  /**\n   * When this header is set to true and\n   * specified together with the Range header, the service returns the MD5 hash\n   * for the range, as long as the range is less than or equal to 4 MB in size.\n   */\n  rangeGetContentMD5?: boolean;\n\n  /**\n   * Download progress updating event handler.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.uploadRange} operation.\n */\nexport interface FileUploadRangeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * An MD5 hash of the content. This hash is\n   * used to verify the integrity of the data during transport. When the\n   * Content-MD5 header is specified, the File service compares the hash of the\n   * content that has arrived with the header value that was sent. If the two\n   * hashes do not match, the operation will fail with error code 400 (Bad\n   * Request).\n   */\n  contentMD5?: Uint8Array;\n\n  /**\n   * Progress updating event handler.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.uploadRangeFromURL} operation.\n */\nexport interface FileUploadRangeFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * The timeout parameter is expressed in seconds. For more information, see <a\n   * href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\">Setting\n   * Timeouts for File Service Operations.</a>\n   */\n  timeoutInSeconds?: number;\n  /**\n   * Specify the crc64 calculated for the range of bytes that must be read from the copy source.\n   */\n  sourceContentCrc64?: Uint8Array;\n  /**\n   * Additional parameters for the operation\n   */\n  sourceConditions?: SourceModifiedAccessConditions;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * Only Bearer type is supported. Credentials should be a valid OAuth access token to copy source.\n   */\n  sourceAuthorization?: HttpAuthorization;\n}\n\n/**\n * The option is defined as parity to REST definition.\n * While it's not ready to be used now, considering Crc64 of source content is\n * not accessible.\n */\n// export interface IFileUploadRangeFromURLOptions extends CommonOptions {\n//   /**\n//    * Crc64 of the source content.\n//    *\n//    * @type {Uint8Array}\n//    * @memberof IFileUploadRangeFromURLOptions\n//    */\n//   sourceContentCrc64?: Uint8Array;\n\n//   /**\n//    * Source modified access condition.\n//    *\n//    * @type {SourceModifiedAccessConditions}\n//    * @memberof IFileUploadRangeFromURLOptions\n//    */\n//   sourceModifiedAccessConditions?: SourceModifiedAccessConditions;\n// }\n\n/**\n * Options to configure the {@link ShareFileClient.getRangeList} operation.\n */\nexport interface FileGetRangeListOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Optional. Specifies the range of bytes over which to list ranges, inclusively.\n   */\n  range?: Range;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.exists} operation.\n */\nexport interface FileExistsOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.getProperties} operation.\n */\nexport interface FileGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Contains response data for the {@link ShareFileClient.getRangeList} operation.\n */\nexport type FileGetRangeListResponse = FileGetRangeListHeaders & {\n  /**\n   * Range list for an Azure file.\n   */\n  rangeList: RangeModel[];\n\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: FileGetRangeListHeaders;\n    /**\n     * The response body as text (string format)\n     */\n    bodyAsText: string;\n    /**\n     * The response body as parsed JSON or XML\n     */\n    parsedBody: RangeModel[];\n  };\n};\n\n/**\n * Options to configure the {@link ShareFileClient.startCopyFromURL} operation.\n */\nexport interface FileStartCopyOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * A collection of key-value string pair to associate with the file storage object.\n   */\n  metadata?: Metadata;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n  /**\n   * If specified the permission (security descriptor) shall be set for the directory/file. This\n   * header can be used if Permission size is lesser than or equal to 8KB, else x-ms-file-permission-key header shall be\n   * used. Default value: Inherit. If SDDL is specified as input, it must have owner, group and\n   * dacl. Note: Only one of the x-ms-file-permission or x-ms-file-permission-key should be\n   * specified.\n   */\n  filePermission?: string;\n  /**\n   * Key of the permission to be set for the directory/file. Note: Only one of the\n   * x-ms-file-permission or x-ms-file-permission-key should be specified.\n   */\n  filePermissionKey?: string;\n  /**\n   * SMB info.\n   */\n  copyFileSmbInfo?: CopyFileSmbInfo;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.setMetadata} operation.\n */\nexport interface FileSetMetadataOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.setHttpHeaders} operation.\n */\nexport interface FileSetHttpHeadersOptions\n  extends FileAndDirectorySetPropertiesCommonOptions,\n    CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.abortCopyFromURL} operation.\n */\nexport interface FileAbortCopyFromURLOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.resize} operation.\n */\nexport interface FileResizeOptions\n  extends FileAndDirectorySetPropertiesCommonOptions,\n    CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.clearRange} operation.\n */\nexport interface FileClearRangeOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Options to configure File - List Handles Segment operations.\n *\n * See:\n * - {@link ShareFileClient.listHandlesSegment}\n * - {@link ShareFileClient.iterateHandleSegments}\n * - {@link ShareFileClient.listHandleItems}\n */\nexport interface FileListHandlesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Specifies the maximum number of entries to return. If the request does not specify maxResults,\n   * or specifies a value greater than 5,000, the server will return up to 5,000 items.\n   */\n  maxPageSize?: number;\n}\n\nexport interface FileListHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure File - Force Close Handles operations.\n *\n * See:\n * - {@link ShareFileClient.forceCloseHandlesSegment}\n * - {@link ShareFileClient.forceCloseAllHandles}\n * - {@link ShareFileClient.forceCloseHandle}\n */\nexport interface FileForceCloseHandlesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Additional response header values for close handles request.\n */\nexport interface FileCloseHandlesHeaders {\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the File service used to execute the request.\n   */\n  version?: string;\n  /**\n   * A UTC date/time value generated by the service that indicates the time at which the response\n   * was initiated.\n   */\n  date?: Date;\n  /**\n   * A string describing next handle to be closed. It is returned when more handles need to be\n   * closed to complete the request.\n   */\n  marker?: string;\n}\n\n/**\n * Response type for {@link ShareFileClient.forceCloseHandle}.\n */\nexport type FileForceCloseHandlesResponse = CloseHandlesInfo &\n  FileCloseHandlesHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: FileForceCloseHandlesHeaders;\n    };\n  };\n\n/**\n * Option interface for ShareFileClient.uploadStream().\n */\nexport interface FileUploadStreamOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Azure File HTTP Headers.\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n\n  /**\n   * Metadata of the Azure file.\n   */\n  metadata?: Metadata;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Option interface for File - Upload operations\n *\n * See:\n * - {@link ShareFileClient.uploadFile}\n * - {@link ShareFileClient.uploadSeekableStream}\n */\nexport interface FileParallelUploadOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * RangeSize specifies the range size to use in each parallel upload,\n   * the default (and maximum size) is FILE_RANGE_MAX_SIZE_BYTES.\n   */\n  rangeSize?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * File HTTP Headers.\n   */\n  fileHttpHeaders?: FileHttpHeaders;\n\n  /**\n   * Metadata of an Azure file.\n   */\n  metadata?: Metadata;\n\n  /**\n   * Concurrency indicates the maximum number of ranges to upload in parallel.\n   * If not provided, 5 concurrency will be used by default.\n   */\n  concurrency?: number;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Option interface for the {@link ShareFileClient.downloadToBuffer} operation.\n */\nexport interface FileDownloadToBufferOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * When downloading Azure files, download method will try to split large file into small ranges.\n   * Every small range will be downloaded via a separate request.\n   * This option defines size data every small request trying to download.\n   * Must be greater than 0, will use the default value if undefined,\n   */\n  rangeSize?: number;\n\n  /**\n   * Optional. ONLY AVAILABLE IN NODE.JS.\n   *\n   * How many retries will perform when original range download stream unexpected ends.\n   * Above kind of ends will not trigger retry policy defined in a pipeline,\n   * because they doesn't emit network errors.\n   *\n   * With this option, every additional retry means an additional ShareFileClient.download() request will be made\n   * from the broken point, until the requested range has been successfully downloaded or\n   * maxRetryRequestsPerRange is reached.\n   *\n   * Default value is 5, please set a larger value when in poor network.\n   */\n  maxRetryRequestsPerRange?: number;\n\n  /**\n   * Progress updater.\n   */\n  onProgress?: (progress: TransferProgressEvent) => void;\n\n  /**\n   * Concurrency indicates the maximum number of ranges to download in parallel.\n   * If not provided, 5 concurrency will be used by default.\n   */\n  concurrency?: number;\n  /**\n   * Lease access conditions.\n   */\n  leaseAccessConditions?: LeaseAccessConditions;\n}\n\n/**\n * Contains response data for the {@link ShareFileClient.deleteIfExists} operation.\n */\nexport interface FileDeleteIfExistsResponse extends FileDeleteResponse {\n  /**\n   * Indicate whether the file is successfully deleted. Is false if the file does not exist in the first place.\n   */\n  succeeded: boolean;\n}\n\n/**\n * Options to configure {@link ShareFileClient.generateSasUrl} operation.\n */\nexport interface FileGenerateSasUrlOptions extends CommonGenerateSasUrlOptions {\n  /**\n   * Optional only when identifier is provided. Specifies the list of permissions to be associated with the SAS.\n   */\n  permissions?: FileSASPermissions;\n}\n\n/**\n * Options to configure the {@link ShareFileClient.rename} operation.\n */\nexport interface FileRenameOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Lease access condition for source file. Required if the source file has an active infinite lease.\n   */\n  sourceLeaseAccessConditions?: LeaseAccessConditions;\n\n  /**\n   * Lease access condition for destination file. Required if the destination file has an active infinite lease.\n   */\n  destinationLeaseAccessConditions?: LeaseAccessConditions;\n\n  /**\n   * Optional.\n   * Specifies the option to copy file security descriptor from source file or to set it using the value which is defined by the header value of x-ms-file-permission or x-ms-file-permission-key.\n   */\n  copyFileSmbInfo?: CopyFileSmbInfo;\n\n  /**\n   * A name-value pair to associate with a file storage object.\n   */\n  metadata?: Metadata;\n\n  /**\n   * Optional.\n   * The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\">Setting Timeouts for File Service Operations.</a>\n   */\n  timeoutInSeconds?: number;\n\n  /**\n   * Optional.\n   * If specified the permission (security descriptor) shall be set for the directory/file.\n   */\n  filePermission?: string;\n\n  /**\n   * Optional.\n   * Key of the permission to be set for the directory/file. Note: Only one of the filePermission or filePermissionKey should be specified.\n   */\n  filePermissionKey?: string;\n\n  /**\n   * Optional.\n   * A boolean value for if the destination file already exists, whether this request will overwrite the file or not. If true, the rename will succeed and will overwrite the destination file. If not provided or if false and the destination file does exist, the request will not overwrite the destination file. If provided and the destination file doesn’t exist, the rename will succeed. Note: This value does not override the x-ms-file-copy-ignore-read-only header value.\n   */\n  replaceIfExists?: boolean;\n\n  /**\n   * Optional.\n   * A boolean value that specifies whether the ReadOnly attribute on a preexisting destination file should be respected. If true, the rename will succeed, otherwise, a previous file at the destination with the ReadOnly attribute set will cause the rename to fail.\n   */\n  ignoreReadOnly?: boolean;\n}\n\n/**\n * Options to configure the {@link ShareDirectoryClient.rename} operation.\n */\nexport interface DirectoryRenameOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n\n  /**\n   * Lease access condition for source file. Required if the source file has an active infinite lease.\n   */\n  sourceLeaseAccessConditions?: LeaseAccessConditions;\n\n  /**\n   * Lease access condition for destination file. Required if the destination file has an active infinite lease.\n   */\n  destinationLeaseAccessConditions?: LeaseAccessConditions;\n\n  /**\n   * Optional.\n   * Specifies the option to copy file security descriptor from source file or to set it using the value which is defined by the header value of x-ms-file-permission or x-ms-file-permission-key.\n   */\n  copyFileSmbInfo?: CopyFileSmbInfo;\n\n  /**\n   * Optional.\n   * The timeout parameter is expressed in seconds. For more information, see <a href=\"https://docs.microsoft.com/en-us/rest/api/storageservices/Setting-Timeouts-for-File-Service-Operations?redirectedfrom=MSDN\">Setting Timeouts for File Service Operations.</a>\n   */\n  timeoutInSeconds?: number;\n\n  /**\n   * Optional.\n   * A name-value pair to associate with a file storage object.\n   */\n  metadata?: Metadata;\n\n  /**\n   * Optional.\n   * If specified the permission (security descriptor) shall be set for the directory/file.\n   */\n  filePermission?: string;\n\n  /**\n   * Optional.\n   * Key of the permission to be set for the directory/file. Note: Only one of the filePermission or filePermissionKey should be specified.\n   */\n  filePermissionKey?: string;\n  /**\n   * Optional.\n   * A boolean value for if the destination file already exists, whether this request will overwrite the file or not. If true, the rename will succeed and will overwrite the destination file. If not provided or if false and the destination file does exist, the request will not overwrite the destination file. If provided and the destination file doesn’t exist, the rename will succeed. Note: This value does not override the x-ms-file-copy-ignore-read-only header value.\n   */\n  replaceIfExists?: boolean;\n\n  /**\n   * Optional.\n   * A boolean value that specifies whether the ReadOnly attribute on a preexisting destination file should be respected. If true, the rename will succeed, otherwise, a previous file at the destination with the ReadOnly attribute set will cause the rename to fail.\n   */\n  ignoreReadOnly?: boolean;\n}\n\n/**\n * A ShareFileClient represents a URL to an Azure Storage file.\n */\nexport class ShareFileClient extends StorageClient {\n  /**\n   * context provided by protocol layer.\n   */\n  private context: File;\n\n  private _shareName: string;\n  private _path: string;\n  private _name: string;\n\n  /**\n   * The share name corresponding to this file client\n   */\n  public get shareName(): string {\n    return this._shareName;\n  }\n\n  /**\n   * The full path of the file\n   */\n  public get path(): string {\n    return this._path;\n  }\n\n  /**\n   * The name of the file\n   */\n  public get name(): string {\n    return this._name;\n  }\n\n  /**\n   * Creates an instance of ShareFileClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a file.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a file or directory name includes %, file or directory name must be encoded in the URL.\n   *                     Such as a file named \"myfile%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydirectory/myfile%25\".\n   * @param credential - Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareFileClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file\". You can\n   *                     append a SAS if using AnonymousCredential, such as\n   *                     \"https://myaccount.file.core.windows.net/myshare/mydirectory/file?sasString\".\n   *                     This method accepts an encoded URL or non-encoded URL pointing to a file.\n   *                     Encoded URL string will NOT be escaped twice, only special characters in URL path will be escaped.\n   *                     However, if a file or directory name includes %, file or directory name must be encoded in the URL.\n   *                     Such as a file named \"myfile%\", the URL should be \"https://myaccount.file.core.windows.net/myshare/mydirectory/myfile%25\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | Pipeline,\n    // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (credentialOrPipeline instanceof Credential) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n\n    super(url, pipeline);\n    ({\n      baseName: this._name,\n      shareName: this._shareName,\n      path: this._path,\n    } = getShareNameAndPathFromUrl(this.url));\n    this.context = new File(this.storageClientContext);\n  }\n\n  /**\n   * Creates a new ShareFileClient object identical to the source but with the specified share snapshot timestamp.\n   * Provide \"\" will remove the snapshot and return a URL to the base ShareFileClient.\n   *\n   * @param shareSnapshot - The share snapshot timestamp.\n   * @returns A new ShareFileClient object identical to the source but with the specified share snapshot timestamp.\n   */\n  public withShareSnapshot(shareSnapshot: string): ShareFileClient {\n    return new ShareFileClient(\n      setURLParameter(\n        this.url,\n        URLConstants.Parameters.SHARE_SNAPSHOT,\n        shareSnapshot.length === 0 ? undefined : shareSnapshot\n      ),\n      this.pipeline\n    );\n  }\n\n  /**\n   * Creates a new file or replaces a file. Note it only initializes the file with no content.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-file\n   *\n   * @param size - Specifies the maximum size in bytes for the file, up to 4 TB.\n   * @param options - Options to File Create operation.\n   * @returns Response data for the File Create  operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * // Create the file\n   * await fileClient.create(content.length);\n   * console.log(\"Created file successfully!\");\n   *\n   * // Then upload data to the file\n   * await fileClient.uploadRange(content, 0, content.length);\n   * console.log(\"Updated file successfully!\")\n   * ```\n   */\n  public async create(size: number, options: FileCreateOptions = {}): Promise<FileCreateResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-create\", options);\n    try {\n      if (size < 0 || size > FILE_MAX_SIZE_BYTES) {\n        throw new RangeError(`File size must >= 0 and < ${FILE_MAX_SIZE_BYTES}.`);\n      }\n      options = validateAndSetDefaultsForFileAndDirectoryCreateCommonOptions(options);\n\n      if (!options.fileAttributes) {\n        // Note: It would be Archive in service side if None is set.\n        const attributes: FileSystemAttributes = new FileSystemAttributes();\n        attributes.none = true;\n        options.fileAttributes = attributes;\n      }\n\n      options.fileHttpHeaders = options.fileHttpHeaders || {};\n\n      return await this.context.create(\n        size,\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          fileHttpHeaders: options.fileHttpHeaders,\n          metadata: options.metadata,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          leaseAccessConditions: options.leaseAccessConditions,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Reads or downloads a file from the system, including its metadata and properties.\n   *\n   * * In Node.js, data returns in a Readable stream `readableStreamBody`\n   * * In browsers, data returns in a promise `contentAsBlob`\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-file\n   *\n   * @param offset - From which position of the file to download, greater than or equal to 0\n   * @param count - How much data to be downloaded, greater than 0. Will download to the end when undefined\n   * @param options - Options to File Download operation.\n   * @returns Response data for the File Download operation.\n   *\n   * Example usage (Node.js):\n   *\n   * ```js\n   * // Download a file to a string\n   * const downloadFileResponse = await fileClient.download();\n   * console.log(\n   *   \"Downloaded file content:\",\n   *   (await streamToBuffer(downloadFileResponse.readableStreamBody)).toString()}\n   * );\n   *\n   * // A helper method used to read a Node.js readable stream into string\n   * async function streamToBuffer(readableStream) {\n   *   return new Promise((resolve, reject) => {\n   *     const chunks = [];\n   *     readableStream.on(\"data\", (data) => {\n   *       chunks.push(data instanceof Buffer ? data : Buffer.from(data));\n   *     });\n   *     readableStream.on(\"end\", () => {\n   *       resolve(Buffer.concat(chunks));\n   *     });\n   *     readableStream.on(\"error\", reject);\n   *   });\n   * }\n   * ```\n   *\n   * Example usage (browsers):\n   *\n   * ```js\n   * // Download a file to a string\n   * const downloadFileResponse = await fileClient.download(0);\n   * console.log(\n   *   \"Downloaded file content:\",\n   *   await blobToString(await downloadFileResponse.blobBody)}\n   * );\n   *\n   * // A helper method used to convert a browser Blob into string.\n   * export async function blobToString(blob: Blob): Promise<string> {\n   *   const fileReader = new FileReader();\n   *   return new Promise<string>((resolve, reject) => {\n   *     fileReader.onloadend = (ev: any) => {\n   *       resolve(ev.target!.result);\n   *     };\n   *     fileReader.onerror = reject;\n   *     fileReader.readAsText(blob);\n   *   });\n   * }\n   * ```\n   */\n  public async download(\n    offset: number = 0,\n    count?: number,\n    options: FileDownloadOptions = {}\n  ): Promise<FileDownloadResponseModel> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-download\", options);\n    try {\n      if (options.rangeGetContentMD5 && offset === 0 && count === undefined) {\n        throw new RangeError(`rangeGetContentMD5 only works with partial data downloading`);\n      }\n\n      const downloadFullFile = offset === 0 && !count;\n      const res = await this.context.download({\n        abortSignal: options.abortSignal,\n        requestOptions: {\n          onDownloadProgress: isNode ? undefined : options.onProgress, // for Node.js, progress is reported by RetriableReadableStream\n        },\n        range: downloadFullFile ? undefined : rangeToString({ offset, count }),\n        rangeGetContentMD5: options.rangeGetContentMD5,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      // Return browser response immediately\n      if (!isNode) {\n        return res;\n      }\n\n      // We support retrying when download stream unexpected ends in Node.js runtime\n      // Following code shouldn't be bundled into browser build, however some\n      // bundlers may try to bundle following code and \"FileReadResponse.ts\".\n      // In this case, \"FileDownloadResponse.browser.ts\" will be used as a shim of \"FileDownloadResponse.ts\"\n      // The config is in package.json \"browser\" field\n      if (options.maxRetryRequests === undefined || options.maxRetryRequests < 0) {\n        // TODO: Default value or make it a required parameter?\n        options.maxRetryRequests = DEFAULT_MAX_DOWNLOAD_RETRY_REQUESTS;\n      }\n\n      if (res.contentLength === undefined) {\n        throw new RangeError(`File download response doesn't contain valid content length header`);\n      }\n\n      return new FileDownloadResponse(\n        res,\n        async (start: number): Promise<NodeJS.ReadableStream> => {\n          const updatedDownloadOptions: FileDownloadOptionalParams = {\n            range: rangeToString({\n              count: offset + res.contentLength! - start,\n              offset: start,\n            }),\n          };\n\n          // Debug purpose only\n          // console.log(\n          //   `Read from internal stream, range: ${\n          //     chunkDownloadOptions.range\n          //   }, options: ${JSON.stringify(chunkDownloadOptions)}`\n          // );\n\n          const downloadRes = await this.context.download({\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.leaseAccessConditions,\n            ...updatedDownloadOptions,\n            ...convertTracingToRequestOptionsBase(updatedDownloadOptions),\n          });\n\n          if (!(downloadRes.etag === res.etag)) {\n            throw new Error(\"File has been modified concurrently\");\n          }\n          return downloadRes.readableStreamBody!;\n        },\n        offset,\n        res.contentLength!,\n        {\n          abortSignal: options.abortSignal,\n          maxRetryRequests: options.maxRetryRequests,\n          onProgress: options.onProgress,\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns true if the specified file exists; false otherwise.\n   *\n   * NOTE: use this function with care since an existing file might be deleted by other clients or\n   * applications. Vice versa new files might be added by other clients or applications after this\n   * function completes.\n   *\n   * @param options - options to Exists operation.\n   */\n  public async exists(options: FileExistsOptions = {}): Promise<boolean> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-exists\", options);\n    try {\n      await this.getProperties({\n        abortSignal: options.abortSignal,\n        tracingOptions: {\n          ...options.tracingOptions,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        },\n      });\n      return true;\n    } catch (e) {\n      if (e.statusCode === 404) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when checking file existence\",\n        });\n        return false;\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns all user-defined metadata, standard HTTP properties, and system properties\n   * for the file. It does not return the content of the file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-properties\n   *\n   * @param options - Options to File Get Properties operation.\n   * @returns Response data for the File Get Properties operation.\n   */\n  public async getProperties(\n    options: FileGetPropertiesOptions = {}\n  ): Promise<FileGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-getProperties\", options);\n    try {\n      return this.context.getProperties({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties on the file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties\n   *\n   * @param properties - File properties. For file HTTP headers(e.g. Content-Type),\n   *                                       if no values are provided, existing HTTP headers will be removed.\n   *                                       For other file properties(e.g. fileAttributes), if no values are provided,\n   *                                       existing values will be preserved.\n   */\n  public async setProperties(properties: FileProperties = {}): Promise<SetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-setProperties\", properties);\n    try {\n      properties = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(properties);\n\n      properties.fileHttpHeaders = properties.fileHttpHeaders || {};\n\n      return await this.context.setHttpHeaders(\n        fileAttributesToString(properties.fileAttributes!),\n        fileCreationTimeToString(properties.creationTime!),\n        fileLastWriteTimeToString(properties.lastWriteTime!),\n        {\n          abortSignal: properties.abortSignal,\n          fileHttpHeaders: properties.fileHttpHeaders,\n          filePermission: properties.filePermission,\n          filePermissionKey: properties.filePermissionKey,\n          leaseAccessConditions: properties.leaseAccessConditions,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the file from the storage account.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code SharingViolation\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400 (InvalidQueryParameterValue)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param options - Options to File Delete operation.\n   * @returns Response data for the File Delete operation.\n   */\n  public async delete(options: FileDeleteOptions = {}): Promise<FileDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-delete\", options);\n    try {\n      return await this.context.delete({\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Removes the file from the storage account if it exists.\n   * When a file is successfully deleted, it is immediately removed from the storage\n   * account's index and is no longer accessible to clients. The file's data is later\n   * removed from the service during garbage collection.\n   *\n   * Delete File will fail with status code 409 (Conflict) and error code SharingViolation\n   * if the file is open on an SMB client.\n   *\n   * Delete File is not supported on a share snapshot, which is a read-only copy of\n   * a share. An attempt to perform this operation on a share snapshot will fail with 400 (InvalidQueryParameterValue)\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/delete-file2\n   *\n   * @param options -\n   */\n  public async deleteIfExists(\n    options: FileDeleteOptions = {}\n  ): Promise<FileDeleteIfExistsResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-deleteIfExists\", options);\n    try {\n      const res = await this.delete(updatedOptions);\n      return {\n        succeeded: true,\n        ...res,\n      };\n    } catch (e) {\n      if (\n        e.details?.errorCode === \"ResourceNotFound\" ||\n        e.details?.errorCode === \"ParentNotFound\"\n      ) {\n        span.setStatus({\n          code: SpanStatusCode.ERROR,\n          message: \"Expected exception when deleting a file only if it exists.\",\n        });\n        return {\n          succeeded: false,\n          ...e.response?.parsedHeaders,\n          _response: e.response,\n        };\n      }\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets HTTP headers on the file.\n   *\n   * If no option provided, or no value provided for the file HTTP headers in the options,\n   * these file HTTP headers without a value will be cleared.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties\n   *\n   * @param FileHttpHeaders - File HTTP headers like Content-Type.\n   *                                             Provide undefined will remove existing HTTP headers.\n   * @param options - Options to File Set HTTP Headers operation.\n   * @returns Response data for the File Set HTTP Headers operation.\n   */\n  public async setHttpHeaders(\n    fileHttpHeaders: FileHttpHeaders = {},\n    options: FileSetHttpHeadersOptions = {}\n  ): Promise<FileSetHTTPHeadersResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-setHTTPHeaders\", options);\n    try {\n      // FileAttributes, filePermission, createTime, lastWriteTime will all be preserved\n      options = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(options);\n      return await this.context.setHttpHeaders(\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          fileHttpHeaders,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          leaseAccessConditions: options.leaseAccessConditions,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Resize file.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-properties\n   *\n   * @param length - Resizes a file to the specified size in bytes.\n   *                        If the specified byte value is less than the current size of the file,\n   *                        then all ranges above the specified byte value are cleared.\n   * @param options - Options to File Resize operation.\n   * @returns Response data for the File Set HTTP Headers operation.\n   */\n  public async resize(\n    length: number,\n    options: FileResizeOptions = {}\n  ): Promise<FileSetHTTPHeadersResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-resize\", options);\n    try {\n      if (length < 0) {\n        throw new RangeError(`Size cannot less than 0 when resizing file.`);\n      }\n      // FileAttributes, filePermission, createTime, lastWriteTime will all be preserved.\n      options = validateAndSetDefaultsForFileAndDirectorySetPropertiesCommonOptions(options);\n\n      return await this.context.setHttpHeaders(\n        fileAttributesToString(options.fileAttributes!),\n        fileCreationTimeToString(options.creationTime!),\n        fileLastWriteTimeToString(options.lastWriteTime!),\n        {\n          abortSignal: options.abortSignal,\n          fileContentLength: length,\n          filePermission: options.filePermission,\n          filePermissionKey: options.filePermissionKey,\n          leaseAccessConditions: options.leaseAccessConditions,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Updates user-defined metadata for the specified file.\n   *\n   * If no metadata defined in the option parameter, the file\n   * metadata will be removed.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-metadata\n   *\n   * @param metadata - If no metadata provided, all existing directory metadata will be removed\n   * @param options - Options to File Set Metadata operation.\n   * @returns Response data for the File Set Metadata operation.\n   */\n  public async setMetadata(\n    metadata: Metadata = {},\n    options: FileSetMetadataOptions = {}\n  ): Promise<FileSetMetadataResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-setMetadata\", options);\n    try {\n      return await this.context.setMetadata({\n        abortSignal: options.abortSignal,\n        metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Upload a range of bytes to a file. This operation can only be called on an existing file.\n   * It won't change the size, properties or metadata of the file.\n   * Both the start and count of the range must be specified. The range can be up to 4 MB in size.\n   *\n   * @param body - Blob, string, ArrayBuffer, ArrayBufferView or a function\n   *                               which returns a new Readable stream whose offset is from data source beginning.\n   * @param offset - Offset position of the destination Azure File to upload.\n   * @param contentLength - Length of body in bytes. Use Buffer.byteLength() to calculate body length for a\n   *                               string including non non-Base64/Hex-encoded characters.\n   * @param options - Options to File Upload Range operation.\n   * @returns Response data for the File Upload Range operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const content = \"Hello world!\";\n   *\n   * // Create the file\n   * await fileClient.create(content.length);\n   * console.log(\"Created file successfully!\");\n   *\n   * // Then upload data to the file\n   * await fileClient.uploadRange(content, 0, content.length);\n   * console.log(\"Updated file successfully!\")\n   * ```\n   */\n  public async uploadRange(\n    body: HttpRequestBody,\n    offset: number,\n    contentLength: number,\n    options: FileUploadRangeOptions = {}\n  ): Promise<FileUploadRangeResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadRange\", options);\n    try {\n      if (offset < 0) {\n        throw new RangeError(`offset must be >= 0`);\n      }\n\n      if (contentLength <= 0 || contentLength > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`contentLength must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES} bytes`);\n      }\n\n      if (contentLength > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`offset must be < ${FILE_RANGE_MAX_SIZE_BYTES} bytes`);\n      }\n\n      return await this.context.uploadRange(\n        rangeToString({ count: contentLength, offset }),\n        \"update\",\n        contentLength,\n        {\n          abortSignal: options.abortSignal,\n          contentMD5: options.contentMD5,\n          requestOptions: {\n            onUploadProgress: options.onProgress,\n          },\n          body: body,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n          leaseAccessConditions: options.leaseAccessConditions,\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Upload a range of bytes to a file where the contents are read from a another file's URL.\n   * The range can be up to 4 MB in size.\n   *\n   * @param sourceURL - Specify a URL to the copy source, Shared Access Signature(SAS) maybe needed for authentication.\n   * @param sourceOffset - The source offset to copy from. Pass 0 to copy from the beginning of source file.\n   * @param destOffset - Offset of destination file.\n   * @param count - Number of bytes to be uploaded from source file.\n   * @param options - Options to configure File - Upload Range from URL operation.\n   */\n  public async uploadRangeFromURL(\n    sourceURL: string,\n    sourceOffset: number,\n    destOffset: number,\n    count: number,\n    options: FileUploadRangeFromURLOptions = {}\n  ): Promise<FileUploadRangeFromURLResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadRangeFromURL\", options);\n    try {\n      if (sourceOffset < 0 || destOffset < 0) {\n        throw new RangeError(`sourceOffset and destOffset must be >= 0`);\n      }\n\n      if (count <= 0 || count > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`count must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES} bytes`);\n      }\n\n      return await this.context.uploadRangeFromURL(\n        rangeToString({ offset: destOffset, count }),\n        sourceURL,\n        0,\n        {\n          abortSignal: options.abortSignal,\n          sourceRange: rangeToString({ offset: sourceOffset, count }),\n          sourceModifiedAccessConditions: options.sourceConditions,\n          copySourceAuthorization: httpAuthorizationToString(options.sourceAuthorization),\n          ...options,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n  /**\n   * Clears the specified range and\n   * releases the space used in storage for that range.\n   *\n   * @param offset -\n   * @param contentLength -\n   * @param options - Options to File Clear Range operation.\n   */\n  public async clearRange(\n    offset: number,\n    contentLength: number,\n    options: FileClearRangeOptions = {}\n  ): Promise<FileUploadRangeResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-clearRange\", options);\n    try {\n      if (offset < 0 || contentLength <= 0) {\n        throw new RangeError(`offset must >= 0 and contentLength must be > 0`);\n      }\n\n      return await this.context.uploadRange(\n        rangeToString({ count: contentLength, offset }),\n        \"clear\",\n        0,\n        {\n          abortSignal: options.abortSignal,\n          ...convertTracingToRequestOptionsBase(updatedOptions),\n          leaseAccessConditions: options.leaseAccessConditions,\n        }\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the list of valid ranges for a file.\n   *\n   * @param options - Options to File Get range List operation.\n   */\n  public async getRangeList(\n    options: FileGetRangeListOptions = {}\n  ): Promise<FileGetRangeListResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-getRangeList\", options);\n    try {\n      const originalResponse = await this.context.getRangeList({\n        abortSignal: options.abortSignal,\n        range: options.range ? rangeToString(options.range) : undefined,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      // Only returns ranges, ignoring clearRanges.\n      const parsedBody = originalResponse._response.parsedBody.ranges\n        ? originalResponse._response.parsedBody.ranges\n        : [];\n      return {\n        ...originalResponse,\n        _response: { ...originalResponse._response, parsedBody },\n        rangeList: originalResponse.ranges ? originalResponse.ranges : [],\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns the list of ranges that differ between a previous share snapshot and this file.\n   *\n   * @param prevShareSnapshot - The previous snapshot parameter is an opaque DateTime value that specifies the previous share snapshot to compare with.\n   * @param options -\n   */\n  public async getRangeListDiff(\n    prevShareSnapshot: string,\n    options: FileGetRangeListOptions = {}\n  ): Promise<FileGetRangeListDiffResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-getRangeListDiff\", options);\n    try {\n      return await this.context.getRangeList({\n        prevsharesnapshot: prevShareSnapshot,\n        ...options,\n        range: options.range ? rangeToString(options.range) : undefined,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Copies a blob or file to a destination file within the storage account.\n   *\n   * @param copySource - Specifies the URL of the source file or blob, up to 2 KB in length.\n   * To copy a file to another file within the same storage account, you may use Shared Key to\n   * authenticate the source file. If you are copying a file from another storage account, or if you\n   * are copying a blob from the same storage account or another storage account, then you must\n   * authenticate the source file or blob using a shared access signature. If the source is a public\n   * blob, no authentication is required to perform the copy operation. A file in a share snapshot\n   * can also be specified as a copy source.\n   * @param options - Options to File Start Copy operation.\n   */\n  public async startCopyFromURL(\n    copySource: string,\n    options: FileStartCopyOptions = {}\n  ): Promise<FileStartCopyResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-startCopyFromURL\", options);\n    try {\n      return await this.context.startCopy(copySource, {\n        abortSignal: options.abortSignal,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        filePermission: options.filePermission,\n        filePermissionKey: options.filePermissionKey,\n        copyFileSmbInfo: options.copyFileSmbInfo,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Aborts a pending Copy File operation, and leaves a destination file with zero length and full\n   * metadata.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/abort-copy-file\n   *\n   * @param copyId - Id of the Copy File operation to abort.\n   * @param options - Options to File Abort Copy From URL operation.\n   */\n  public async abortCopyFromURL(\n    copyId: string,\n    options: FileAbortCopyFromURLOptions = {}\n  ): Promise<FileAbortCopyResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-abortCopyFromURL\", options);\n    try {\n      return await this.context.abortCopy(copyId, {\n        abortSignal: options.abortSignal,\n        leaseAccessConditions: options.leaseAccessConditions,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  // High Level functions\n\n  /**\n   * Creates a new Azure File or replaces an existing Azure File, and then uploads a Buffer(Node)/Blob/ArrayBuffer/ArrayBufferView to it.\n   *\n   * @param data - Buffer(Node), Blob, ArrayBuffer or ArrayBufferView\n   * @param options -\n   */\n  public async uploadData(\n    data: Buffer | Blob | ArrayBuffer | ArrayBufferView,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadData\", options);\n    try {\n      if (isNode) {\n        let buffer: Buffer;\n        if (data instanceof Buffer) {\n          buffer = data;\n        } else if (data instanceof ArrayBuffer) {\n          buffer = Buffer.from(data);\n        } else {\n          data = data as ArrayBufferView;\n          buffer = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n        }\n\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Buffer => buffer.slice(offset, offset + size),\n          buffer.byteLength,\n          updatedOptions\n        );\n      } else {\n        const browserBlob = new Blob([data]);\n        return this.uploadSeekableInternal(\n          (offset: number, size: number): Blob => browserBlob.slice(offset, offset + size),\n          browserBlob.size,\n          updatedOptions\n        );\n      }\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN BROWSERS.\n   *\n   * Uploads a browser Blob object to an Azure file. Requires a blobFactory as the data source,\n   * which need to return a Blob object with the offset and size provided.\n   *\n   * @param blobFactory -\n   * @param size -\n   * @param options -\n   */\n  async uploadSeekableBlob(\n    blobFactory: (offset: number, size: number) => Blob,\n    size: number,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-UploadSeekableBlob\", options);\n    try {\n      return this.uploadSeekableInternal(blobFactory, size, updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates a new Azure File or replaces an existing Azure File, and then uploads a local file to it.\n   *\n   * @param filePath - Full path of local file\n   * @param fileClient - ShareFileClient\n   * @param options -\n   */\n  public async uploadFile(\n    filePath: string,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadFile\", options);\n    try {\n      const size = (await fsStat(filePath)).size;\n      return await this.uploadSeekableInternal(\n        (offset, count) => {\n          return () =>\n            fsCreateReadStream(filePath, {\n              autoClose: true,\n              end: count ? offset + count - 1 : Infinity,\n              start: offset,\n            });\n        },\n        size,\n        updatedOptions\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Accepts a Node.js Readable stream factory, and uploads in blocks to an Azure File.\n   * The Readable stream factory must returns a Node.js Readable stream starting from the offset defined. The offset\n   * is the offset in the Azure file to be uploaded.\n   *\n   * @param streamFactory - Returns a Node.js Readable stream starting\n   *                                                                  from the offset defined\n   * @param size - Size of the Azure file\n   * @param fileClient - ShareFileClient\n   * @param options -\n   */\n  async uploadResetableStream(\n    streamFactory: (offset: number, count?: number) => NodeJS.ReadableStream,\n    size: number,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadResetableStream\", options);\n    try {\n      return await this.uploadSeekableInternal(\n        (offset: number, count?: number) => {\n          return () => streamFactory(offset, count);\n        },\n        size,\n        updatedOptions\n      );\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   *\n   * @param bodyFactory -\n   * @param size - Size of the Azure file\n   * @param fileClient - ShareFileClient\n   * @param options -\n   */\n  private async uploadSeekableInternal(\n    bodyFactory: (offset: number, count: number) => HttpRequestBody,\n    size: number,\n    options: FileParallelUploadOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadSeekableInternal\", options);\n    try {\n      if (!options.rangeSize) {\n        options.rangeSize = FILE_RANGE_MAX_SIZE_BYTES;\n      }\n      if (options.rangeSize < 0 || options.rangeSize > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`options.rangeSize must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES}`);\n      }\n\n      if (!options.fileHttpHeaders) {\n        options.fileHttpHeaders = {};\n      }\n\n      if (!options.concurrency) {\n        options.concurrency = DEFAULT_HIGH_LEVEL_CONCURRENCY;\n      }\n      if (options.concurrency < 0) {\n        throw new RangeError(`options.concurrency cannot less than 0.`);\n      }\n\n      // Create the file\n      await this.create(size, {\n        abortSignal: options.abortSignal,\n        fileHttpHeaders: options.fileHttpHeaders,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n\n      const numBlocks: number = Math.floor((size - 1) / options.rangeSize) + 1;\n      let transferProgress: number = 0;\n      const batch = new Batch(options.concurrency);\n\n      for (let i = 0; i < numBlocks; i++) {\n        batch.addOperation(async (): Promise<any> => {\n          const start = options.rangeSize! * i;\n          const end = i === numBlocks - 1 ? size : start + options.rangeSize!;\n          const contentLength = end - start;\n          await this.uploadRange(bodyFactory(start, contentLength), start, contentLength, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.leaseAccessConditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          });\n          // Update progress after block is successfully uploaded to server, in case of block trying\n          transferProgress += contentLength;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        });\n      }\n      return await batch.do();\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure file in parallel to a buffer.\n   * Offset and count are optional, pass 0 for both to download the entire file.\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For files larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param buffer - Buffer to be fill, must have length larger than count\n   * @param offset - From which position of the Azure File to download\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined\n   * @param options -\n   */\n  public async downloadToBuffer(\n    buffer: Buffer,\n    offset?: number,\n    count?: number,\n    options?: FileDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME\n   *\n   * Downloads an Azure file in parallel to a buffer.\n   * Offset and count are optional, pass 0 for both to download the entire file\n   *\n   * Warning: Buffers can only support files up to about one gigabyte on 32-bit systems or about two\n   * gigabytes on 64-bit systems due to limitations of Node.js/V8. For files larger than this size,\n   * consider {@link downloadToFile}.\n   *\n   * @param offset - From which position of the Azure file to download\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined\n   * @param options -\n   */\n  public async downloadToBuffer(\n    offset?: number,\n    count?: number,\n    options?: FileDownloadToBufferOptions\n  ): Promise<Buffer>;\n\n  public async downloadToBuffer(\n    bufferOrOffset?: Buffer | number,\n    offsetOrCount?: number,\n    countOrOptions?: FileDownloadToBufferOptions | number,\n    optOptions: FileDownloadToBufferOptions = {}\n  ): Promise<Buffer> {\n    let buffer: Buffer | undefined = undefined;\n    let offset: number;\n    let count: number;\n    let options: FileDownloadToBufferOptions = optOptions;\n\n    if (bufferOrOffset instanceof Buffer) {\n      buffer = bufferOrOffset;\n      offset = offsetOrCount || 0;\n      count = typeof countOrOptions === \"number\" ? countOrOptions : 0;\n    } else {\n      offset = typeof bufferOrOffset === \"number\" ? bufferOrOffset : 0;\n      count = typeof offsetOrCount === \"number\" ? offsetOrCount : 0;\n      options = (countOrOptions as FileDownloadToBufferOptions) || {};\n    }\n\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-downloadToBuffer\", options);\n\n    try {\n      if (!options.rangeSize) {\n        options.rangeSize = FILE_RANGE_MAX_SIZE_BYTES;\n      }\n      if (options.rangeSize < 0) {\n        throw new RangeError(\"rangeSize option must be > 0\");\n      }\n\n      if (offset < 0) {\n        throw new RangeError(\"offset option must be >= 0\");\n      }\n\n      if (count && count <= 0) {\n        throw new RangeError(\"count option must be > 0\");\n      }\n\n      if (!options.concurrency) {\n        options.concurrency = DEFAULT_HIGH_LEVEL_CONCURRENCY;\n      }\n      if (options.concurrency < 0) {\n        throw new RangeError(`options.concurrency cannot less than 0.`);\n      }\n\n      // Customer doesn't specify length, get it\n      if (!count) {\n        const response = await this.getProperties({\n          abortSignal: options.abortSignal,\n          leaseAccessConditions: options.leaseAccessConditions,\n          tracingOptions: updatedOptions.tracingOptions,\n        });\n        count = response.contentLength! - offset;\n        if (count < 0) {\n          throw new RangeError(\n            `offset ${offset} shouldn't be larger than file size ${response.contentLength!}`\n          );\n        }\n      }\n\n      if (!buffer) {\n        try {\n          buffer = Buffer.alloc(count);\n        } catch (error) {\n          throw new Error(\n            `Unable to allocate a buffer of size: ${count} bytes. Please try passing your own Buffer to ` +\n              'the \"downloadToBuffer method or try using other methods like \"download\" or \"downloadToFile\".' +\n              `\\t ${error.message}`\n          );\n        }\n      }\n\n      if (buffer.length < count) {\n        throw new RangeError(\n          `The buffer's size should be equal to or larger than the request count of bytes: ${count}`\n        );\n      }\n\n      let transferProgress: number = 0;\n      const batch = new Batch(options.concurrency);\n      for (let off = offset; off < offset + count; off = off + options.rangeSize) {\n        batch.addOperation(async () => {\n          // Exclusive chunk end position\n          let chunkEnd = offset + count!;\n          if (off + options.rangeSize! < chunkEnd) {\n            chunkEnd = off + options.rangeSize!;\n          }\n          const response = await this.download(off, chunkEnd - off, {\n            abortSignal: options.abortSignal,\n            maxRetryRequests: options.maxRetryRequestsPerRange,\n            leaseAccessConditions: options.leaseAccessConditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          });\n          const stream = response.readableStreamBody!;\n          await streamToBuffer(stream, buffer!, off - offset, chunkEnd - offset);\n          // Update progress after block is downloaded, in case of block trying\n          // Could provide finer grained progress updating inside HTTP requests,\n          // only if convenience layer download try is enabled\n          transferProgress += chunkEnd - off;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        });\n      }\n      await batch.do();\n      return buffer;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Creates a new Azure File or replaces an existing Azure File, and then uploads a Node.js Readable stream into it.\n   * This method will try to create an Azure File, then starts uploading chunk by chunk.\n   * Size of chunk is defined by `bufferSize` parameter.\n   * Please make sure potential size of stream doesn't exceed file size.\n   *\n   * PERFORMANCE IMPROVEMENT TIPS:\n   * * Input stream highWaterMark is better to set a same value with bufferSize\n   *   parameter, which will avoid Buffer.concat() operations.\n   *\n   * @param stream - Node.js Readable stream. Must be less or equal than file size.\n   * @param size - Size of file to be created. Maximum size allowed is 4 TB.\n   *                      If this value is larger than stream size, there will be empty bytes in file tail.\n   * @param bufferSize - Size of every buffer allocated in bytes, also the chunk/range size during\n   *                            the uploaded file. Size must be greater than 0 and lesser than or equal to 4 * 1024 * 1024 (4MB)\n   * @param maxBuffers - Max buffers will allocate during uploading, positive correlation\n   *                            with max uploading concurrency\n   * @param options -\n   */\n  public async uploadStream(\n    stream: Readable,\n    size: number,\n    bufferSize: number,\n    maxBuffers: number,\n    options: FileUploadStreamOptions = {}\n  ): Promise<void> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-uploadStream\", options);\n    try {\n      if (!options.fileHttpHeaders) {\n        options.fileHttpHeaders = {};\n      }\n\n      if (bufferSize <= 0 || bufferSize > FILE_RANGE_MAX_SIZE_BYTES) {\n        throw new RangeError(`bufferSize must be > 0 and <= ${FILE_RANGE_MAX_SIZE_BYTES}`);\n      }\n\n      if (maxBuffers < 0) {\n        throw new RangeError(`maxBuffers must be > 0.`);\n      }\n\n      // Create the file\n      await this.create(size, {\n        abortSignal: options.abortSignal,\n        fileHttpHeaders: options.fileHttpHeaders,\n        metadata: options.metadata,\n        leaseAccessConditions: options.leaseAccessConditions,\n        tracingOptions: updatedOptions.tracingOptions,\n      });\n\n      let transferProgress: number = 0;\n      const scheduler = new BufferScheduler(\n        stream,\n        bufferSize,\n        maxBuffers,\n        async (buffer: Buffer, offset?: number) => {\n          if (transferProgress + buffer.length > size) {\n            throw new RangeError(\n              `Stream size is larger than file size ${size} bytes, uploading failed. ` +\n                `Please make sure stream length is less or equal than file size.`\n            );\n          }\n\n          await this.uploadRange(buffer, offset!, buffer.length, {\n            abortSignal: options.abortSignal,\n            leaseAccessConditions: options.leaseAccessConditions,\n            tracingOptions: updatedOptions.tracingOptions,\n          });\n\n          // Update progress after block is successfully uploaded to server, in case of block trying\n          transferProgress += buffer.length;\n          if (options.onProgress) {\n            options.onProgress({ loadedBytes: transferProgress });\n          }\n        },\n        // Concurrency should set a smaller value than maxBuffers, which is helpful to\n        // reduce the possibility when a outgoing handler waits for stream data, in\n        // this situation, outgoing handlers are blocked.\n        // Outgoing queue shouldn't be empty.\n        Math.ceil((maxBuffers / 4) * 3)\n      );\n      return await scheduler.do();\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * ONLY AVAILABLE IN NODE.JS RUNTIME.\n   *\n   * Downloads an Azure Blob to a local file.\n   * Fails if the the given file path already exits.\n   * Offset and count are optional, pass 0 and undefined respectively to download the entire blob.\n   *\n   * @param filePath -\n   * @param offset - From which position of the block blob to download.\n   * @param count - How much data to be downloaded. Will download to the end when passing undefined.\n   * @param options - Options to Blob download options.\n   * @returns The response data for blob download operation,\n   *                                                 but with readableStreamBody set to undefined since its\n   *                                                 content is already read and written into a local file\n   *                                                 at the specified path.\n   */\n  public async downloadToFile(\n    filePath: string,\n    offset: number = 0,\n    count?: number,\n    options: FileDownloadOptions = {}\n  ): Promise<FileDownloadResponseModel> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-downloadToFile\", options);\n    try {\n      const response = await this.download(offset, count, updatedOptions);\n      if (response.readableStreamBody) {\n        await readStreamToLocalFile(response.readableStreamBody, filePath);\n      }\n\n      // The stream is no longer accessible so setting it to undefined.\n      (response as any).fileDownloadStream = undefined;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Lists handles for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/list-handles\n   *\n   * @param marker - Optional. A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param options -\n   */\n  private async listHandlesSegment(\n    marker?: string,\n    options: FileListHandlesSegmentOptions = {}\n  ): Promise<FileListHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-listHandlesSegment\", options);\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const response = await this.context.listHandles({\n        abortSignal: options.abortSignal,\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      // TODO: Protocol layer issue that when handle list is in returned XML\n      // response.handleList is an empty string\n      if ((response.handleList as any) === \"\") {\n        response.handleList = undefined;\n      }\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for FileListHandlesResponse\n   *\n   * @param marker - A string value that identifies the portion of the list to be\n   *                          returned with the next list handles operation. The operation returns a\n   *                          marker value within the response body if the list returned was not complete.\n   *                          The marker value may then be used in a subsequent call to request the next\n   *                          set of list items.\n   * @param options - Options to list handles operation.\n   */\n  private async *iterateHandleSegments(\n    marker?: string,\n    options: FileListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<FileListHandlesResponse> {\n    let listHandlesResponse;\n    if (!!marker || marker === undefined) {\n      do {\n        listHandlesResponse = await this.listHandlesSegment(marker, options);\n        marker = listHandlesResponse.continuationToken;\n        yield listHandlesResponse;\n      } while (marker);\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for handles\n   *\n   * @param options - Options to list handles operation.\n   */\n  private async *listHandleItems(\n    options: FileListHandlesSegmentOptions = {}\n  ): AsyncIterableIterator<HandleItem> {\n    let marker: string | undefined;\n    for await (const listHandlesResponse of this.iterateHandleSegments(marker, options)) {\n      if (listHandlesResponse.handleList) {\n        for (const handle of listHandlesResponse.handleList) {\n          yield handle;\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the handles.\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the handles in pages.\n   *\n   * @param options - Options to list handles operation.\n   *\n   * An asyncIterableIterator that supports paging.\n   */\n  public listHandles(\n    options: FileListHandlesOptions = {}\n  ): PagedAsyncIterableIterator<HandleItem, FileListHandlesResponse> {\n    // an AsyncIterableIterator to iterate over handles\n    const iter = this.listHandleItems(options);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      async next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.iterateHandleSegments(settings.continuationToken, {\n          maxPageSize: settings.maxPageSize,\n          ...options,\n        });\n      },\n    };\n  }\n\n  /**\n   * Force close all handles for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param marker - Optional. A string value that identifies the position of handles that will\n   *                          be closed with the next force close handles operation.\n   *                          The operation returns a marker value within the response\n   *                          body if there are more handles to close. The marker value\n   *                          may then be used in a subsequent call to close the next set of handles.\n   * @param options - Options to force close handles operation.\n   */\n  private async forceCloseHandlesSegment(\n    marker?: string,\n    options: FileForceCloseHandlesOptions = {}\n  ): Promise<FileForceCloseHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\n      \"ShareFileClient-forceCloseHandlesSegment\",\n      options\n    );\n    try {\n      marker = marker === \"\" ? undefined : marker;\n      const rawResponse = await this.context.forceCloseHandles(\"*\", {\n        abortSignal: options.abortSignal,\n        marker,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n      const response = rawResponse as FileForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close all handles for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param options - Options to force close handles operation.\n   */\n  public async forceCloseAllHandles(\n    options: FileForceCloseHandlesOptions = {}\n  ): Promise<CloseHandlesInfo> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-forceCloseAllHandles\", options);\n    try {\n      let handlesClosed = 0;\n      let numberOfHandlesFailedToClose = 0;\n      let marker: string | undefined = \"\";\n\n      do {\n        const response: FileForceCloseHandlesResponse = await this.forceCloseHandlesSegment(\n          marker,\n          { tracingOptions: updatedOptions.tracingOptions }\n        );\n        marker = response.marker;\n        if (response.closedHandlesCount) {\n          handlesClosed += response.closedHandlesCount;\n        }\n        if (response.closeFailureCount) {\n          numberOfHandlesFailedToClose += response.closeFailureCount;\n        }\n      } while (marker);\n\n      return {\n        closedHandlesCount: handlesClosed,\n        closeFailureCount: numberOfHandlesFailedToClose,\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Force close a specific handle for a file.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/force-close-handles\n   *\n   * @param handleId - Specific handle ID, cannot be asterisk \"*\".\n   *                          Use forceCloseAllHandles() to close all handles.\n   * @param FileForceCloseHandlesOptions - Options to force close handles operation.\n   */\n  public async forceCloseHandle(\n    handleId: string,\n    options: FileForceCloseHandlesOptions = {}\n  ): Promise<FileForceCloseHandlesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-forceCloseHandle\", options);\n    try {\n      if (handleId === \"*\") {\n        throw new RangeError(\n          `Parameter handleID should be a specified handle ID. Use forceCloseHandlesSegment() to close all handles.`\n        );\n      }\n\n      const rawResponse = await this.context.forceCloseHandles(handleId, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n      const response = rawResponse as FileForceCloseHandlesResponse;\n      response.closedHandlesCount = rawResponse.numberOfHandlesClosed || 0;\n      response.closeFailureCount = rawResponse.numberOfHandlesFailedToClose || 0;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Get a {@link ShareLeaseClient} that manages leases on the file.\n   *\n   * @param proposeLeaseId - Initial proposed lease Id.\n   * @returns A new ShareLeaseClient object for managing leases on the file.\n   */\n  public getShareLeaseClient(proposeLeaseId?: string): ShareLeaseClient {\n    return new ShareLeaseClient(this, proposeLeaseId);\n  }\n\n  /**\n   * Only available for clients constructed with a shared key credential.\n   *\n   * Generates a Service Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/constructing-a-service-sas\n   *\n   * @param options - Optional parameters.\n   * @returns The SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateSasUrl(options: FileGenerateSasUrlOptions): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the SAS when the client is initialized with a shared key credential\"\n      );\n    }\n\n    const sas = generateFileSASQueryParameters(\n      {\n        shareName: this.shareName,\n        filePath: this.path,\n        ...options,\n      },\n      this.credential\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n\n  /**\n   * Renames a file.\n   * This API only supports renaming a file in the same share.\n   *\n   * @param destinationPath - Specifies the destination path to rename to. The path will be encoded to put into a URL to specify the destination.\n   * @param options - Options for the renaming operation.\n   * @returns Response data for the file renaming operation.\n   *\n   * Example usage:\n   *\n   * ```js\n   *\n   * // Rename the file\n   * await fileClient.rename(destinationPath);\n   * console.log(\"Renamed file successfully!\");\n   * ```\n   */\n  public async rename(\n    destinationPath: string,\n    options: FileRenameOptions = {}\n  ): Promise<{\n    destinationFileClient: ShareFileClient;\n    fileRenameResponse: FileRenameResponse;\n  }> {\n    const { span, updatedOptions } = createSpan(\"ShareFileClient-rename\", options);\n    const split: string[] = destinationPath.split(\"?\");\n    let destinationUrl: string;\n    if (split.length === 2) {\n      const pathOnly = encodeURIComponent(split[0]);\n      const renameDestination = `/${this.shareName}/${pathOnly}`;\n      destinationUrl = setURLPath(this.url, renameDestination);\n      destinationUrl = setURLQueries(destinationUrl, split[1]);\n    } else if (split.length === 1) {\n      const pathOnly = encodeURIComponent(destinationPath);\n      const renameDestination = `/${this.shareName}/${pathOnly}`;\n      destinationUrl = setURLPath(this.url, renameDestination);\n    } else {\n      throw new RangeError(\"Destination path should not contain more than one query string\");\n    }\n\n    const destFile = new ShareFileClient(destinationUrl, this.pipeline);\n\n    try {\n      const response = await destFile.context.rename(this.url, {\n        ...updatedOptions,\n        sourceLeaseAccessConditions: updatedOptions.sourceLeaseAccessConditions\n          ? {\n              sourceLeaseId: updatedOptions.sourceLeaseAccessConditions.leaseId,\n            }\n          : undefined,\n        destinationLeaseAccessConditions: updatedOptions.destinationLeaseAccessConditions\n          ? {\n              destinationLeaseId: updatedOptions.destinationLeaseAccessConditions.leaseId,\n            }\n          : undefined,\n      });\n\n      return {\n        destinationFileClient: destFile,\n        fileRenameResponse: response,\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n\n/**\n * The details of the response for a specific lease operation.\n */\nexport interface LeaseOperationResponseHeaders {\n  /**\n   * The ETag contains a value that you can use to perform operations conditionally. If the request\n   * version is 2011-08-18 or newer, the ETag value will be in quotes.\n   */\n  etag?: string;\n  /**\n   * Returns the date and time the file was last modified. Any operation that modifies the file,\n   * including an update of the file's metadata or properties, changes the last-modified time of\n   * the file.\n   */\n  lastModified?: Date;\n  /**\n   * Approximate time remaining in the lease period, in seconds. Only availabe for {@link ShareLeaseClient.breakLease} for share lease.\n   */\n  leaseTimeInSeconds?: number;\n  /**\n   * Uniquely identifies a file's lease, won't be set when returned by releaseLease.\n   */\n  leaseId?: string;\n  /**\n   * This header uniquely identifies the request that was made and can be used for troubleshooting\n   * the request.\n   */\n  requestId?: string;\n  /**\n   * Indicates the version of the Blob service used to execute the request. This header is returned\n   * for requests made against version 2009-09-19 and above.\n   */\n  version?: string;\n  /**\n   * UTC date/time value generated by the service that indicates the time at which the response was\n   * initiated\n   */\n  date?: Date;\n  errorCode?: string;\n}\n\n/**\n * Contains the response data for operations that acquire, change, break or release a lease.\n *\n * See {@link ShareLeaseClient}.\n */\nexport type LeaseOperationResponse = LeaseOperationResponseHeaders & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: HttpResponse & {\n    /**\n     * The parsed HTTP response headers.\n     */\n    parsedHeaders: LeaseOperationResponseHeaders;\n  };\n};\n\n/**\n * lease operations options.\n */\nexport interface LeaseOperationOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * A client that manages leases for a {@link ShareFileClient} or {@link ShareClient}.\n * @see https://docs.microsoft.com/rest/api/storageservices/lease-file\n * and\n * @see https://docs.microsoft.com/rest/api/storageservices/lease-share\n */\nexport class ShareLeaseClient {\n  private _leaseId: string;\n  private _url: string;\n  private fileOrShare: File | Share;\n  private isShare: boolean;\n  /**\n   * Gets the lease Id.\n   *\n   * @readonly\n   */\n  public get leaseId(): string {\n    return this._leaseId;\n  }\n\n  /**\n   * Gets the url.\n   *\n   * @readonly\n   */\n  public get url(): string {\n    return this._url;\n  }\n\n  /**\n   * Creates an instance of ShareLeaseClient.\n   * @param client - The client to make the lease operation requests.\n   * @param leaseId - Initial proposed lease id.\n   */\n  constructor(client: ShareFileClient, leaseId?: string) {\n    const clientContext = new StorageClientContext(client.url, {\n      version: SERVICE_VERSION,\n      ...(client as any).pipeline.toServiceClientOptions(),\n    });\n\n    if (client instanceof ShareClient) {\n      this.isShare = true;\n      this.fileOrShare = new Share(clientContext);\n    } else {\n      this.isShare = false;\n      this.fileOrShare = new File(clientContext);\n    }\n    this._url = client.url;\n\n    if (!leaseId) {\n      leaseId = generateUuid();\n    }\n    this._leaseId = leaseId;\n  }\n\n  /**\n   * Establishes and manages a lock on a file, share or share snapshot for write and delete operations.\n   *\n   * @param duration - Specifies the duration of lease in seconds. For file, the only allowed value is -1 for a lease that never expires. For share, must be -1 or between 15 to 60.\n   * @param options - Options for the lease management operation.\n   * @returns Response data for acquire lease operation.\n   */\n  public async acquireLease(\n    duration: number = -1,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-acquireLease\", options);\n    try {\n      return await this.fileOrShare.acquireLease({\n        abortSignal: options.abortSignal,\n        duration,\n        proposedLeaseId: this._leaseId,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To change the ID of an existing lease.\n   *\n   * @param proposedLeaseId - the proposed new lease Id.\n   * @param options - Options for the lease management operation.\n   * @returns Response data for change lease operation.\n   */\n  public async changeLease(\n    proposedLeaseId: string,\n    options: LeaseOperationOptions = {}\n  ): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-changeLease\", options);\n    try {\n      const response = await this.fileOrShare.changeLease(this._leaseId, {\n        proposedLeaseId,\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n      this._leaseId = proposedLeaseId;\n      return response;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To free the lease if it is no longer needed so that another client may\n   * immediately acquire a lease.\n   *\n   * @param options - Options for the lease management operation.\n   * @returns Response data for release lease operation.\n   */\n  public async releaseLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-releaseLease\", options);\n    try {\n      return await this.fileOrShare.releaseLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To force end the lease.\n   *\n   * @param options - Options for the lease management operation.\n   * @returns Response data for break lease operation.\n   */\n  public async breakLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-breakLease\", options);\n    try {\n      return await this.fileOrShare.breakLease({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * To renew the lease. Only available for lease on share or share snapshot.\n   * Note that the lease may be renewed even if it has expired as long as the share has not been leased again since the expiration of that lease.\n   * When you renew a lease, the lease duration clock resets.\n   *\n   * @param options - Options for the lease management operation.\n   * @returns Response data for renew lease operation.\n   */\n  public async renewLease(options: LeaseOperationOptions = {}): Promise<LeaseOperationResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareLeaseClient-renewLease\", options);\n\n    if (!this.isShare) {\n      throw new RangeError(\"The renewLease operation is not available for lease on file.\");\n    }\n\n    try {\n      return await (this.fileOrShare as Share).renewLease(this._leaseId, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { Pipeline } from \"./Pipeline\";\nimport { StorageClient } from \"./StorageClient\";\nimport { ShareRestoreOptionalParams, ShareRestoreResponse } from \"./generated/src/models\";\nimport { Share } from \"./generated/src/operations\";\n\n/**\n * ShareClientInternal is the thin wrapper for Share which contains internal helper methods.\n */\nexport class ShareClientInternal extends StorageClient {\n  private context: Share;\n\n  constructor(url: string, pipeline: Pipeline) {\n    super(url, pipeline);\n    this.context = new Share(this.storageClientContext);\n  }\n\n  public async restore(options: ShareRestoreOptionalParams = {}): Promise<ShareRestoreResponse> {\n    return this.context.restore(options);\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { AbortSignalLike } from \"@azure/abort-controller\";\nimport {\n  FileServiceProperties,\n  ListSharesIncludeType,\n  ShareCreateResponse,\n  ShareDeleteResponse,\n  ServiceGetPropertiesResponse,\n  ServiceSetPropertiesResponse,\n  ServiceListSharesSegmentHeaders,\n  ListSharesResponseModel,\n  SharePropertiesInternal,\n} from \"./generatedModels\";\nimport { Service } from \"./generated/src/operations\";\nimport { newPipeline, StoragePipelineOptions, Pipeline } from \"./Pipeline\";\nimport { StorageClient, CommonOptions } from \"./StorageClient\";\nimport { ShareClientInternal } from \"./ShareClientInternal\";\nimport { ShareClient, ShareCreateOptions, ShareDeleteMethodOptions } from \"./Clients\";\nimport { appendToURLPath, extractConnectionStringParts } from \"./utils/utils.common\";\nimport { Credential } from \"./credentials/Credential\";\nimport { StorageSharedKeyCredential } from \"./credentials/StorageSharedKeyCredential\";\nimport { AnonymousCredential } from \"./credentials/AnonymousCredential\";\nimport \"@azure/core-paging\";\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { isNode, HttpResponse } from \"@azure/core-http\";\nimport { SpanStatusCode } from \"@azure/core-tracing\";\nimport { convertTracingToRequestOptionsBase, createSpan } from \"./utils/tracing\";\nimport { ShareProtocols, toShareProtocols } from \"./models\";\nimport { AccountSASPermissions } from \"./AccountSASPermissions\";\nimport { generateAccountSASQueryParameters } from \"./AccountSASSignatureValues\";\nimport { AccountSASServices } from \"./AccountSASServices\";\nimport { SASProtocol } from \"./SASQueryParameters\";\nimport { SasIPRange } from \"./SasIPRange\";\nimport { appendToURLQuery } from \"./utils/utils.common\";\n\n/**\n * Options to configure Share - List Shares Segment operations.\n *\n * See:\n * - {@link ShareServiceClient.listSegments}\n * - {@link ShareServiceClient.listItems}\n * - {@link ShareServiceClient.listSharesSegment}\n */\ninterface ServiceListSharesSegmentOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   */\n  prefix?: string;\n  /**\n   * Specifies the maximum number of entries to\n   * return. If the request does not specify maxResults, or specifies a value\n   * greater than 5,000, the server will return up to 5,000 items.\n   */\n  maxResults?: number;\n\n  /**\n   * Include this parameter to\n   * specify one or more datasets to include in the response.\n   */\n  include?: ListSharesIncludeType[];\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.listShares} operation.\n */\nexport interface ServiceListSharesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n  /**\n   * Filters the results to return only entries whose\n   * name begins with the specified prefix.\n   */\n  prefix?: string;\n\n  /**\n   * Specifies that share snapshots should be included in the enumeration. Share Snapshots are listed from oldest to newest in the response.\n   */\n  includeMetadata?: boolean;\n\n  /**\n   * Specifies that share snapshot should be returned in the response.\n   */\n  includeSnapshots?: boolean;\n\n  /**\n   * Specifies that share soft deleted should be returned in the response.\n   */\n  includeDeleted?: boolean;\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.getProperties} operation.\n */\nexport interface ServiceGetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.setProperties} operation.\n */\nexport interface ServiceSetPropertiesOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Options to configure the {@link ShareServiceClient.undelete} operation.\n */\nexport interface ServiceUndeleteShareOptions extends CommonOptions {\n  /**\n   * An implementation of the `AbortSignalLike` interface to signal the request to cancel the operation.\n   * For example, use the &commat;azure/abort-controller to create an `AbortSignal`.\n   */\n  abortSignal?: AbortSignalLike;\n}\n\n/**\n * Properties of a share.\n */\nexport type ShareProperties = SharePropertiesInternal & {\n  /**\n   * The protocols that have been enabled on the share.\n   */\n  protocols?: ShareProtocols;\n};\n\n/**\n * A listed Azure Storage share item.\n */\nexport interface ShareItem {\n  name: string;\n  snapshot?: string;\n  deleted?: boolean;\n  version?: string;\n  properties: ShareProperties;\n  metadata?: { [propertyName: string]: string };\n}\n\n/**\n * An enumeration of shares.\n */\nexport interface ListSharesResponse {\n  serviceEndpoint: string;\n  prefix?: string;\n  marker?: string;\n  maxResults?: number;\n  shareItems?: ShareItem[];\n  continuationToken: string;\n}\n\n/**\n * Contains response data for the {@link ShareServiceClient.listShares} operation.\n */\nexport type ServiceListSharesSegmentResponse = ListSharesResponse &\n  ServiceListSharesSegmentHeaders & {\n    /**\n     * The underlying HTTP response.\n     */\n    _response: HttpResponse & {\n      /**\n       * The parsed HTTP response headers.\n       */\n      parsedHeaders: ServiceListSharesSegmentHeaders;\n\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ListSharesResponseModel;\n    };\n  };\n\n/**\n * Options to configure {@link ShareServiceClient.generateAccountSasUrl} operation.\n */\nexport interface ServiceGenerateAccountSasUrlOptions {\n  /**\n   * The version of the service this SAS will target. If not specified, it will default to the version targeted by the\n   * library.\n   */\n  version?: string;\n\n  /**\n   * Optional. SAS protocols allowed.\n   */\n  protocol?: SASProtocol;\n\n  /**\n   * Optional. When the SAS will take effect.\n   */\n  startsOn?: Date;\n  /**\n   * Optional. IP range allowed.\n   */\n  ipRange?: SasIPRange;\n}\n\n/**\n * A ShareServiceClient represents a URL to the Azure Storage File service allowing you\n * to manipulate file shares.\n */\nexport class ShareServiceClient extends StorageClient {\n  /**\n   * serviceContext provided by protocol layer.\n   */\n  private serviceContext: Service;\n\n  /**\n   *\n   * Creates an instance of ShareServiceClient from connection string.\n   *\n   * @param connectionString - Account connection string or a SAS connection string of an Azure storage account.\n   *                                  [ Note - Account connection string can only be used in NODE.JS runtime. ]\n   *                                  Account connection string example -\n   *                                  `DefaultEndpointsProtocol=https;AccountName=myaccount;AccountKey=accountKey;EndpointSuffix=core.windows.net`\n   *                                  SAS connection string example -\n   *                                  `BlobEndpoint=https://myaccount.blob.core.windows.net/;QueueEndpoint=https://myaccount.queue.core.windows.net/;FileEndpoint=https://myaccount.file.core.windows.net/;TableEndpoint=https://myaccount.table.core.windows.net/;SharedAccessSignature=sasString`\n   * @param options - Options to configure the HTTP pipeline.\n   * @returns A new ShareServiceClient from the given connection string.\n   */\n  public static fromConnectionString(\n    connectionString: string,\n    // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: StoragePipelineOptions\n  ): ShareServiceClient {\n    const extractedCreds = extractConnectionStringParts(connectionString);\n    if (extractedCreds.kind === \"AccountConnString\") {\n      if (isNode) {\n        const sharedKeyCredential = new StorageSharedKeyCredential(\n          extractedCreds.accountName!,\n          extractedCreds.accountKey\n        );\n        const pipeline = newPipeline(sharedKeyCredential, options);\n        return new ShareServiceClient(extractedCreds.url, pipeline);\n      } else {\n        throw new Error(\"Account connection string is only supported in Node.js environment\");\n      }\n    } else if (extractedCreds.kind === \"SASConnString\") {\n      const pipeline = newPipeline(new AnonymousCredential(), options);\n      return new ShareServiceClient(extractedCreds.url + \"?\" + extractedCreds.accountSas, pipeline);\n    } else {\n      throw new Error(\n        \"Connection string must be either an Account connection string or a SAS connection string\"\n      );\n    }\n  }\n\n  /**\n   * Creates an instance of ShareServiceClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file service, such as\n   *                     \"https://myaccount.file.core.windows.net\". You can Append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.file.core.windows.net?sasString\".\n   * @param credential - Such as AnonymousCredential or StorageSharedKeyCredential.\n   *                                  If not specified, AnonymousCredential is used.\n   * @param options - Optional. Options to configure the HTTP pipeline.\n   */\n  // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n  /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n  constructor(url: string, credential?: Credential, options?: StoragePipelineOptions);\n  /**\n   * Creates an instance of ShareServiceClient.\n   *\n   * @param url - A URL string pointing to Azure Storage file service, such as\n   *                     \"https://myaccount.file.core.windows.net\". You can Append a SAS\n   *                     if using AnonymousCredential, such as \"https://myaccount.file.core.windows.net?sasString\".\n   * @param pipeline - Call newPipeline() to create a default\n   *                            pipeline, or provide a customized pipeline.\n   */\n  constructor(url: string, pipeline: Pipeline);\n  constructor(\n    url: string,\n    credentialOrPipeline?: Credential | Pipeline,\n    // Legacy, no way to fix the eslint error without breaking. Disable the rule for this line.\n    /* eslint-disable-next-line @azure/azure-sdk/ts-naming-options */\n    options?: StoragePipelineOptions\n  ) {\n    let pipeline: Pipeline;\n    if (credentialOrPipeline instanceof Pipeline) {\n      pipeline = credentialOrPipeline;\n    } else if (credentialOrPipeline instanceof Credential) {\n      pipeline = newPipeline(credentialOrPipeline, options);\n    } else {\n      // The second parameter is undefined. Use anonymous credential.\n      pipeline = newPipeline(new AnonymousCredential(), options);\n    }\n\n    super(url, pipeline);\n    this.serviceContext = new Service(this.storageClientContext);\n  }\n\n  /**\n   * Creates a ShareClient object.\n   *\n   * @param shareName - Name of a share.\n   * @returns The ShareClient object for the given share name.\n   *\n   * Example usage:\n   *\n   * ```js\n   * const shareClient = serviceClient.getShareClient(\"<share name>\");\n   * await shareClient.create();\n   * console.log(\"Created share successfully!\");\n   * ```\n   */\n  public getShareClient(shareName: string): ShareClient {\n    return new ShareClient(appendToURLPath(this.url, shareName), this.pipeline);\n  }\n\n  /**\n   * Creates a Share.\n   *\n   * @param shareName -\n   * @param options -\n   * @returns Share creation response and the corresponding share client.\n   */\n  public async createShare(\n    shareName: string,\n    options: ShareCreateOptions = {}\n  ): Promise<{ shareCreateResponse: ShareCreateResponse; shareClient: ShareClient }> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-createShare\", options);\n    try {\n      const shareClient = this.getShareClient(shareName);\n      const shareCreateResponse = await shareClient.create(updatedOptions);\n      return {\n        shareCreateResponse,\n        shareClient,\n      };\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Deletes a Share.\n   *\n   * @param shareName -\n   * @param options -\n   * @returns Share deletion response and the corresponding share client.\n   */\n  public async deleteShare(\n    shareName: string,\n    options: ShareDeleteMethodOptions = {}\n  ): Promise<ShareDeleteResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-deleteShare\", options);\n    try {\n      const shareClient = this.getShareClient(shareName);\n      return await shareClient.delete(updatedOptions);\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Gets the properties of a storage account’s file service, including properties\n   * for Storage Analytics and CORS (Cross-Origin Resource Sharing) rules.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/get-file-service-properties\n   *\n   * @param options - Options to Get Properties operation.\n   * @returns Response data for the Get Properties operation.\n   */\n  public async getProperties(\n    options: ServiceGetPropertiesOptions = {}\n  ): Promise<ServiceGetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-getProperties\", options);\n    try {\n      return await this.serviceContext.getProperties({\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Sets properties for a storage account’s file service endpoint, including properties\n   * for Storage Analytics, CORS (Cross-Origin Resource Sharing) rules and soft delete settings.\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/set-file-service-properties\n   *\n   * @param properties -\n   * @param options - Options to Set Properties operation.\n   * @returns Response data for the Set Properties operation.\n   */\n  public async setProperties(\n    properties: FileServiceProperties,\n    options: ServiceSetPropertiesOptions = {}\n  ): Promise<ServiceSetPropertiesResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-setProperties\", options);\n    try {\n      return await this.serviceContext.setProperties(properties, {\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for {@link ServiceListSharesSegmentResponse} objects\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list of shares to be returned with the next listing operation. The\n   *                          operation returns the ContinuationToken value within the response body if the\n   *                          listing operation did not return all shares remaining to be listed\n   *                          with the current page. The ContinuationToken value can be used as the value for\n   *                          the marker parameter in a subsequent call to request the next page of list\n   *                          items. The marker value is opaque to the client.\n   * @param options - Options to list shares operation.\n   */\n  private async *listSegments(\n    marker?: string,\n    options: ServiceListSharesSegmentOptions = {}\n  ): AsyncIterableIterator<ServiceListSharesSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let listSharesSegmentResponse;\n    do {\n      listSharesSegmentResponse = await this.listSharesSegment(marker, options);\n      marker = listSharesSegmentResponse.continuationToken;\n      yield await listSharesSegmentResponse;\n    } while (marker);\n  }\n\n  /**\n   * Returns an AsyncIterableIterator for share items\n   *\n   * @param options - Options to list shares operation.\n   */\n  private async *listItems(\n    options: ServiceListSharesSegmentOptions = {}\n  ): AsyncIterableIterator<ShareItem> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    let marker: string | undefined;\n    for await (const segment of this.listSegments(marker, options)) {\n      if (segment.shareItems) {\n        yield* segment.shareItems;\n      }\n    }\n  }\n\n  /**\n   * Returns an async iterable iterator to list all the shares\n   * under the specified account.\n   *\n   * .byPage() returns an async iterable iterator to list the shares in pages.\n   *\n   * Example using `for await` syntax:\n   *\n   * ```js\n   * let i = 1;\n   * for await (const share of serviceClient.listShares()) {\n   *   console.log(`Share ${i++}: ${share.name}`);\n   * }\n   * ```\n   *\n   * Example using `iter.next()`:\n   *\n   * ```js\n   * let i = 1;\n   * let iter = serviceClient.listShares();\n   * let shareItem = await iter.next();\n   * while (!shareItem.done) {\n   *   console.log(`Share ${i++}: ${shareItem.value.name}`);\n   *   shareItem = await iter.next();\n   * }\n   * ```\n   *\n   * Example using `byPage()`:\n   *\n   * ```js\n   * // passing optional maxPageSize in the page settings\n   * let i = 1;\n   * for await (const response of serviceClient.listShares().byPage({ maxPageSize: 20 })) {\n   *   if (response.shareItems) {\n   *    for (const share of response.shareItems) {\n   *        console.log(`Share ${i++}: ${share.name}`);\n   *     }\n   *   }\n   * }\n   * ```\n   *\n   * Example using paging with a marker:\n   *\n   * ```js\n   * let i = 1;\n   * let iterator = serviceClient.listShares().byPage({ maxPageSize: 2 });\n   * let response = (await iterator.next()).value;\n   *\n   * // Prints 2 share names\n   * if (response.shareItems) {\n   *   for (const share of response.shareItems) {\n   *     console.log(`Share ${i++}: ${share.name}`);\n   *   }\n   * }\n   *\n   * // Gets next marker\n   * let marker = response.continuationToken;\n   *\n   * // Passing next marker as continuationToken\n   * iterator = serviceClient.listShares().byPage({ continuationToken: marker, maxPageSize: 10 });\n   * response = (await iterator.next()).value;\n   *\n   * // Prints 10 share names\n   * if (response.shareItems) {\n   *   for (const share of response.shareItems) {\n   *     console.log(`Share ${i++}: ${share.name}`);\n   *   }\n   * }\n   * ```\n   *\n   * @param options - Options to list shares operation.\n   *\n   * An asyncIterableIterator that supports paging.\n   */\n  public listShares(\n    options: ServiceListSharesOptions = {}\n  ): PagedAsyncIterableIterator<ShareItem, ServiceListSharesSegmentResponse> {\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    const include: ListSharesIncludeType[] = [];\n    if (options.includeMetadata) {\n      include.push(\"metadata\");\n    }\n    if (options.includeSnapshots) {\n      include.push(\"snapshots\");\n    }\n    if (options.includeDeleted) {\n      include.push(\"deleted\");\n    }\n\n    const updatedOptions: ServiceListSharesSegmentOptions = {\n      ...options,\n      ...(include.length > 0 ? { include: include } : {}),\n    };\n\n    // AsyncIterableIterator to iterate over queues\n    const iter = this.listItems(updatedOptions);\n    return {\n      /**\n       * The next method, part of the iteration protocol\n       */\n      next() {\n        return iter.next();\n      },\n      /**\n       * The connection to the async iterator, part of the iteration protocol\n       */\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      /**\n       * Return an AsyncIterableIterator that works a page at a time\n       */\n      byPage: (settings: PageSettings = {}) => {\n        return this.listSegments(settings.continuationToken, {\n          maxResults: settings.maxPageSize,\n          ...updatedOptions,\n        });\n      },\n    };\n  }\n\n  /**\n   * Gets the properties of a storage account's File service, including properties for Storage\n   * Analytics metrics and CORS (Cross-Origin Resource Sharing) rules.\n   *\n   * @param marker - A string value that identifies the portion of\n   *                          the list to be returned with the next list operation. The operation\n   *                          returns a marker value within the response body if the list returned was\n   *                          not complete. The marker value may then be used in a subsequent call to\n   *                          request the next set of list items. The marker value is opaque to the\n   *                          client.\n   * @param options - Options to List Shares Segment operation.\n   * @returns Response data for the List Shares Segment operation.\n   */\n  private async listSharesSegment(\n    marker?: string,\n    options: ServiceListSharesSegmentOptions = {}\n  ): Promise<ServiceListSharesSegmentResponse> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-listSharesSegment\", options);\n\n    if (options.prefix === \"\") {\n      options.prefix = undefined;\n    }\n\n    try {\n      const res = await this.serviceContext.listSharesSegment({\n        marker,\n        ...options,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n\n      // parse protocols\n      if (res.shareItems) {\n        for (let i = 0; i < res.shareItems.length; i++) {\n          const protocolsStr = res.shareItems[i].properties.enabledProtocols;\n          (res.shareItems[i].properties as any).protocols = toShareProtocols(protocolsStr);\n        }\n      }\n\n      return res;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Restores a previously deleted share.\n   * This API is only functional if Share Soft Delete is enabled\n   * for the storage account associated with the share.\n   *\n   * @param deletedShareName - The name of the previously deleted share.\n   * @param deletedShareVersion - The version of the previously deleted share.\n   * @param options - Options to Share undelete operation.\n   * @returns Restored share.\n   */\n  public async undeleteShare(\n    deletedShareName: string,\n    deletedShareVersion: string,\n    options: ServiceUndeleteShareOptions = {}\n  ): Promise<ShareClient> {\n    const { span, updatedOptions } = createSpan(\"ShareServiceClient-undeleteShare\", options);\n    try {\n      const shareClient = this.getShareClient(deletedShareName);\n      await new ShareClientInternal(shareClient.url, this.pipeline).restore({\n        deletedShareName: deletedShareName,\n        deletedShareVersion: deletedShareVersion,\n        abortSignal: options.abortSignal,\n        ...convertTracingToRequestOptionsBase(updatedOptions),\n      });\n      return shareClient;\n    } catch (e) {\n      span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: e.message,\n      });\n      throw e;\n    } finally {\n      span.end();\n    }\n  }\n\n  /**\n   * Only available for ShareServiceClient constructed with a shared key credential.\n   *\n   * Generates an account Shared Access Signature (SAS) URI based on the client properties\n   * and parameters passed in. The SAS is signed by the shared key credential of the client.\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-account-sas\n   *\n   * @param expiresOn - Optional. The time at which the shared access signature becomes invalid. Default to an hour later if not specified.\n   * @param permissions - Specifies the list of permissions to be associated with the SAS.\n   * @param resourceTypes - Specifies the resource types associated with the shared access signature.\n   * @param options - Optional parameters.\n   * @returns An account SAS URI consisting of the URI to the resource represented by this client, followed by the generated SAS token.\n   */\n  public generateAccountSasUrl(\n    expiresOn?: Date,\n    permissions: AccountSASPermissions = AccountSASPermissions.parse(\"r\"),\n    resourceTypes: string = \"sco\",\n    options: ServiceGenerateAccountSasUrlOptions = {}\n  ): string {\n    if (!(this.credential instanceof StorageSharedKeyCredential)) {\n      throw RangeError(\n        \"Can only generate the account SAS when the client is initialized with a shared key credential\"\n      );\n    }\n\n    if (expiresOn === undefined) {\n      const now = new Date();\n      expiresOn = new Date(now.getTime() + 3600 * 1000);\n    }\n\n    const sas = generateAccountSASQueryParameters(\n      {\n        permissions,\n        expiresOn,\n        resourceTypes,\n        services: AccountSASServices.parse(\"f\").toString(),\n        ...options,\n      },\n      this.credential\n    ).toString();\n\n    return appendToURLQuery(this.url, sas);\n  }\n}\n"],"names":["URLBuilder","SASProtocol","FileServicePropertiesMapper","QueryCollectionFormat","SharePermissionMapper","coreHttp","setPropertiesOperationSpec","getPropertiesOperationSpec","xmlSerializer","Mappers.ServiceSetPropertiesHeaders","Mappers.StorageError","Mappers.ServiceSetPropertiesExceptionHeaders","Parameters.properties","Parameters.restype","Parameters.comp","Parameters.timeoutInSeconds","Parameters.url","Parameters.contentType","Parameters.accept","Parameters.version","Mappers.FileServiceProperties","Mappers.ServiceGetPropertiesHeaders","Mappers.ServiceGetPropertiesExceptionHeaders","Parameters.accept1","Mappers.ListSharesResponse","Mappers.ServiceListSharesSegmentHeaders","Mappers.ServiceListSharesSegmentExceptionHeaders","Parameters.comp1","Parameters.prefix","Parameters.marker","Parameters.maxResults","Parameters.include","createOperationSpec","deleteOperationSpec","acquireLeaseOperationSpec","releaseLeaseOperationSpec","changeLeaseOperationSpec","breakLeaseOperationSpec","setMetadataOperationSpec","Mappers.ShareCreateHeaders","Mappers.ShareCreateExceptionHeaders","Parameters.restype1","Parameters.metadata","Parameters.quota","Parameters.accessTier","Parameters.enabledProtocols","Parameters.rootSquash","Mappers.ShareGetPropertiesHeaders","Mappers.ShareGetPropertiesExceptionHeaders","Parameters.shareSnapshot","Parameters.leaseId","Mappers.ShareDeleteHeaders","Mappers.ShareDeleteExceptionHeaders","Parameters.deleteSnapshots","Mappers.ShareAcquireLeaseHeaders","Mappers.ShareAcquireLeaseExceptionHeaders","Parameters.comp2","Parameters.action","Parameters.duration","Parameters.proposedLeaseId","Parameters.requestId","Mappers.ShareReleaseLeaseHeaders","Mappers.ShareReleaseLeaseExceptionHeaders","Parameters.action1","Parameters.leaseId1","Mappers.ShareChangeLeaseHeaders","Mappers.ShareChangeLeaseExceptionHeaders","Parameters.action2","Mappers.ShareRenewLeaseHeaders","Mappers.ShareRenewLeaseExceptionHeaders","Parameters.action3","Mappers.ShareBreakLeaseHeaders","Mappers.ShareBreakLeaseExceptionHeaders","Parameters.action4","Parameters.breakPeriod","Mappers.ShareCreateSnapshotHeaders","Mappers.ShareCreateSnapshotExceptionHeaders","Parameters.comp3","Mappers.ShareCreatePermissionHeaders","Mappers.ShareCreatePermissionExceptionHeaders","Parameters.sharePermission","Parameters.comp4","Mappers.SharePermission","Mappers.ShareGetPermissionHeaders","Mappers.ShareGetPermissionExceptionHeaders","Parameters.accept2","Parameters.filePermissionKey","Mappers.ShareSetPropertiesHeaders","Mappers.ShareSetPropertiesExceptionHeaders","Mappers.ShareSetMetadataHeaders","Mappers.ShareSetMetadataExceptionHeaders","Parameters.comp5","Mappers.ShareGetAccessPolicyHeaders","Mappers.ShareGetAccessPolicyExceptionHeaders","Parameters.comp6","Mappers.ShareSetAccessPolicyHeaders","Mappers.ShareSetAccessPolicyExceptionHeaders","Parameters.shareAcl","Mappers.ShareStats","Mappers.ShareGetStatisticsHeaders","Mappers.ShareGetStatisticsExceptionHeaders","Parameters.comp7","Mappers.ShareRestoreHeaders","Mappers.ShareRestoreExceptionHeaders","Parameters.comp8","Parameters.deletedShareName","Parameters.deletedShareVersion","listHandlesOperationSpec","forceCloseHandlesOperationSpec","renameOperationSpec","Mappers.DirectoryCreateHeaders","Mappers.DirectoryCreateExceptionHeaders","Parameters.restype2","Parameters.filePermission","Parameters.filePermissionKey1","Parameters.fileAttributes","Parameters.fileCreatedOn","Parameters.fileLastWriteOn","Mappers.DirectoryGetPropertiesHeaders","Mappers.DirectoryGetPropertiesExceptionHeaders","Mappers.DirectoryDeleteHeaders","Mappers.DirectoryDeleteExceptionHeaders","Mappers.DirectorySetPropertiesHeaders","Mappers.DirectorySetPropertiesExceptionHeaders","Mappers.DirectorySetMetadataHeaders","Mappers.DirectorySetMetadataExceptionHeaders","Mappers.ListFilesAndDirectoriesSegmentResponse","Mappers.DirectoryListFilesAndDirectoriesSegmentHeaders","Mappers.DirectoryListFilesAndDirectoriesSegmentExceptionHeaders","Parameters.include1","Parameters.includeExtendedInfo","Mappers.ListHandlesResponse","Mappers.DirectoryListHandlesHeaders","Mappers.DirectoryListHandlesExceptionHeaders","Parameters.comp9","Parameters.recursive","Mappers.DirectoryForceCloseHandlesHeaders","Mappers.DirectoryForceCloseHandlesExceptionHeaders","Parameters.comp10","Parameters.handleId","Mappers.DirectoryRenameHeaders","Mappers.DirectoryRenameExceptionHeaders","Parameters.comp11","Parameters.renameSource","Parameters.replaceIfExists","Parameters.ignoreReadOnly","Parameters.sourceLeaseId","Parameters.destinationLeaseId","Parameters.fileAttributes1","Parameters.fileCreationTime","Parameters.fileLastWriteTime","Mappers.FileCreateHeaders","Mappers.FileCreateExceptionHeaders","Parameters.fileContentLength","Parameters.fileTypeConstant","Parameters.fileContentType","Parameters.fileContentEncoding","Parameters.fileContentLanguage","Parameters.fileCacheControl","Parameters.fileContentMD5","Parameters.fileContentDisposition","Mappers.FileDownloadHeaders","Mappers.FileDownloadExceptionHeaders","Parameters.range","Parameters.rangeGetContentMD5","Mappers.FileGetPropertiesHeaders","Mappers.FileGetPropertiesExceptionHeaders","Mappers.FileDeleteHeaders","Mappers.FileDeleteExceptionHeaders","Mappers.FileSetHttpHeadersHeaders","Mappers.FileSetHttpHeadersExceptionHeaders","Parameters.fileContentLength1","Mappers.FileSetMetadataHeaders","Mappers.FileSetMetadataExceptionHeaders","Mappers.FileAcquireLeaseHeaders","Mappers.FileAcquireLeaseExceptionHeaders","Mappers.FileReleaseLeaseHeaders","Mappers.FileReleaseLeaseExceptionHeaders","Mappers.FileChangeLeaseHeaders","Mappers.FileChangeLeaseExceptionHeaders","Mappers.FileBreakLeaseHeaders","Mappers.FileBreakLeaseExceptionHeaders","Mappers.FileUploadRangeHeaders","Mappers.FileUploadRangeExceptionHeaders","Parameters.body","Parameters.comp12","Parameters.contentType1","Parameters.accept3","Parameters.range1","Parameters.fileRangeWrite","Parameters.contentLength","Parameters.contentMD5","Mappers.FileUploadRangeFromURLHeaders","Mappers.FileUploadRangeFromURLExceptionHeaders","Parameters.copySource","Parameters.sourceRange","Parameters.fileRangeWriteFromUrl","Parameters.sourceContentCrc64","Parameters.sourceIfMatchCrc64","Parameters.sourceIfNoneMatchCrc64","Parameters.copySourceAuthorization","Mappers.ShareFileRangeList","Mappers.FileGetRangeListHeaders","Mappers.FileGetRangeListExceptionHeaders","Parameters.comp13","Parameters.prevsharesnapshot","Mappers.FileStartCopyHeaders","Mappers.FileStartCopyExceptionHeaders","Parameters.filePermissionCopyMode","Parameters.ignoreReadOnly1","Parameters.setArchiveAttribute","Mappers.FileAbortCopyHeaders","Mappers.FileAbortCopyExceptionHeaders","Parameters.comp14","Parameters.copyId","Parameters.copyActionAbortConstant","Mappers.FileListHandlesHeaders","Mappers.FileListHandlesExceptionHeaders","Mappers.FileForceCloseHandlesHeaders","Mappers.FileForceCloseHandlesExceptionHeaders","Mappers.FileRenameHeaders","Mappers.FileRenameExceptionHeaders","createClientLogger","BaseRequestPolicy","isNode","StorageRetryPolicyType","AbortError","HttpHeaders","os","DefaultHttpClient","tracingPolicy","keepAlivePolicy","generateClientRequestIdPolicy","deserializationPolicy","logPolicy","proxyPolicy","disableResponseDecompressionPolicy","createHmac","createSpanFunction","Readable","AbortSignal","EventEmitter","fs","util","SpanStatusCode","__await","__asyncValues","generateUuid","__asyncDelegator"],"mappings":"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"}