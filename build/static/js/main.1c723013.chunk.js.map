{"version":3,"sources":["views/ProjectList.js","controllers/useFetch.js","controllers/HomeController.js","views/Filter.js","App.js","index.js"],"names":["ProjectList","props","useState","visible","setVisible","data","items","database","repository","Visible","className","slice","map","item","key","id","Table","author_name","owner_name","href","mathworks_url","project_url","title","repo_name","author_uri","homepage_url","Date","published","created_at","toLocaleDateString","updated","updated_at","align","colSpan","Description","summary","no_of_ratings","watchers_count","language","forks_count","downloads","no_of_comments","stargazers_count","length","Button","variant","size","onClick","useFetch","word","page","datas","setItems","isLoading","setLoading","url","url2","useEffect","a","fetch","headers","Accept","response","console","log","json","res1","data1","res2","data2","res","error","alert","Home","string","string2","NumericInput","style","input","color","Filter","repo","forksCount","setValue","openIssuesCount","setValue1","starGazersCount","setValue2","watchersCount","setValue3","tempFilterdItems","setFilteredItems","filteredItems","filter","p","toString","match","filterState","closeFilter","Container","Row","Col","md","DropdownButton","Dropdown","ItemText","Item","as","min","onChange","value","setSearch","App","searchWord","setSearchWord","tempSearchWord","setTempSearchWord","setRepository","setRepo","openFilter","setOpenFilter","filterWatch","setFilterWatch","marginBottom","onSelect","event","eventKey","Form","FormGroup","InputGroup","FormControl","placeholder","document","getElementsByTagName","string3","ReactDOM","render","StrictMode","getElementById"],"mappings":"0QA6GeA,EAtGK,SAACC,GACnB,MAA6BC,mBAAS,IAAtC,mBAAMC,EAAN,KAAeC,EAAf,KAEMC,EAAOJ,EAAMK,MACbC,EAAWN,EAAMO,WAEnBC,EAAUN,EAUd,OACE,yBAAKO,UAAU,gBACb,yBAAKA,UAAU,QAEXL,EAAKM,MAAM,EAAGR,GAASS,KAAI,SAACC,GAC1B,OAEE,yBAAKH,UAAU,UAAUI,IAAMD,EAAKE,IAClC,kBAACC,EAAA,EAAD,CAAQN,UAAU,SAChB,+BACE,wBAAIA,UAAU,WACZ,wBAAIA,UAAU,UAAd,SACA,wBAAIA,UAAU,UAAd,cACA,wBAAIA,UAAU,UAAd,cACA,wBAAIA,UAAU,UAAd,cACA,wBAAIA,UAAU,UAAd,gBAGJ,+BACE,4BACE,wBAAIA,UAAU,QAAQG,EAAKI,aAAeJ,EAAKK,YAC/C,wBAAKR,UAAU,OACb,uBAAIS,KAAMN,EAAKO,eAAiBP,EAAKQ,aACpCR,EAAKS,OAAST,EAAKU,YAGtB,wBAAKb,UAAU,OACgC,QAA1CG,EAAKW,YAAcX,EAAKY,eACiB,MAA1CZ,EAAKW,YAAcX,EAAKY,eACxB,uBAAIN,KAAMN,EAAKW,YAAcX,EAAKY,cAAlC,kBAKJ,wBAAKf,UAAU,gBAAgB,IAAIgB,KAAKb,EAAKc,WAAad,EAAKe,YAAYC,sBAC3E,wBAAKnB,UAAU,gBAAgB,IAAIgB,KAAKb,EAAKiB,SAAWjB,EAAKkB,YAAYF,uBAE3E,4BACE,wBAAInB,UAAU,cAAcsB,MAAM,SAASC,QAAS,MACnC,WAAb1B,GACA,2BAAIM,EAAKqB,aAEI,SAAb3B,GACA,2BAAIM,EAAKsB,SAEI,QAAb5B,GACA,2BAAIM,EAAKsB,SAAWtB,EAAKqB,eAI/B,wBAAIxB,UAAU,cACZ,4BACE,wBAAIA,UAAU,WAAd,oBAA0CG,EAAKuB,eAAiBvB,EAAKwB,iBAEvE,4BACE,wBAAI3B,UAAU,WAAd,cAAoCG,EAAKyB,UAAY,WAEvD,4BACE,wBAAI5B,UAAU,WAAd,iBAAuCG,EAAK0B,aAAe1B,EAAK2B,YAElE,4BACE,wBAAI9B,UAAU,WAAd,aAAmC,QAErC,4BACE,wBAAIA,UAAU,WAAd,sBAA4CG,EAAK4B,gBAAkB5B,EAAK6B,0BAUxF,yBAAKhC,UAAU,cACZP,EAAUE,EAAKsC,QAEd,kBAACC,EAAA,EAAD,CAAQlC,UAAU,SAASmC,QAAQ,YAAYC,KAAM,SAASC,QArFxD,WAEd3C,EAAWK,EAAU,MAmFb,e,iCC3BGuC,EAtEE,SAACxC,EAAYyC,GAC5B,IAEA,EAAwB/C,mBAAS,GAAjC,mBAAOgD,EAAP,KACA,GADA,KAC0BhD,mBAAS,KAAnC,mBAAOiD,EAAP,KAAcC,EAAd,KACA,EAAgClD,oBAAS,GAAzC,mBAAOmD,EAAP,KAAkBC,EAAlB,KACMC,EAAG,yEAAqEN,EAArE,kBAAmFC,EAAnF,mBALS,IAMZM,EAAI,yCAAqCP,EAArC,kBAAmDC,EAAnD,mBANQ,IAgElB,OAvDAO,oBAAS,sBAAC,4CAAAC,EAAA,yDAERJ,GAAW,GACO,WAAf9C,EAHK,wBAKN8C,GAAW,GALL,SAOiBK,MAAMJ,EAAI,CAE/BK,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBAXN,cAOAC,EAPA,OAcNC,QAAQC,IAAIF,GAdN,SAgBaA,EAASG,OAhBtB,OAgBA5D,EAhBA,OAiBN+C,EAAS/C,GACTiD,GAAW,GAlBL,2BAoBe,SAAf9C,EApBA,wBAsBN8C,GAAW,GAtBL,UAuBiBK,MAAMH,EAAK,CAChCI,QAAS,CACP,eAAgB,mBAChBC,OAAQ,sBA1BN,eAuBAC,EAvBA,iBA8BaA,EAASG,OA9BtB,QA8BA5D,EA9BA,OA+BN+C,EAAS/C,GACTiD,GAAW,GAhCL,2BAkCgB,QAAf9C,EAlCD,4CAqCamD,MAAM,iCAAD,OAAkCV,EAAlC,kBAAgDC,EAAhD,mBA7CP,KAQX,eAqCAgB,EArCA,iBAsCcA,EAAKD,OAtCnB,eAsCAE,EAtCA,iBAuCaR,MAAM,kCAAD,OAAmCV,EAAnC,kBAAiDC,EAAjD,mBA/CP,KAQX,eAuCAkB,EAvCA,iBAwCcA,EAAKH,OAxCnB,QAwCAI,EAxCA,OAyCAC,EAzCA,sBAyCUH,GAzCV,YAyCmBE,IACvBjB,EAASkB,GA1CL,mDA4CFP,QAAQQ,MAAR,MA5CE,sEAgDgB,SAAf/D,GAEPgE,MAAM,6CAlDA,iEAoDP,CAACvB,EAAMzC,IAGJ,CAAC2C,QAAOE,cCzCDoB,EApBF,SAACxE,GAEZ,IAAMgD,EAAMhD,EAAMyE,OACZnE,EAAWN,EAAM0E,QAGvB,EAA2B3B,EAASzC,EAAU0C,GAAvCI,EAAP,EAAOA,UAAWF,EAAlB,EAAkBA,MAIlB,OACE,yBAAKzC,UAAU,QAEZ2C,GAAa,2CAEd,kBAAC,EAAD,CAAc/C,MAAQ6C,EAAO3C,WAAcD,EAAU0C,KAAQA,M,kCCVnE2B,IAAaC,MAAMC,MAAMC,MAAQ,OAIjC,IA0KeC,EA1KA,SACb/E,GAKA,MAA2B+C,EAAS/C,EAAMgF,KAAMhF,EAAMgD,MAA/CI,EAAP,EAAOA,UAAWF,EAAlB,EAAkBA,MAUlB,EAA+BjD,mBAAS,GAAxC,mBAAOgF,EAAP,KAAmBC,EAAnB,KACA,EAAqCjF,mBAAS,GAA9C,mBAAOkF,EAAP,KAAwBC,EAAxB,KACA,EAAqCnF,mBAAS,GAA9C,mBAAOoF,EAAP,KAAwBC,EAAxB,KACA,EAAmCrF,mBAAS,GAA5C,mBAAOsF,EAAP,KAAsBC,EAAtB,KAEA,EAA4CvF,mBAAS,IAArD,mBAAMwF,EAAN,KAAwBC,EAAxB,KAqBA,IAAMC,EAAgBzC,EAAM0C,QAAQ,SAAAC,GAElC,OAAkB,IAAfZ,EAEM,EAOAa,SAASD,EAAEvD,aAAayD,MAAMD,SAASb,OAkBlD,OAIE,yBAAKxE,UAAU,SACU,IAAtBT,EAAMgG,aACP,yBAAKvF,UAAU,mBAEb,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,SACb,yBAAKA,UAAU,eACb,kBAACkC,EAAA,EAAD,CAAQlC,UAAU,eAAemC,QAAQ,YAAYC,KAAM,QAAQC,QAAW,kBAC5E9C,EAAMiG,aAAY,KADpB,MAGF,yBAAKxF,UAAU,cACb,iDAGJ,yBAAKA,UAAU,QACb,kBAACyF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK1F,UAAU,QACb,kBAAC2F,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,0CACA,kBAAC,IAAD,OAEF,kBAAC2F,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,wCACA,kBAAC,IAAD,OAEF,kBAAC2F,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,wCACA,kBAAC6F,EAAA,EAAD,CAAgBxF,GAAG,uBAAuBO,MAAM,mBAC9C,kBAACkF,EAAA,EAASC,SAAV,MACA,kBAACD,EAAA,EAASE,KAAV,CAAeC,GAAG,UAAlB,OACA,kBAACH,EAAA,EAASE,KAAV,CAAeC,GAAG,UAAlB,QACA,kBAACH,EAAA,EAASE,KAAV,CAAeC,GAAG,UAAlB,SAIN,kBAACP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,2CACA,kBAAC,IAAD,CAAckG,IAAK,EAAGlG,UAAU,eAAcmG,SAxFhE,SAAiBC,GACf3B,EAAS2B,GACT/C,QAAQC,IAAIkB,OAwFE,kBAACmB,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,iDACA,kBAAC,IAAD,CAAckG,IAAK,EAAGlG,UAAU,eAAcmG,SAxFhE,SAAkBC,GAChBzB,EAAUyB,GACV/C,QAAQC,IAAIoB,OAwFE,kBAACiB,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,uCACA,kBAAC6F,EAAA,EAAD,CAAgBxF,GAAG,uBAAuBO,MAAM,kBAC9C,kBAACkF,EAAA,EAASC,SAAV,MACA,kBAACD,EAAA,EAASE,KAAV,CAAeC,GAAG,UAAlB,OACA,kBAACH,EAAA,EAASE,KAAV,CAAeC,GAAG,UAAlB,OACA,kBAACH,EAAA,EAASE,KAAV,CAAeC,GAAG,UAAlB,UAIN,kBAACP,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,gDACA,kBAAC,IAAD,CAAckG,IAAK,EAAGlG,UAAU,eAAemG,SAnGjE,SAAkBC,GAChBvB,EAAUuB,GACV/C,QAAQC,IAAIsB,OAmGE,kBAACe,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,kDACA,kBAAC,IAAD,CAAckG,IAAK,EAAGlG,UAAU,mBAGpC,kBAAC0F,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,8CACA,kBAAC,IAAD,CAAckG,IAAK,EAAGlG,UAAU,eAAcmG,SAzGhE,SAAkBC,GAChBrB,EAAUqB,GACV/C,QAAQC,IAAIwB,OAyGE,kBAACa,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,eACpB,iDACA,kBAAC,IAAD,CAAckG,IAAK,EAAGlG,UAAU,kBAElC,kBAAC2F,EAAA,EAAD,CAAKC,GAAG,IAAI5F,UAAU,mBACpB,kBAACkC,EAAA,EAAD,CAAQlC,UAAU,gBAAgBmC,QAAQ,YAAYC,KAAM,SAASC,QA5FzE,WAEZ4C,EAAiBC,GACjB7B,QAAQC,IAAI4B,GACZ7B,QAAQC,IAAI/D,EAAMgD,MAClBc,QAAQC,IAAI/D,EAAMgF,MAClBhF,EAAM8G,UAAU9G,EAAMgD,QAsFN,yBAUbI,GAAa,6CACd,kBAAC,EAAD,CAAc/C,MAAQoF,EAAkBlF,WAAcP,EAAMgF,KAAMhC,KAAQhD,EAAMgD,SC5DvE+D,MAxGf,WAGE,MAAoC9G,mBAAS,IAA7C,mBAAO+G,EAAP,KAAmBC,EAAnB,KACA,EAA4ChH,mBAAS,IAArD,mBAAOiH,EAAP,KAAuBC,EAAvB,KACA,EAAoClH,mBAAS,QAA7C,mBAAOM,EAAP,KAAmB6G,EAAnB,KACA,EAAwBnH,mBAAS,IAAjC,mBAAO+E,EAAP,KAAaqC,EAAb,KACA,EAAoCpH,oBAAS,GAA7C,mBAAOqH,EAAP,KAAmBC,EAAnB,KAEA,EAAsCtH,oBAAS,GAA/C,mBAAOuH,EAAP,KAAoBC,EAApB,KAuDA,OACE,kBAACvB,EAAA,EAAD,CAAWzF,UAAU,OACnB,4BAtDW,mBAuDX,kBAAC0F,EAAA,EAAD,CAAK1F,UAAU,UACb,kBAAC2F,EAAA,EAAD,CAAKC,GAAM,GAET,kBAACC,EAAA,EAAD,CAAgBxF,GAAG,uBAAuB8D,MAAO,CAAC8C,aAAe,MAAOrG,MAAOd,EAAYoH,SAzDhF,SAACC,GAIlBR,EAAcQ,KAuDN,kBAACrB,EAAA,EAASE,KAAV,CAAeoB,SAAW,SAASnB,GAAG,UAAtC,UACA,kBAACH,EAAA,EAASE,KAAV,CAAeoB,SAAW,OAAOnB,GAAG,UAApC,QACA,kBAACH,EAAA,EAASE,KAAV,CAAeoB,SAAW,MAAMnB,GAAG,UAAnC,SAGJ,kBAACN,EAAA,EAAD,CAAKC,GAAM,GAAI5F,UAAU,gBACvB,kBAACqH,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,YAAY,iBAAiBtB,SA/CrC,WACjB,IAAI9F,EAAGqH,SAASC,qBAAqB,SAAS,GAC9CjB,EAAkBrG,EAAG+F,QA6CyDR,GAAM,IACtE,kBAAC1D,EAAA,EAAD,CAAQ0D,GAAM,EAAG5F,UAAU,gBAAgBmC,QAAQ,YAAYC,KAAM,SAASC,QA3C5E,WAEhByE,GAAc,GAEdN,EAAcC,GACdG,EAAQ9G,KAsCM,UAGA,kBAACoC,EAAA,EAAD,CAAS0D,GAAM,EAAG5F,UAAU,gBAAgBmC,QAAQ,YAAYC,KAAM,SAAWC,QAtC9E,WAEjBmE,EAAc,IACdM,GAAc,GACdE,GAAe,KAkCD,eAQZ,kBAACtB,EAAA,EAAD,CAAK1F,UAAU,SACb,kBAAC2F,EAAA,EAAD,CAAK3F,UAAU,YAAY4F,GAAG,MAC1B,kBAAC,EAAD,CAAM5B,OAAUuC,EAAYtC,QAAUM,EAAMqD,QAAU9H,KAEtC,IAAf+G,GAAuB,kBAAC,EAAD,CAAStB,YAAewB,EAAavB,YA1ExD,WACbsB,GAAc,IAyE8EvE,KAAQgE,EAAYhC,KAAQzE,EAAYuG,UAtE9G,WACtBG,EAAcD,UClClBsB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFL,SAASM,eAAe,U","file":"static/js/main.1c723013.chunk.js","sourcesContent":["import React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { useState} from \"react\";\nimport { Button } from '@mui/material';\n\n\n//list of projects is generated using the prop received  \nconst ProjectList = (props) => {\n  const[visible, setVisible] = useState(10);\n  \n  const data = props.items;\n  const database = props.repository;\n  //console.log(database);\n  let Visible = visible;\n\n  const loadMOre= () =>{\n    \n    setVisible(Visible + 25);\n\n  }\n\n  //console.log(data.length);\n \n  return ( \n    <div className=\"search-items\">\n      <div className=\"list\">\n        { \n          data.slice(0, visible).map((item)=>{     \n            return (\n              /* all columns set to 20% total width */\n              <div className=\"preview\" key ={item.id}> \n                <Table  className=\"table\">\n                  <thead>\n                    <tr className=\"headers\">\n                      <th className=\"header\">Owner</th>\n                      <th className=\"header\">Repository</th>\n                      <th className=\"header\">Owner Page</th>\n                      <th className=\"header\">Created On</th>\n                      <th className=\"header\">Updated On</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                      <td className=\"name\">{item.author_name || item.owner_name}</td>\n                      <td  className=\"url\">\n                        <a  href={item.mathworks_url || item.project_url}>\n                        {item.title || item.repo_name}\n                        </a>\n                      </td>\n                      <td  className=\"url\">\n                        {((item.author_uri || item.homepage_url) !== null) &&\n                        ((item.author_uri || item.homepage_url) !== \"\") &&\n                          <a  href={item.author_uri || item.homepage_url}>\n                          take me there\n                          </a>\n                        }\n                      </td>\n                      <td  className=\"date-created\">{new Date(item.published || item.created_at).toLocaleDateString()}</td>\n                      <td  className=\"date-updated\">{new Date(item.updated || item.updated_at).toLocaleDateString()}</td>\n                    </tr>\n                    <tr>\n                      <td className=\"description\" align=\"center\" colSpan={'12'} >\n                        { database === 'GitHub' && \n                          <p>{item.Description}</p>\n                        }\n                        { database === 'MATC' && \n                          <p>{item.summary}</p>\n                        }\n                        { database === 'All' && \n                          <p>{item.summary || item.Description}</p>\n                        }\n                      </td>\n                    </tr>\n                    <tr className=\"attributes\">\n                      <td>\n                        <h1 className=\"headers\">watchers count : {item.no_of_ratings || item.watchers_count}</h1>\n                      </td>\n                      <td>\n                        <h1 className=\"headers\">language : {item.language || \"Matlab\"}</h1>\n                      </td>\n                      <td>\n                        <h1 className=\"headers\">forks count : {item.forks_count || item.downloads}</h1>\n                      </td>\n                      <td>\n                        <h1 className=\"headers\">license : {\"GNU\"}</h1>\n                      </td>\n                      <td>\n                        <h1 className=\"headers\">stargazers count : {item.no_of_comments || item.stargazers_count}</h1>\n                      </td>\n                    </tr>\n\n                  </tbody>\n                </Table>\n              </div>\n            )\n          })\n        }\n        <div className=\"page-count\">\n          {visible < data.length && ( \n\n            <Button className='loader' variant=\"contained\" size ='medium' onClick={loadMOre}>Next 10</Button>\n\n          )}\n        </div>  \n      </div>\n    </div>  \n  );\n}\n \nexport default ProjectList;\n\n","import { useState } from \"react\";\nimport { useEffect } from \"react\";\n\nconst useFetch = (repository, word) =>{\n  const pageLimit = 40;\n  const pageLimitAll = 40;\n  const [page, setPage] = useState(1);\n  const [datas, setItems] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const url = `https://bkkedr0m0e.execute-api.us-east-1.amazonaws.com/items?q=${word}&_page=${page}&_limit=${pageLimit}`;\n  const url2 = `http://localhost:5000/items2?q=${word}&_page=${page}&_limit=${pageLimit}`;\n  \n  //will execute function when data is updated\n  useEffect(async() => {\n    //console.log(repository);\n    setLoading(false);\n    if(repository === 'GitHub')\n    {\n      setLoading(true);\n\n      const response = await fetch(url,{\n\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      });\n      console.log(response);\n      \n      const data = await response.json();\n      setItems(data);\n      setLoading(false);\n    }\n    else if(repository === 'MATC')\n    {\n      setLoading(true);\n      const response = await fetch(url2,{\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\"\n        }\n      });\n      \n      const data = await response.json();\n      setItems(data);\n      setLoading(false);\n    }\n    else if (repository === 'All')\n    {\n      try{//both json arrays are merged here\n        var res1 = await fetch(`http://localhost:8000/items?q=${word}&_page=${page}&_limit=${pageLimitAll}`);\n        var data1 = await res1.json();\n        var res2 = await fetch(`http://localhost:5000/items2?q=${word}&_page=${page}&_limit=${pageLimitAll}`);\n        var data2 = await res2.json();\n        var res = [...data1,...data2];\n        setItems(res);\n      }catch(e){\n          console.error(e)\n      }finally{\n        //setLoading(false)\n      }\n    }else if(repository === 'TYPE') \n    {\n      alert('Select repository type to begin search...');\n    }\n  }, [word, repository]);\n  \n  \n  return{datas, isLoading}\n\n}\n  \n\nexport default useFetch;","import React from \"react\";\nimport ProjectList from \"../views/ProjectList\";\nimport useFetch from \"./useFetch\";\n\n\n\n//Hosts the lists of projects matching search word\nconst Home = (props) => {\n\n  const word =props.string;\n  const database = props.string2;\n  \n  //will display a load effect between searches\n  const {isLoading, datas} = useFetch(database, word);\n\n  //the prop \"word\" comes from search bar and will be \n  //the filtering parameter used for project filtering\n  return ( \n    <div className=\"home\">\n\n      {isLoading && <div>Loading...</div> } \n\n      <ProjectList  items ={datas} repository = {database} word = {word}/>\n    </div>\n  );\n}\n \nexport default Home ;","import React from \"react\";\n\nimport ProjectList from \"./ProjectList\";\n\nimport{ useState } from \"react\";\nimport { Col, Container, Row } from 'react-bootstrap';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DatePicker from 'react-date-picker';\nimport useFetch from \"../controllers/useFetch\";\nimport { Button } from '@mui/material';\nimport NumericInput from 'react-numeric-input';\nNumericInput.style.input.color = 'blue';\n\n//will contain the login for searching with different field parameters\n\nconst Filter = (\n  props\n) => {\n\n  //need to pass repository and searchword\n  //the change on word needs to register in useFetch \n  const {isLoading, datas} = useFetch(props.repo, props.word);\n\n\n  //default value for each select drop-down menu\n  //all this login can be combine into one component\n  //to minimize code lenght, the cod below was created to\n  //get a version of the filter page working\n\n  //hook for selected value\n  //updates return value for each drop down menu\n  const [forksCount, setValue] = useState(0);\n  const [openIssuesCount, setValue1] = useState(0);\n  const [starGazersCount, setValue2] = useState(0);\n  const [watchersCount, setValue3] = useState(0);\n\n  const[tempFilterdItems, setFilteredItems] = useState([]);\n\n  //these functions handle the what happens when new value is selected from menu\n\n  function Change (value) {\n    setValue(value);\n    console.log(forksCount);\n  };\n  function Change2 (value) {\n    setValue1(value);\n    console.log(openIssuesCount);\n  };\n  function Change3 (value) {\n    setValue2(value);\n    console.log(starGazersCount);\n  };\n  function Change4 (value) {\n    setValue3(value);\n    console.log(watchersCount);\n  };\n  //console.log(data);\n  const filteredItems = datas.filter( p =>{\n    \n    if(forksCount === 0)\n    {\n      return 0;\n    }\n    else \n    {                          \n\n      //console.log(toString(p.forks_count).match(toString(forksCount)));\n\n      return toString(p.forks_count).match(toString(forksCount));\n    }\n  });\n  \n  const sendIt =()=>{\n\n    setFilteredItems(filteredItems);\n    console.log(filteredItems);\n    console.log(props.word);\n    console.log(props.repo);\n    props.setSearch(props.word);\n\n\n\n  }\n  //logic for displaying the drowp-down menus\n  //will be updated to fit mock up display\n  //all fields below will be combined into a single data request\n  return ( \n   \n    /*********************filter modal**********************/\n\n    <div className=\"Home\">\n      {props.filterState === true &&\n      <div className=\"modalBackground\">\n        \n        <div className=\"modalContainer\">\n            <div className=\"title\">\n              <div className=\"closeButton\">\n                <Button className='searchButton' variant=\"contained\" size ='small' onClick = {()=>(\n                  props.closeFilter(false))}>X</Button>\n              </div>\n              <div className=\"titleValue\">\n                <h1>Filtered Search</h1>\n              </div>\n            </div>\n            <div className=\"body\">\n              <Container>\n                <Row className=\"date\">\n                  <Col md='4' className='col-example'>\n                    <p>Start Date:</p>\n                    <DatePicker   />\n                  </Col>\n                  <Col md='4' className='col-example'>\n                    <p>End Date:</p>\n                    <DatePicker   />\n                  </Col>\n                  <Col md='4' className='col-example'>\n                    <p>Language:</p>\n                    <DropdownButton id=\"dropdown-item-button\" title=\"Select Language\">\n                      <Dropdown.ItemText></Dropdown.ItemText>\n                      <Dropdown.Item as=\"button\">C++</Dropdown.Item>\n                      <Dropdown.Item as=\"button\">Java</Dropdown.Item>\n                      <Dropdown.Item as=\"button\">C#</Dropdown.Item>\n                    </DropdownButton>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md='4' className='col-example'>\n                    <p>Forks Count:</p>\n                    <NumericInput min={0} className=\"form-control\"onChange={Change}/> \n                  </Col>\n                  <Col md='4' className='col-example'>\n                    <p>Open Issues Count:</p>\n                    <NumericInput min={0} className=\"form-control\"onChange={Change2}/>\n                  </Col>\n                  <Col md='4' className='col-example'>\n                    <p>License:</p>\n                    <DropdownButton id=\"dropdown-item-button\" title=\"Select License\">\n                      <Dropdown.ItemText></Dropdown.ItemText>\n                      <Dropdown.Item as=\"button\">MIT</Dropdown.Item>\n                      <Dropdown.Item as=\"button\">GNU</Dropdown.Item>\n                      <Dropdown.Item as=\"button\">BSD</Dropdown.Item>\n                    </DropdownButton>\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md='4' className='col-example'>\n                    <p>Stargazers Count:</p>\n                    <NumericInput min={0} className=\"form-control\" onChange={Change3}/>\n                  </Col>\n                  <Col md='4' className='col-example'>\n                    <p>Number of Comments:</p>\n                    <NumericInput min={0} className=\"form-control\" />\n                  </Col>\n                </Row>\n                <Row>\n                  <Col md='4' className='col-example'>\n                    <p>Watchers Count:</p>\n                    <NumericInput min={0} className=\"form-control\"onChange={Change4}/>\n                  </Col>\n                  <Col md='4' className='col-example'>\n                    <p>Number of Ratings:</p>\n                    <NumericInput min={0} className=\"form-control\"/>\n                  </Col>\n                  <Col md='4' className='filtered-search'>\n                    <Button className='search-button' variant=\"contained\" size ='medium' onClick={sendIt}>\n                      Filtered Search\n                    </Button> \n                  </Col>\n                </Row>\n              </Container>\n            </div>\n        </div>  \n      </div>\n      }\n      {isLoading && <div>Searching...</div> }\n      <ProjectList  items ={tempFilterdItems} repository = {props.repo} word = {props.word}/>\n    </div>\n    \n   \n     \n  \n\n  );\n}\n \nexport default Filter;","import { Col, Container, Form, FormControl, FormGroup, InputGroup, Row } from 'react-bootstrap';\n\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Button } from '@mui/material';\nimport React, { useState } from 'react';\nimport Home from './controllers/HomeController';\nimport Filter from './views/Filter';\n\n\n//test comment\n\nfunction App() {\n\n  //hook for search word\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [tempSearchWord, setTempSearchWord] = useState(\"\");\n  const [repository, setRepository] = useState(\"TYPE\");\n  const [repo, setRepo] = useState(\"\");\n  const [openFilter, setOpenFilter] = useState(false);\n\n  const [filterWatch, setFilterWatch] = useState(false);\n\n  //search bar title\n  const header = \"Simulink Search\"\n  const handleSelect=(event)=>{\n    //every time repository changes everything has to change\n    //document.getElementsByTagName(\"input\")[0].value = \"\";\n\n    setRepository(event);\n   \n  }\n\n\n  //\n  const setter = () =>{\n    setOpenFilter(false);\n  }\n\n  const searchBarSetter = () =>{\n    setSearchWord(searchWord);\n    //setOpenFilter(false);\n  }\n  \n  //this function handles the input form\n\n  const handleChange=()=>{\n    var id=document.getElementsByTagName(\"input\")[0];\n    setTempSearchWord(id.value);\n  }\n\n  const handleClick=()=>{\n\n    setOpenFilter(false);//closes filter modal\n\n    setSearchWord(tempSearchWord);\n    setRepo(repository);\n  }\n\n  const handleFilter=()=>{\n\n    setSearchWord(\"\");//will clear search bar when filter button is clicked\n    setOpenFilter(true);//opens filter modal\n    setFilterWatch(true);\n\n\n  }\n\n  ///onClick for for x button, set everything to null \n\n  //search bar implemented in App.js so it persists on page, could be done with component\n  //home route returns regular search bar\n  //filter switches to the filtering page\n  /*Table headers must be set to 20%*/\n  /*Give bottom margin to tables mapped in regular search*/\n \n  return (\n    <Container className=\"App\">\n      <h2>{header}</h2>\n      <Row className=\"search\">\n        <Col md = {1}>\n\n          <DropdownButton id=\"dropdown-item-button\" style={{marginBottom : '5%'}} title={repository} onSelect={handleSelect}>\n\n            <Dropdown.Item eventKey = \"GitHub\" as=\"button\" >GitHub</Dropdown.Item>\n            <Dropdown.Item eventKey = \"MATC\" as=\"button\">MATC</Dropdown.Item>\n            <Dropdown.Item eventKey = \"All\" as=\"button\">All</Dropdown.Item>\n          </DropdownButton>\n        </Col>\n        <Col md = {10} className='repositories'>\n          <Form>\n            <FormGroup>\n              <InputGroup>\n                <FormControl placeholder='Search here...' onChange={handleChange} md = {8}/>\n                  <Button md = {1} className='search-button' variant=\"contained\" size ='medium' onClick={handleClick} >\n                  Search\n                  </Button>\n                  <Button  md = {1} className='filter-button' variant=\"contained\" size ='medium'   onClick = {handleFilter}>\n                    Filter\n                  </Button>\n              </InputGroup> \n            </FormGroup>\n          </Form>\n        </Col>\n      </Row>\n      <Row className=\"items\">\n        <Col className=\"item-list\" md='12'> \n            <Home string = {searchWord} string2 ={repo} string3= {repository}/>\n\n            {openFilter === true && <Filter  filterState = {filterWatch} closeFilter = {setter} word = {searchWord} repo = {repository} setSearch = {searchBarSetter}/>}\n\n        </Col>   \n      </Row>\n    </Container>  \n  );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}