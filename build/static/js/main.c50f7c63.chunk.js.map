{"version":3,"sources":["views/ProjectList.js","controllers/useFetch.js","controllers/HomeController.js","views/Filter.js","App.js","index.js"],"names":["ProjectList","props","useState","visible","setVisible","data","items","database","repository","Visible","className","slice","map","item","key","id","Table","author_name","owner_name","href","mathworks_url","project_url","title","repo_name","author_uri","homepage_url","Date","published","created_at","toLocaleDateString","updated","updated_at","align","colSpan","Description","summary","no_of_ratings","watchers_count","language","forks_count","downloads","no_of_comments","stargazers_count","length","style","color","onClick","useFetch","word","datas","setItems","isLoading","setLoading","url","url2","useEffect","a","console","log","response","fetch","headers","Accept","json","res1","data1","res2","data2","res","error","alert","Home","string","string2","filteredItems","filter","p","toLowerCase","match","content","NumericInput","input","Filter","closeFilter","forksCount","setValue","openIssuesCount","setValue1","starGazersCount","setValue2","watchersCount","setValue3","toString","Button","variant","size","Container","Row","Col","md","DropdownButton","Dropdown","ItemText","Item","as","min","onChange","value","App","searchWord","setSearchWord","tempSearchWord","setTempSearchWord","setRepository","repo","setRepo","openFilter","setOpenFilter","marginBottom","onSelect","event","eventKey","Form","FormGroup","InputGroup","FormControl","placeholder","document","getElementsByTagName","string3","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c50f7c63.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { useState} from \"react\";\r\n\r\n//list of projects is generated using the prop received  \r\nconst ProjectList = (props) => {\r\n  const[visible, setVisible] = useState(10);\r\n  \r\n  const data = props.items;\r\n  const database = props.repository;\r\n  //console.log(database);\r\n  let Visible = visible;\r\n\r\n  const loadMOre= () =>{\r\n    \r\n    setVisible(Visible + 25);\r\n\r\n  }\r\n\r\n  //console.log(data.length);\r\n \r\n  return ( \r\n    <div className=\"search-items\">\r\n      <div className=\"list\">\r\n        { \r\n          data.slice(0, visible).map((item)=>{     \r\n            return (\r\n              /* all columns set to 20% total width */\r\n              <div className=\"preview\" key ={item.id}> \r\n                <Table  className=\"table\">\r\n                  <thead>\r\n                    <tr className=\"headers\">\r\n                      <th className=\"header\">Owner</th>\r\n                      <th className=\"header\">Repository</th>\r\n                      <th className=\"header\">Owner Page</th>\r\n                      <th className=\"header\">Created On</th>\r\n                      <th className=\"header\">Updated On</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"name\">{item.author_name || item.owner_name}</td>\r\n                      <td  className=\"url\">\r\n                        <a  href={item.mathworks_url || item.project_url}>\r\n                        {item.title || item.repo_name}\r\n                        </a>\r\n                      </td>\r\n                      <td  className=\"url\">\r\n                        {((item.author_uri || item.homepage_url) !== null) &&\r\n                        ((item.author_uri || item.homepage_url) !== \"\") &&\r\n                          <a  href={item.author_uri || item.homepage_url}>\r\n                          take me there\r\n                          </a>\r\n                        }\r\n                      </td>\r\n                      <td  className=\"date-created\">{new Date(item.published || item.created_at).toLocaleDateString()}</td>\r\n                      <td  className=\"date-updated\">{new Date(item.updated || item.updated_at).toLocaleDateString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"description\" align=\"center\" colSpan={'12'} >\r\n                        { database === 'GitHub' && \r\n                          <p>{item.Description}</p>\r\n                        }\r\n                        { database === 'MATC' && \r\n                          <p>{item.summary}</p>\r\n                        }\r\n                        { database === 'All' && \r\n                          <p>{item.summary || item.Description}</p>\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                    <tr className=\"attributes\">\r\n                      <td>\r\n                        <h1 className=\"headers\">watchers count : {item.no_of_ratings || item.watchers_count}</h1>\r\n                      </td>\r\n                      <td>\r\n                        <h1 className=\"headers\">language : {item.language || \"Matlab\"}</h1>\r\n                      </td>\r\n                      <td>\r\n                        <h1 className=\"headers\">forks count : {item.forks_count || item.downloads}</h1>\r\n                      </td>\r\n                      <td>\r\n                        <h1 className=\"headers\">license : {\"GNU\"}</h1>\r\n                      </td>\r\n                      <td>\r\n                        <h1 className=\"headers\">stargazers count : {item.no_of_comments || item.stargazers_count}</h1>\r\n                      </td>\r\n                    </tr>\r\n                    {/* <tr>\r\n                      <th className=\"header\">Model Files: </th>\r\n                      <td className=\"model-files\" align=\"left\" colSpan= {'12'}>\r\n                        <p>{item.model_files}</p>\r\n                      </td>\r\n                    </tr> */}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        <div className=\"page-count\">\r\n          {visible < data.length && ( \r\n            <button className='loader' style={{ color: '#345beb'}} onClick={loadMOre}>Next 10</button>\r\n          )}\r\n        </div>  \r\n      </div>\r\n    </div>  \r\n  );\r\n}\r\n \r\nexport default ProjectList;\r\n\r\n","import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useFetch = (repository, word) =>{\r\n  \r\n  const [datas, setItems] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const url = 'http://localhost:8000/items';\r\n  const url2 = 'http://localhost:9000/items2';\r\n  \r\n  //will execute function when data is updated\r\n  useEffect(async() => {\r\n    console.log(repository);\r\n    setLoading(false);\r\n    if(repository === 'GitHub')\r\n    {\r\n      setLoading(true);\r\n      const response = fetch(url,{\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      });\r\n      \r\n      const data = await response.json();\r\n      setItems(data);\r\n      setLoading(false);\r\n    }\r\n    else if(repository === 'MATC')\r\n    {\r\n      setLoading(true);\r\n      const response = await fetch(url2,{\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      });\r\n      \r\n      const data = await response.json();\r\n      setItems(data);\r\n      setLoading(false);\r\n    }\r\n    else if (repository === 'All')\r\n    {\r\n      try{//both json arrays are merged here\r\n        var res1 = await fetch(url);\r\n        var data1 = await res1.json();\r\n        var res2 = await fetch(url2);\r\n        var data2 = await res2.json();\r\n        var res = [...data1,...data2];\r\n        setItems(res);\r\n      }catch(e){\r\n          console.error(e)\r\n      }finally{\r\n        //setLoading(false)\r\n      }\r\n    }else if(repository === 'TYPE') \r\n    {\r\n      alert('Select repository type to begin search...');\r\n    }\r\n  }, [word, repository]);\r\n  \r\n  \r\n  return{datas, isLoading}\r\n\r\n}\r\n  \r\n\r\nexport default useFetch;","import React from \"react\";\r\nimport ProjectList from \"../views/ProjectList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n//Hosts the lists of projects matching search word\r\nconst Home = (props) => {\r\n\r\n  const word =props.string;\r\n  const database = props.string2;\r\n  \r\n  //will display a load effect between searches\r\n  const {isLoading, datas} = useFetch(database, word);\r\n  const filteredItems = datas.filter( p =>{\r\n    if(word === \"\")\r\n    {\r\n      return \"\";    \r\n    }\r\n    else if(p.Description)\r\n    {\r\n      return p.Description.toLowerCase().match(word.toLowerCase());\r\n    } else if(p.content)\r\n    {\r\n      return p.content.toLowerCase().match(word.toLowerCase());\r\n    }\r\n    return \"\";\r\n  });\r\n  \r\n  //the prop \"word\" comes from search bar and will be \r\n  //the filtering parameter used for project filtering\r\n  return ( \r\n    <div className=\"home\">\r\n      {isLoading && <div>Searching...</div> } \r\n      <ProjectList  items ={filteredItems} repository = {database} word = {word}/>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Home ;","import React from \"react\";\r\nimport Home from \"../controllers/HomeController\";\r\nimport{ useState } from \"react\";\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport DatePicker from 'react-date-picker';\r\nimport useFetch from \"../controllers/useFetch\";\r\nimport { Button } from '@mui/material';\r\nimport NumericInput from 'react-numeric-input';\r\nNumericInput.style.input.color = 'blue';\r\n\r\n//will contain the login for searching with different field parameters\r\nconst Filter = ({closeFilter}) => {\r\n\r\n\r\n  const {isLoading, datas} = useFetch('http://localhost:8000/items')\r\n  //const {data} = useFetch('http://localhost:8000/items');\r\n  //default value for each select drop-down menu\r\n  //all this login can be combine into one component\r\n  //to minimize code lenght, the cod below was created to\r\n  //get a version of the filter page working\r\n\r\n  //hook for selected value\r\n  //updates return value for each drop down menu\r\n  const [forksCount, setValue] = useState(0);\r\n  const [openIssuesCount, setValue1] = useState(0);\r\n  const [starGazersCount, setValue2] = useState(0);\r\n  const [watchersCount, setValue3] = useState(0);\r\n\r\n  //these functions handle the what happens when new value is selected from menu\r\n\r\n  function Change (value) {\r\n    setValue(value);\r\n    console.log(forksCount);\r\n  };\r\n  function Change2 (value) {\r\n    setValue1(value);\r\n    console.log(openIssuesCount);\r\n  };\r\n  function Change3 (value) {\r\n    setValue2(value);\r\n    console.log(starGazersCount);\r\n  };\r\n  function Change4 (value) {\r\n    setValue3(value);\r\n    console.log(watchersCount);\r\n  };\r\n  //console.log(data);\r\n  const filteredItems = datas.filter( p =>{\r\n    \r\n    if(forksCount === 0)\r\n    {\r\n      return 0;\r\n    }\r\n    else \r\n    {                          \r\n      console.log(toString(p.forks_count).match(toString(forksCount)));\r\n      return toString(p.forks_count).match(toString(forksCount));\r\n    }\r\n  });\r\n  \r\n  const sendIt =()=>{\r\n\r\n    return(\r\n      <div className=\"filter\">\r\n        {isLoading && <div>Searching...</div> } \r\n        <Home  items ={filteredItems} />\r\n      </div>\r\n    );\r\n  }\r\n  //logic for displaying the drowp-down menus\r\n  //will be updated to fit mock up display\r\n  //all fields below will be combined into a single data request\r\n  return ( \r\n   \r\n    /*********************filter modal**********************/\r\n    <div className=\"modalBackground\">\r\n      <div className=\"modalContainer\">\r\n          <div className=\"title\">\r\n            <div className=\"closeButton\">\r\n              <Button className='searchButton' variant=\"contained\" size ='small' onClick = {()=>(\r\n                closeFilter(false))}>X</Button>\r\n            </div>\r\n            <div className=\"titleValue\">\r\n              <h1>Filtered Search</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"body\">\r\n            <Container>\r\n              <Row className=\"date\">\r\n                <Col md='4' className='col-example'>\r\n                  <p>Created At</p>\r\n                  <DatePicker   />\r\n                </Col>\r\n                <Col md='4' className='col-example'>\r\n                  <p>Updated At</p>\r\n                  <DatePicker   />\r\n                </Col>\r\n                <Col md='4' className='col-example'>\r\n                  <p>Language</p>\r\n                  <DropdownButton id=\"dropdown-item-button\" title=\"Select Language\">\r\n                    <Dropdown.ItemText></Dropdown.ItemText>\r\n                    <Dropdown.Item as=\"button\">C++</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\">Java</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\">C#</Dropdown.Item>\r\n                  </DropdownButton>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md='4' className='col-example'>\r\n                  <p>Forks Count</p>\r\n                  <NumericInput min={0} className=\"form-control\"onChange={Change}/> \r\n                </Col>\r\n                <Col md='4' className='col-example'>\r\n                  <p>Open Issues Count</p>\r\n                  <NumericInput min={0} className=\"form-control\"onChange={Change2}/>\r\n                </Col>\r\n                <Col md='4' className='col-example'>\r\n                  <p>License</p>\r\n                  <DropdownButton id=\"dropdown-item-button\" title=\"Select License\">\r\n                    <Dropdown.ItemText></Dropdown.ItemText>\r\n                    <Dropdown.Item as=\"button\">MIT</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\">GNU</Dropdown.Item>\r\n                    <Dropdown.Item as=\"button\">BSD</Dropdown.Item>\r\n                  </DropdownButton>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md='4' className='col-example'>\r\n                  <p>Stargazers Count</p>\r\n                  <NumericInput min={0} className=\"form-control\" onChange={Change3}/>\r\n                </Col>\r\n                <Col md='4' className='col-example'>\r\n                  <p>Number of Comments</p>\r\n                  <NumericInput min={0} className=\"form-control\" />\r\n                </Col>\r\n                <Col md='4' className='filtered-search'>\r\n                  <Button className='search-button' variant=\"contained\" size ='medium' onClick={sendIt}>\r\n                    Filtered Search\r\n                  </Button> \r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col md='4' className='col-example'>\r\n                  <p>Watchers Count</p>\r\n                  <NumericInput min={0} className=\"form-control\"onChange={Change4}/>\r\n                </Col>\r\n                <Col md='4' className='searchFilter'>\r\n                  <p>Number of Ratings</p>\r\n                  <NumericInput min={0} className=\"form-control\"/>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Filter;","import { Col, Container, Form, FormControl, FormGroup, InputGroup, Row } from 'react-bootstrap';\r\n\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Button } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport Home from './controllers/HomeController';\r\nimport Filter from './views/Filter';\r\n\r\n\r\n//test comment\r\n\r\nfunction App() {\r\n\r\n  //hook for search word\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [tempSearchWord, setTempSearchWord] = useState(\"\");\r\n  const [repository, setRepository] = useState(\"TYPE\");\r\n  const [repo, setRepo] = useState(\"\");\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n  //search bar title\r\n  const header = \"Simulink Search\"\r\n  const handleSelect=(event)=>{\r\n    //every time repository changes everything has to change\r\n    //document.getElementsByTagName(\"input\")[0].value = \"\";\r\n    \r\n    setRepository(event);\r\n   \r\n  }\r\n\r\n  const setter = () =>{\r\n    \r\n    setOpenFilter(false);\r\n    \r\n  }\r\n  \r\n  const handleChange=()=>{\r\n    var id=document.getElementsByTagName(\"input\")[0];\r\n    setTempSearchWord(id.value);\r\n  }\r\n\r\n  const handleClick=()=>{\r\n    setOpenFilter(false);\r\n    setSearchWord(tempSearchWord);\r\n    setRepo(repository);\r\n  }\r\n\r\n  const handleFilter=()=>{\r\n    setSearchWord(\"\");\r\n    setOpenFilter(true);\r\n  }\r\n\r\n  ///onClick for for x button, set everything to null \r\n\r\n  //search bar implemented in App.js so it persists on page, could be done with component\r\n  //home route returns regular search bar\r\n  //filter switches to the filtering page\r\n  /*Table headers must be set to 20%*/\r\n  /*Give bottom margin to tables mapped in regular search*/\r\n \r\n  return (\r\n    <Container className=\"App\">\r\n      <h2>{header}</h2>\r\n      <Row className=\"search\">\r\n        <Col md = {1}>\r\n          <DropdownButton  id=\"dropdown-item-button\" style={{marginBottom : '5%'}} title={repository} onSelect={handleSelect}>\r\n            <Dropdown.Item eventKey = \"GitHub\" as=\"button\" >GitHub</Dropdown.Item>\r\n            <Dropdown.Item eventKey = \"MATC\" as=\"button\">MATC</Dropdown.Item>\r\n            <Dropdown.Item eventKey = \"All\" as=\"button\">All</Dropdown.Item>\r\n          </DropdownButton>\r\n        </Col>\r\n        <Col md = {10} className='repositories'>\r\n          <Form>\r\n            <FormGroup>\r\n              <InputGroup>\r\n                <FormControl placeholder='Search here...' onChange={handleChange} md = {8}/>\r\n                  <Button md = {1} className='search-button' variant=\"contained\" size ='medium' onClick={handleClick} >\r\n                  Search\r\n                  </Button>\r\n                  <Button  md = {1} className='filter-button' variant=\"contained\" size ='medium'   onClick = {handleFilter}>\r\n                    Filter\r\n                  </Button>\r\n              </InputGroup> \r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"items\">\r\n        <Col className=\"item-list\" md='12'> \r\n            <Home string = {searchWord} string2 ={repo} string3= {repository}/>\r\n            {openFilter === true && <Filter closeFilter = {setter}/>}\r\n        </Col>   \r\n      </Row>\r\n    </Container>  \r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}