"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmptyArrayRule = exports.HasIdAttributeRule = exports.HasObjectKeyRule = exports.IsObjectRule = exports.ValidationRule = void 0;
var ruleevent_1 = require("./ruleevent");
var requestSchema = __importStar(require("./requestschema.json"));
var ajv_1 = __importDefault(require("ajv"));
var ValidationRule = /** @class */ (function () {
    function ValidationRule(jsonObject) {
        this.jsonObject = {};
        this.ruleEvents = new Array();
        this.events = new Array();
        this.jsonObject = jsonObject;
    }
    ValidationRule.prototype.executeValidation = function () {
        var ruleEventList = new ruleevent_1.RuleEventList();
        var result = this.validate();
        ruleEventList.events = ruleEventList.events.concat(result);
        ruleEventList.validationRule = this.constructor.name;
        return ruleEventList;
    };
    return ValidationRule;
}());
exports.ValidationRule = ValidationRule;
var IsObjectRule = /** @class */ (function (_super) {
    __extends(IsObjectRule, _super);
    function IsObjectRule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    IsObjectRule.prototype.validate = function () {
        var ruleSeverity = ruleevent_1.RuleResultSeverity.OK;
        var message = '';
        try {
            if (this.jsonObject &&
                typeof this.jsonObject === 'object' &&
                this.jsonObject.constructor !== Object) {
                ruleSeverity = ruleevent_1.RuleResultSeverity.ALERT;
                message = 'root level of json content must be a json object';
            }
        }
        catch (e) {
            ruleSeverity = ruleevent_1.RuleResultSeverity.ALERT;
            message = e.message;
        }
        this.ruleEvents.push(new ruleevent_1.RuleEvent(ruleSeverity, message));
        return this.ruleEvents;
    };
    return IsObjectRule;
}(ValidationRule));
exports.IsObjectRule = IsObjectRule;
var HasObjectKeyRule = /** @class */ (function (_super) {
    __extends(HasObjectKeyRule, _super);
    function HasObjectKeyRule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HasObjectKeyRule.prototype.validate = function () {
        var ruleSeverity = ruleevent_1.RuleResultSeverity.OK;
        var message = '';
        try {
            if (this.jsonObject && typeof this.jsonObject === 'object') {
                if (Object.keys(this.jsonObject).length === 0) {
                    ruleSeverity = ruleevent_1.RuleResultSeverity.ALERT;
                    message = 'no root properties found - no endpoints can be created';
                }
            }
        }
        catch (e) {
            ruleSeverity = ruleevent_1.RuleResultSeverity.ALERT;
            message = e.message;
        }
        this.ruleEvents.push(new ruleevent_1.RuleEvent(ruleSeverity, message));
        return this.ruleEvents;
    };
    return HasObjectKeyRule;
}(ValidationRule));
exports.HasObjectKeyRule = HasObjectKeyRule;
var HasIdAttributeRule = /** @class */ (function (_super) {
    __extends(HasIdAttributeRule, _super);
    function HasIdAttributeRule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    HasIdAttributeRule.prototype.validate = function () {
        var _this = this;
        try {
            if (this.jsonObject &&
                typeof this.jsonObject === 'object' &&
                Object.keys(this.jsonObject).length !== 0) {
                Object.keys(this.jsonObject).forEach(function (item) {
                    var ruleSeverity = ruleevent_1.RuleResultSeverity.OK;
                    var message = '';
                    if (Array.isArray(_this.jsonObject[item]) &&
                        _this.jsonObject[item].length > 0 &&
                        !_this.jsonObject[item][0].hasOwnProperty('id')) {
                        (ruleSeverity = ruleevent_1.RuleResultSeverity.WARNING),
                            (message =
                                item +
                                    ' is missing id attribute - not possible to do POST, PUT, PATCH');
                    }
                    _this.ruleEvents.push(new ruleevent_1.RuleEvent(ruleSeverity, message));
                });
            }
        }
        catch (e) {
            var ruleSeverityError = ruleevent_1.RuleResultSeverity.ALERT;
            var messageError = e.message;
            this.ruleEvents.push(new ruleevent_1.RuleEvent(ruleSeverityError, messageError));
        }
        return this.ruleEvents;
    };
    return HasIdAttributeRule;
}(ValidationRule));
exports.HasIdAttributeRule = HasIdAttributeRule;
var EmptyArrayRule = /** @class */ (function (_super) {
    __extends(EmptyArrayRule, _super);
    function EmptyArrayRule() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EmptyArrayRule.prototype.validate = function () {
        try {
            if (this.jsonObject) {
                var ajvObject = new ajv_1.default();
                var result = ajvObject.validate(requestSchema, this.jsonObject);
                if (!result) {
                    for (var _i = 0, _a = ajvObject.errors; _i < _a.length; _i++) {
                        var error = _a[_i];
                        if (error.message.includes('should NOT have fewer than 1 items')) {
                            var ruleSeverityError = ruleevent_1.RuleResultSeverity.ALERT;
                            var messageError = 'empty array found at path: ' +
                                error.dataPath +
                                ' - please deactivate Swagger/GraphQL interface (--no-swagger) or add at least one item in the array';
                            this.ruleEvents.push(new ruleevent_1.RuleEvent(ruleSeverityError, messageError));
                        }
                    }
                }
            }
        }
        catch (e) {
            var ruleSeverityError = ruleevent_1.RuleResultSeverity.ALERT;
            var messageError = e.message;
            this.ruleEvents.push(new ruleevent_1.RuleEvent(ruleSeverityError, messageError));
        }
        return this.ruleEvents;
    };
    return EmptyArrayRule;
}(ValidationRule));
exports.EmptyArrayRule = EmptyArrayRule;
