{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\simulink-search\\\\src\\\\App.js\";\nimport { Col, Container, Form, FormControl, FormGroup, InputGroup, Row } from 'react-bootstrap';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { Button } from '@mui/material';\nimport React, { useState } from 'react';\nimport Home from './controllers/HomeController';\nimport Filter from './views/Filter'; //test comment\n\nfunction App() {\n  //hook for search word\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [tempSearchWord, setTempSearchWord] = useState(\"\");\n  const [repository, setRepository] = useState(\"TYPE\");\n  const [repo, setRepo] = useState(\"\");\n  const [openFilter, setOpenFilter] = useState(false); //search bar title\n\n  const header = \"Simulink Search\";\n\n  const handleSelect = event => {\n    //every time repository changes everything has to change\n    //document.getElementsByTagName(\"input\")[0].value = \"\";\n    setRepository(event);\n  };\n\n  const setter = () => {\n    setOpenFilter(false);\n  };\n\n  const handleChange = () => {\n    var id = document.getElementsByTagName(\"input\")[0];\n    setTempSearchWord(id.value);\n  };\n\n  const handleClick = () => {\n    setOpenFilter(false);\n    setSearchWord(tempSearchWord);\n    setRepo(repository);\n  };\n\n  const handleFilter = () => {\n    setSearchWord(\"\");\n    setOpenFilter(true);\n  }; ///onClick for for x button, set everything to null \n  //search bar implemented in App.js so it persists on page, could be done with component\n  //home route returns regular search bar\n  //filter switches to the filtering page\n\n  /*Table headers must be set to 20%*/\n\n  /*Give bottom margin to tables mapped in regular search*/\n\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, header), /*#__PURE__*/React.createElement(Row, {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownButton, {\n    id: \"dropdown-item-button\",\n    style: {\n      marginBottom: '5%'\n    },\n    title: repository,\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"GitHub\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"GitHub\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"MATC\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, \"MATC\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"All\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"All\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 10,\n    className: \"repositories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"Search here...\",\n    onChange: handleChange,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    md: 1,\n    className: \"search-button\",\n    variant: \"contained\",\n    size: \"medium\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n    md: 1,\n    className: \"filter-button\",\n    variant: \"contained\",\n    size: \"medium\",\n    onClick: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, \"Filter\")))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"item-list\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    string: searchWord,\n    string2: repo,\n    string3: repository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), openFilter === true && /*#__PURE__*/React.createElement(Filter, {\n    closeFilter: setter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Desktop/simulink-tool/SampleSLProject/simulink-search/src/App.js"],"names":["Col","Container","Form","FormControl","FormGroup","InputGroup","Row","DropdownButton","Dropdown","Button","React","useState","Home","Filter","App","searchWord","setSearchWord","tempSearchWord","setTempSearchWord","repository","setRepository","repo","setRepo","openFilter","setOpenFilter","header","handleSelect","event","setter","handleChange","id","document","getElementsByTagName","value","handleClick","handleFilter","marginBottom"],"mappings":"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","sourcesContent":["import { Col, Container, Form, FormControl, FormGroup, InputGroup, Row } from 'react-bootstrap';\r\n\r\nimport DropdownButton from 'react-bootstrap/DropdownButton';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nimport { Button } from '@mui/material';\r\nimport React, { useState } from 'react';\r\nimport Home from './controllers/HomeController';\r\nimport Filter from './views/Filter';\r\n\r\n\r\n//test comment\r\n\r\nfunction App() {\r\n\r\n  //hook for search word\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [tempSearchWord, setTempSearchWord] = useState(\"\");\r\n  const [repository, setRepository] = useState(\"TYPE\");\r\n  const [repo, setRepo] = useState(\"\");\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n  //search bar title\r\n  const header = \"Simulink Search\"\r\n  const handleSelect=(event)=>{\r\n    //every time repository changes everything has to change\r\n    //document.getElementsByTagName(\"input\")[0].value = \"\";\r\n    \r\n    setRepository(event);\r\n   \r\n  }\r\n\r\n  const setter = () =>{\r\n    \r\n    setOpenFilter(false);\r\n    \r\n  }\r\n  \r\n  const handleChange=()=>{\r\n    var id=document.getElementsByTagName(\"input\")[0];\r\n    setTempSearchWord(id.value);\r\n  }\r\n\r\n  const handleClick=()=>{\r\n    setOpenFilter(false);\r\n    setSearchWord(tempSearchWord);\r\n    setRepo(repository);\r\n  }\r\n\r\n  const handleFilter=()=>{\r\n    setSearchWord(\"\");\r\n    setOpenFilter(true);\r\n  }\r\n\r\n  ///onClick for for x button, set everything to null \r\n\r\n  //search bar implemented in App.js so it persists on page, could be done with component\r\n  //home route returns regular search bar\r\n  //filter switches to the filtering page\r\n  /*Table headers must be set to 20%*/\r\n  /*Give bottom margin to tables mapped in regular search*/\r\n \r\n  return (\r\n    <Container className=\"App\">\r\n      <h2>{header}</h2>\r\n      <Row className=\"search\">\r\n        <Col md = {1}>\r\n          <DropdownButton  id=\"dropdown-item-button\" style={{marginBottom : '5%'}} title={repository} onSelect={handleSelect}>\r\n            <Dropdown.Item eventKey = \"GitHub\" as=\"button\" >GitHub</Dropdown.Item>\r\n            <Dropdown.Item eventKey = \"MATC\" as=\"button\">MATC</Dropdown.Item>\r\n            <Dropdown.Item eventKey = \"All\" as=\"button\">All</Dropdown.Item>\r\n          </DropdownButton>\r\n        </Col>\r\n        <Col md = {10} className='repositories'>\r\n          <Form>\r\n            <FormGroup>\r\n              <InputGroup>\r\n                <FormControl placeholder='Search here...' onChange={handleChange} md = {8}/>\r\n                  <Button md = {1} className='search-button' variant=\"contained\" size ='medium' onClick={handleClick} >\r\n                  Search\r\n                  </Button>\r\n                  <Button  md = {1} className='filter-button' variant=\"contained\" size ='medium'   onClick = {handleFilter}>\r\n                    Filter\r\n                  </Button>\r\n              </InputGroup> \r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"items\">\r\n        <Col className=\"item-list\" md='12'> \r\n            <Home string = {searchWord} string2 ={repo} string3= {repository}/>\r\n            {openFilter === true && <Filter closeFilter = {setter}/>}\r\n        </Col>   \r\n      </Row>\r\n    </Container>  \r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}