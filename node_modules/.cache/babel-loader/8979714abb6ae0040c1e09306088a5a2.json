{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\src\\\\views\\\\ProjectList.js\";\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { useState } from \"react\";\nimport { Button } from \"@mui/material\"; //list of projects is generated using the prop received\n\nconst ProjectList = props => {\n  const [visible, setVisible] = useState(10);\n  const data = props.items;\n  const database = props.repository; //console.log(database);\n\n  let Visible = visible;\n\n  const loadMOre = () => {\n    setVisible(Visible + 25);\n  }; //console.log(data.length);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, data.slice(0, visible).map(item => {\n    return (\n      /*#__PURE__*/\n\n      /* all columns set to 20% total width */\n      React.createElement(\"div\", {\n        className: \"preview\",\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }\n      }, \"Owner\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, \"Repository\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }, \"Owner Page\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      }, \"Created On\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }\n      }, \"Updated On\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, item.author_name || item.owner_name), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"url\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: item.mathworks_url || item.project_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 23\n        }\n      }, item.title || item.repo_name)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"url\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, (item.author_uri || item.homepage_url) !== null && (item.author_uri || item.homepage_url) !== \"\" && /*#__PURE__*/React.createElement(\"a\", {\n        href: item.author_uri || item.homepage_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 27\n        }\n      }, \"take me there\")), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"date-created\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }\n      }, new Date(item.published || item.created_at).toLocaleDateString()), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"date-updated\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, new Date(item.updated || item.updated_at).toLocaleDateString())), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"description\",\n        align: \"center\",\n        colSpan: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }\n      }, database === \"GitHub\" && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 49\n        }\n      }, item.Description), database === \"MATC\" && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 47\n        }\n      }, item.summary), database === \"All\" && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, item.summary || item.Description))), /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"attributes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 23\n        }\n      }, \"watchers count :\", \" \", item.no_of_ratings || item.watchers_count)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 23\n        }\n      }, \"language : \", item.language || \"Matlab\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 23\n        }\n      }, \"forks count : \", item.forks_count || item.downloads)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 23\n        }\n      }, \"license : \", \"GNU\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 23\n        }\n      }, \"stargazers count :\", \" \", item.no_of_comments || item.stargazers_count))))))\n    );\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, visible < data.length && /*#__PURE__*/React.createElement(Button, {\n    className: \"loader\",\n    variant: \"contained\",\n    size: \"medium\",\n    onClick: loadMOre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Next 10\"))));\n};\n\nexport default ProjectList;","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Desktop/simulink-tool/SampleSLProject/src/views/ProjectList.js"],"names":["React","Table","useState","Button","ProjectList","props","visible","setVisible","data","items","database","repository","Visible","loadMOre","slice","map","item","id","author_name","owner_name","mathworks_url","project_url","title","repo_name","author_uri","homepage_url","Date","published","created_at","toLocaleDateString","updated","updated_at","Description","summary","no_of_ratings","watchers_count","language","forks_count","downloads","no_of_comments","stargazers_count","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { useState } from \"react\";\r\nimport { Button } from \"@mui/material\";\r\n\r\n//list of projects is generated using the prop received\r\nconst ProjectList = (props) => {\r\n  const [visible, setVisible] = useState(10);\r\n\r\n  const data = props.items;\r\n  const database = props.repository;\r\n  //console.log(database);\r\n  let Visible = visible;\r\n\r\n  const loadMOre = () => {\r\n    setVisible(Visible + 25);\r\n  };\r\n\r\n  //console.log(data.length);\r\n\r\n  return (\r\n    <div className=\"search-items\">\r\n      <div className=\"list\">\r\n        {data.slice(0, visible).map((item) => {\r\n          return (\r\n            /* all columns set to 20% total width */\r\n            <div className=\"preview\" key={item.id}>\r\n              <Table className=\"table\">\r\n                <thead>\r\n                  <tr className=\"headers\">\r\n                    <th className=\"header\">Owner</th>\r\n                    <th className=\"header\">Repository</th>\r\n                    <th className=\"header\">Owner Page</th>\r\n                    <th className=\"header\">Created On</th>\r\n                    <th className=\"header\">Updated On</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr>\r\n                    <td className=\"name\">\r\n                      {item.author_name || item.owner_name}\r\n                    </td>\r\n                    <td className=\"url\">\r\n                      <a href={item.mathworks_url || item.project_url}>\r\n                        {item.title || item.repo_name}\r\n                      </a>\r\n                    </td>\r\n                    <td className=\"url\">\r\n                      {(item.author_uri || item.homepage_url) !== null &&\r\n                        (item.author_uri || item.homepage_url) !== \"\" && (\r\n                          <a href={item.author_uri || item.homepage_url}>\r\n                            take me there\r\n                          </a>\r\n                        )}\r\n                    </td>\r\n                    <td className=\"date-created\">\r\n                      {new Date(\r\n                        item.published || item.created_at\r\n                      ).toLocaleDateString()}\r\n                    </td>\r\n                    <td className=\"date-updated\">\r\n                      {new Date(\r\n                        item.updated || item.updated_at\r\n                      ).toLocaleDateString()}\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td className=\"description\" align=\"center\" colSpan={\"12\"}>\r\n                      {database === \"GitHub\" && <p>{item.Description}</p>}\r\n                      {database === \"MATC\" && <p>{item.summary}</p>}\r\n                      {database === \"All\" && (\r\n                        <p>{item.summary || item.Description}</p>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                  <tr className=\"attributes\">\r\n                    <td>\r\n                      <h1 className=\"headers\">\r\n                        watchers count :{\" \"}\r\n                        {item.no_of_ratings || item.watchers_count}\r\n                      </h1>\r\n                    </td>\r\n                    <td>\r\n                      <h1 className=\"headers\">\r\n                        language : {item.language || \"Matlab\"}\r\n                      </h1>\r\n                    </td>\r\n                    <td>\r\n                      <h1 className=\"headers\">\r\n                        forks count : {item.forks_count || item.downloads}\r\n                      </h1>\r\n                    </td>\r\n                    <td>\r\n                      <h1 className=\"headers\">license : {\"GNU\"}</h1>\r\n                    </td>\r\n                    <td>\r\n                      <h1 className=\"headers\">\r\n                        stargazers count :{\" \"}\r\n                        {item.no_of_comments || item.stargazers_count}\r\n                      </h1>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </Table>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"page-count\">\r\n          {visible < data.length && (\r\n            <Button\r\n              className=\"loader\"\r\n              variant=\"contained\"\r\n              size=\"medium\"\r\n              onClick={loadMOre}\r\n            >\r\n              Next 10\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectList;\r\n"]},"metadata":{},"sourceType":"module"}