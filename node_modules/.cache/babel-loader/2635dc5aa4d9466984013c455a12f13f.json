{"ast":null,"code":"export function shouldThrowError(suspense, _useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary.apply(void 0, params);\n  } // Allow useErrorBoundary to override suspense's throwing behavior\n\n\n  if (typeof _useErrorBoundary === 'boolean') return _useErrorBoundary; // If suspense is enabled default to throwing errors\n\n  return !!suspense;\n}","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Desktop/simulink-tool/SampleSLProject/node_modules/react-query/es/react/utils.js"],"names":["shouldThrowError","suspense","_useErrorBoundary","params","apply"],"mappings":"AAAA,OAAO,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,iBAApC,EAAuDC,MAAvD,EAA+D;AACpE;AACA,MAAI,OAAOD,iBAAP,KAA6B,UAAjC,EAA6C;AAC3C,WAAOA,iBAAiB,CAACE,KAAlB,CAAwB,KAAK,CAA7B,EAAgCD,MAAhC,CAAP;AACD,GAJmE,CAIlE;;;AAGF,MAAI,OAAOD,iBAAP,KAA6B,SAAjC,EAA4C,OAAOA,iBAAP,CAPwB,CAOE;;AAEtE,SAAO,CAAC,CAACD,QAAT;AACD","sourcesContent":["export function shouldThrowError(suspense, _useErrorBoundary, params) {\n  // Allow useErrorBoundary function to override throwing behavior on a per-error basis\n  if (typeof _useErrorBoundary === 'function') {\n    return _useErrorBoundary.apply(void 0, params);\n  } // Allow useErrorBoundary to override suspense's throwing behavior\n\n\n  if (typeof _useErrorBoundary === 'boolean') return _useErrorBoundary; // If suspense is enabled default to throwing errors\n\n  return !!suspense;\n}"]},"metadata":{},"sourceType":"module"}