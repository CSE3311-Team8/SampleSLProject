{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\src\\\\App.js\";\nimport { Col, Container, Form, FormControl, FormGroup, InputGroup, Row } from \"react-bootstrap\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { Button } from \"@mui/material\";\nimport Home from \"./controllers/HomeController\";\nimport Filter from \"./views/Filter\";\nimport { QueryClientProvider, QueryClient, useQuery } from \"react-query\";\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport React, { useState, useEffect } from \"react\";\nimport ProjectList from \"./views/ProjectList\"; //test comment\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  //hook for search word\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [tempSearchWord, setTempSearchWord] = useState(\"\");\n  const [repository, setRepository] = useState(\"TYPE\");\n  const [repo, setRepo] = useState(\"\");\n  const [openFilter, setOpenFilter] = useState(false);\n  const [data, setData] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const pageLimit = 10;\n\n  const fetchProjects = async function () {\n    let page = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    const res = await fetch(`http://localhost:8000/items?q=${searchWord}_page=${page}&_limit=${pageLimit}`);\n    return res.json();\n  }; //data is the returned res.json() from fetchProjects()\n  //status is the status of the function\n\n\n  function Projects() {\n    const [page, setPage] = useState(1);\n    const {\n      data,\n      status\n    } = useQuery([\"paginatedProjects\", page], () => fetchProjects(page), {\n      keepPreviousData: false\n    });\n    setData(data);\n  }\n\n  const [filterWatch, setFilterWatch] = useState(false); //search bar title\n\n  const header = \"Simulink Search\";\n\n  const handleSelect = event => {\n    //every time repository changes everything has to change\n    //document.getElementsByTagName(\"input\")[0].value = \"\";\n    setRepository(event);\n  }; //\n\n\n  const setter = () => {\n    setOpenFilter(false);\n  };\n\n  const searchBarSetter = () => {\n    setSearchWord(searchWord); //setOpenFilter(false);\n  }; //this function handles the input form\n\n\n  const handleChange = () => {\n    var id = document.getElementsByTagName(\"input\")[0];\n    setTempSearchWord(id.value);\n  };\n\n  const handleClick = () => {\n    setOpenFilter(false); //closes filter modal\n\n    setSearchWord(tempSearchWord);\n    setRepo(repository);\n  };\n\n  const handleFilter = () => {\n    setSearchWord(\"\"); //will clear search bar when filter button is clicked\n\n    setOpenFilter(true); //opens filter modal\n\n    setFilterWatch(true);\n  }; ///onClick for for x button, set everything to null\n  //search bar implemented in App.js so it persists on page, could be done with component\n  //home route returns regular search bar\n  //filter switches to the filtering page\n\n  /*Table headers must be set to 20%*/\n\n  /*Give bottom margin to tables mapped in regular search*/\n\n\n  return /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: queryClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, header), /*#__PURE__*/React.createElement(Row, {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownButton, {\n    id: \"dropdown-item-button\",\n    style: {\n      marginBottom: \"5%\"\n    },\n    title: repository,\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"GitHub\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"GitHub\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"MATC\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"MATC\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"All\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"All\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 10,\n    className: \"repositories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"Search here...\",\n    onChange: handleChange,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    md: 1,\n    className: \"search-button\",\n    variant: \"contained\",\n    size: \"medium\",\n    onClick: () => {\n      Projects();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n    md: 1,\n    className: \"filter-button\",\n    variant: \"contained\",\n    size: \"medium\",\n    onClick: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"Filter\")))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"item-list\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ProjectList, {\n    items: data,\n    repository: repo,\n    word: searchWord,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }), openFilter === true && /*#__PURE__*/React.createElement(Filter, {\n    filterState: filterWatch,\n    closeFilter: setter,\n    word: searchWord,\n    repo: repository,\n    setSearch: searchBarSetter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(ReactQueryDevtools, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Desktop/simulink-tool/SampleSLProject/src/App.js"],"names":["Col","Container","Form","FormControl","FormGroup","InputGroup","Row","DropdownButton","Dropdown","Button","Home","Filter","QueryClientProvider","QueryClient","useQuery","ReactQueryDevtools","React","useState","useEffect","ProjectList","queryClient","App","searchWord","setSearchWord","tempSearchWord","setTempSearchWord","repository","setRepository","repo","setRepo","openFilter","setOpenFilter","data","setData","isLoading","setLoading","pageLimit","fetchProjects","page","res","fetch","json","Projects","setPage","status","keepPreviousData","filterWatch","setFilterWatch","header","handleSelect","event","setter","searchBarSetter","handleChange","id","document","getElementsByTagName","value","handleClick","handleFilter","marginBottom"],"mappings":"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","sourcesContent":["import {\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  InputGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { Button } from \"@mui/material\";\r\nimport Home from \"./controllers/HomeController\";\r\nimport Filter from \"./views/Filter\";\r\nimport { QueryClientProvider, QueryClient, useQuery } from \"react-query\";\r\nimport{ReactQueryDevtools} from 'react-query/devtools';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ProjectList from \"./views/ProjectList\";\r\n\r\n//test comment\r\nconst queryClient = new QueryClient();\r\nfunction App() {\r\n\r\n  //hook for search word\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [tempSearchWord, setTempSearchWord] = useState(\"\");\r\n  const [repository, setRepository] = useState(\"TYPE\");\r\n  const [repo, setRepo] = useState(\"\");\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  const pageLimit = 10;\r\n\r\n  const fetchProjects = async (page = 1) => {\r\n    const res = await fetch(\r\n      `http://localhost:8000/items?q=${searchWord}_page=${page}&_limit=${pageLimit}`\r\n    );\r\n    return res.json();\r\n  };\r\n  //data is the returned res.json() from fetchProjects()\r\n  //status is the status of the function\r\n\r\n  function Projects() {\r\n    const [page, setPage] = useState(1);\r\n    const { data, status } = useQuery([\"paginatedProjects\", page], () => fetchProjects(page),{\r\n      keepPreviousData: false\r\n    });\r\n    setData(data);\r\n  }\r\n\r\n  const [filterWatch, setFilterWatch] = useState(false);\r\n\r\n  //search bar title\r\n  const header = \"Simulink Search\";\r\n  const handleSelect = (event) => {\r\n    //every time repository changes everything has to change\r\n    //document.getElementsByTagName(\"input\")[0].value = \"\";\r\n\r\n    setRepository(event);\r\n  };\r\n\r\n  //\r\n  const setter = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  const searchBarSetter = () => {\r\n    setSearchWord(searchWord);\r\n    //setOpenFilter(false);\r\n  };\r\n\r\n  //this function handles the input form\r\n\r\n  const handleChange = () => {\r\n    var id = document.getElementsByTagName(\"input\")[0];\r\n    setTempSearchWord(id.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpenFilter(false); //closes filter modal\r\n\r\n    setSearchWord(tempSearchWord);\r\n    setRepo(repository);\r\n  };\r\n\r\n  const handleFilter = () => {\r\n    setSearchWord(\"\"); //will clear search bar when filter button is clicked\r\n    setOpenFilter(true); //opens filter modal\r\n    setFilterWatch(true);\r\n  };\r\n\r\n  ///onClick for for x button, set everything to null\r\n\r\n  //search bar implemented in App.js so it persists on page, could be done with component\r\n  //home route returns regular search bar\r\n  //filter switches to the filtering page\r\n  /*Table headers must be set to 20%*/\r\n  /*Give bottom margin to tables mapped in regular search*/\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n    <Container className=\"App\">\r\n      <h2>{header}</h2>\r\n      <Row className=\"search\">\r\n        <Col md={1}>\r\n          <DropdownButton\r\n            id=\"dropdown-item-button\"\r\n            style={{ marginBottom: \"5%\" }}\r\n            title={repository}\r\n            onSelect={handleSelect}\r\n          >\r\n            <Dropdown.Item eventKey=\"GitHub\" as=\"button\">\r\n              GitHub\r\n            </Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"MATC\" as=\"button\">\r\n              MATC\r\n            </Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"All\" as=\"button\">\r\n              All\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </Col>\r\n        <Col md={10} className=\"repositories\">\r\n          <Form>\r\n            <FormGroup>\r\n              <InputGroup>\r\n                <FormControl\r\n                  placeholder=\"Search here...\"\r\n                  onChange={handleChange}\r\n                  md={8}\r\n                />\r\n                <Button\r\n                  md={1}\r\n                  className=\"search-button\"\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  onClick={(()=>{Projects()})}\r\n                >\r\n                  Search\r\n                </Button>\r\n                <Button\r\n                  md={1}\r\n                  className=\"filter-button\"\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  onClick={handleFilter}\r\n                >\r\n                  Filter\r\n                </Button>\r\n              </InputGroup>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"items\">\r\n        <Col className=\"item-list\" md=\"12\">\r\n        <ProjectList items={data} repository={repo} word={searchWord} />\r\n\r\n          {openFilter === true && (\r\n            <Filter\r\n              filterState={filterWatch}\r\n              closeFilter={setter}\r\n              word={searchWord}\r\n              repo={repository}\r\n              setSearch={searchBarSetter}\r\n            />\r\n          )}\r\n        </Col>\r\n        <ReactQueryDevtools/>\r\n      </Row>\r\n    </Container>\r\n    \r\n    </QueryClientProvider>\r\n    \r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}