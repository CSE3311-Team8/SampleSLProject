{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\simulink-search\\\\src\\\\views\\\\ProjectList.js\";\nimport React from \"react\";\nimport Table from \"react-bootstrap/Table\";\nimport { useState } from \"react\"; //list of projects is generated using the prop received  \n\nconst ProjectList = props => {\n  const [visible, setVisible] = useState(10);\n  const data = props.items;\n  const database = props.repository; //console.log(database);\n\n  let Visible = visible;\n\n  const loadMOre = () => {\n    setVisible(Visible + 25);\n  }; //console.log(data.length);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, data.slice(0, visible).map(item => {\n    return (\n      /*#__PURE__*/\n\n      /* all columns set to 20% total width */\n      React.createElement(\"div\", {\n        className: \"preview\",\n        key: item.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: \"table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"thead\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 23\n        }\n      }, \"Owner\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 23\n        }\n      }, \"Repository\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 23\n        }\n      }, \"Owner Page\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }\n      }, \"Created On\"), /*#__PURE__*/React.createElement(\"th\", {\n        className: \"header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }\n      }, \"Updated On\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }\n      }, item.author_name || item.owner_name), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"url\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"a\", {\n        href: item.mathworks_url || item.project_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }\n      }, item.title || item.repo_name)), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"url\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 23\n        }\n      }, (item.author_uri || item.homepage_url) !== null && (item.author_uri || item.homepage_url) !== \"\" && /*#__PURE__*/React.createElement(\"a\", {\n        href: item.author_uri || item.homepage_url,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 27\n        }\n      }, \"take me there\")), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"date-created\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 23\n        }\n      }, new Date(item.published || item.created_at).toLocaleDateString()), /*#__PURE__*/React.createElement(\"td\", {\n        className: \"date-updated\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 23\n        }\n      }, new Date(item.updated || item.updated_at).toLocaleDateString())), /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        className: \"description\",\n        align: \"center\",\n        colSpan: '12',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }\n      }, database === 'GitHub' && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 27\n        }\n      }, item.Description), database === 'MATC' && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 27\n        }\n      }, item.summary), database === 'All' && /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 27\n        }\n      }, item.summary || item.Description))), /*#__PURE__*/React.createElement(\"tr\", {\n        className: \"attributes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }\n      }, \"watchers count : \", item.no_of_ratings || item.watchers_count)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }, \"language : \", item.language || \"Matlab\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }\n      }, \"forks count : \", item.forks_count || item.downloads)), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }\n      }, \"license : \", \"GNU\")), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"headers\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }\n      }, \"stargazers count : \", item.no_of_comments || item.stargazers_count))))))\n    );\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-count\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, visible < data.length && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"loader\",\n    style: {\n      color: '#345beb'\n    },\n    onClick: loadMOre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, \"Next 10\"))));\n};\n\nexport default ProjectList;","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Desktop/simulink-tool/SampleSLProject/simulink-search/src/views/ProjectList.js"],"names":["React","Table","useState","ProjectList","props","visible","setVisible","data","items","database","repository","Visible","loadMOre","slice","map","item","id","author_name","owner_name","mathworks_url","project_url","title","repo_name","author_uri","homepage_url","Date","published","created_at","toLocaleDateString","updated","updated_at","Description","summary","no_of_ratings","watchers_count","language","forks_count","downloads","no_of_comments","stargazers_count","length","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport { useState} from \"react\";\r\n\r\n//list of projects is generated using the prop received  \r\nconst ProjectList = (props) => {\r\n  const[visible, setVisible] = useState(10);\r\n  \r\n  const data = props.items;\r\n  const database = props.repository;\r\n  //console.log(database);\r\n  let Visible = visible;\r\n\r\n  const loadMOre= () =>{\r\n    \r\n    setVisible(Visible + 25);\r\n\r\n  }\r\n\r\n  //console.log(data.length);\r\n \r\n  return ( \r\n    <div className=\"search-items\">\r\n      <div className=\"list\">\r\n        { \r\n          data.slice(0, visible).map((item)=>{     \r\n            return (\r\n              /* all columns set to 20% total width */\r\n              <div className=\"preview\" key ={item.id}> \r\n                <Table  className=\"table\">\r\n                  <thead>\r\n                    <tr className=\"headers\">\r\n                      <th className=\"header\">Owner</th>\r\n                      <th className=\"header\">Repository</th>\r\n                      <th className=\"header\">Owner Page</th>\r\n                      <th className=\"header\">Created On</th>\r\n                      <th className=\"header\">Updated On</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <tr>\r\n                      <td className=\"name\">{item.author_name || item.owner_name}</td>\r\n                      <td  className=\"url\">\r\n                        <a  href={item.mathworks_url || item.project_url}>\r\n                        {item.title || item.repo_name}\r\n                        </a>\r\n                      </td>\r\n                      <td  className=\"url\">\r\n                        {((item.author_uri || item.homepage_url) !== null) &&\r\n                        ((item.author_uri || item.homepage_url) !== \"\") &&\r\n                          <a  href={item.author_uri || item.homepage_url}>\r\n                          take me there\r\n                          </a>\r\n                        }\r\n                      </td>\r\n                      <td  className=\"date-created\">{new Date(item.published || item.created_at).toLocaleDateString()}</td>\r\n                      <td  className=\"date-updated\">{new Date(item.updated || item.updated_at).toLocaleDateString()}</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td className=\"description\" align=\"center\" colSpan={'12'} >\r\n                        { database === 'GitHub' && \r\n                          <p>{item.Description}</p>\r\n                        }\r\n                        { database === 'MATC' && \r\n                          <p>{item.summary}</p>\r\n                        }\r\n                        { database === 'All' && \r\n                          <p>{item.summary || item.Description}</p>\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                    <tr className=\"attributes\">\r\n                      <td>\r\n                        <h1 className=\"headers\">watchers count : {item.no_of_ratings || item.watchers_count}</h1>\r\n                      </td>\r\n                      <td>\r\n                        <h1 className=\"headers\">language : {item.language || \"Matlab\"}</h1>\r\n                      </td>\r\n                      <td>\r\n                        <h1 className=\"headers\">forks count : {item.forks_count || item.downloads}</h1>\r\n                      </td>\r\n                      <td>\r\n                        <h1 className=\"headers\">license : {\"GNU\"}</h1>\r\n                      </td>\r\n                      <td>\r\n                        <h1 className=\"headers\">stargazers count : {item.no_of_comments || item.stargazers_count}</h1>\r\n                      </td>\r\n                    </tr>\r\n                    {/* <tr>\r\n                      <th className=\"header\">Model Files: </th>\r\n                      <td className=\"model-files\" align=\"left\" colSpan= {'12'}>\r\n                        <p>{item.model_files}</p>\r\n                      </td>\r\n                    </tr> */}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n        <div className=\"page-count\">\r\n          {visible < data.length && ( \r\n            <button className='loader' style={{ color: '#345beb'}} onClick={loadMOre}>Next 10</button>\r\n          )}\r\n        </div>  \r\n      </div>\r\n    </div>  \r\n  );\r\n}\r\n \r\nexport default ProjectList;\r\n\r\n"]},"metadata":{},"sourceType":"module"}