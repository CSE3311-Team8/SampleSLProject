{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatShortMonth = exports.formatMonth = void 0;\nexports.getFormatter = getFormatter;\n\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar formatterCache = new Map();\n\nfunction getFormatter(options) {\n  return function (locale, date) {\n    var localeWithDefault = locale || (0, _getUserLocale[\"default\"])();\n\n    if (!formatterCache.has(localeWithDefault)) {\n      formatterCache.set(localeWithDefault, new Map());\n    }\n\n    var formatterCacheLocale = formatterCache.get(localeWithDefault);\n\n    if (!formatterCacheLocale.has(options)) {\n      formatterCacheLocale.set(options, new Intl.DateTimeFormat(localeWithDefault, options).format);\n    }\n\n    return formatterCacheLocale.get(options)(date);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatShortMonthOptions = {\n  month: 'short'\n};\nvar formatMonth = getSafeFormatter(formatMonthOptions);\nexports.formatMonth = formatMonth;\nvar formatShortMonth = getSafeFormatter(formatShortMonthOptions);\nexports.formatShortMonth = formatShortMonth;","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Desktop/simulink-tool/SampleSLProject/simulink-search/node_modules/react-date-picker/dist/shared/dateFormatter.js"],"names":["Object","defineProperty","exports","value","formatShortMonth","formatMonth","getFormatter","_getUserLocale","_interopRequireDefault","require","obj","__esModule","formatterCache","Map","options","locale","date","localeWithDefault","has","set","formatterCacheLocale","get","Intl","DateTimeFormat","format","toSafeHour","safeDate","Date","setHours","getSafeFormatter","formatMonthOptions","month","formatShortMonthOptions"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,WAAR,GAAsB,KAAK,CAAtD;AACAH,OAAO,CAACI,YAAR,GAAuBA,YAAvB;;AAEA,IAAIC,cAAc,GAAGC,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAA3C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAE,eAAWA;AAAb,GAArC;AAA0D;;AAEjG,IAAIE,cAAc,GAAG,IAAIC,GAAJ,EAArB;;AAEA,SAASP,YAAT,CAAsBQ,OAAtB,EAA+B;AAC7B,SAAO,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,QAAIC,iBAAiB,GAAGF,MAAM,IAAI,CAAC,GAAGR,cAAc,CAAC,SAAD,CAAlB,GAAlC;;AAEA,QAAI,CAACK,cAAc,CAACM,GAAf,CAAmBD,iBAAnB,CAAL,EAA4C;AAC1CL,MAAAA,cAAc,CAACO,GAAf,CAAmBF,iBAAnB,EAAsC,IAAIJ,GAAJ,EAAtC;AACD;;AAED,QAAIO,oBAAoB,GAAGR,cAAc,CAACS,GAAf,CAAmBJ,iBAAnB,CAA3B;;AAEA,QAAI,CAACG,oBAAoB,CAACF,GAArB,CAAyBJ,OAAzB,CAAL,EAAwC;AACtCM,MAAAA,oBAAoB,CAACD,GAArB,CAAyBL,OAAzB,EAAkC,IAAIQ,IAAI,CAACC,cAAT,CAAwBN,iBAAxB,EAA2CH,OAA3C,EAAoDU,MAAtF;AACD;;AAED,WAAOJ,oBAAoB,CAACC,GAArB,CAAyBP,OAAzB,EAAkCE,IAAlC,CAAP;AACD,GAdD;AAeD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SAASS,UAAT,CAAoBT,IAApB,EAA0B;AACxB,MAAIU,QAAQ,GAAG,IAAIC,IAAJ,CAASX,IAAT,CAAf;AACA,SAAO,IAAIW,IAAJ,CAASD,QAAQ,CAACE,QAAT,CAAkB,EAAlB,CAAT,CAAP;AACD;;AAED,SAASC,gBAAT,CAA0Bf,OAA1B,EAAmC;AACjC,SAAO,UAAUC,MAAV,EAAkBC,IAAlB,EAAwB;AAC7B,WAAOV,YAAY,CAACQ,OAAD,CAAZ,CAAsBC,MAAtB,EAA8BU,UAAU,CAACT,IAAD,CAAxC,CAAP;AACD,GAFD;AAGD;;AAED,IAAIc,kBAAkB,GAAG;AACvBC,EAAAA,KAAK,EAAE;AADgB,CAAzB;AAGA,IAAIC,uBAAuB,GAAG;AAC5BD,EAAAA,KAAK,EAAE;AADqB,CAA9B;AAGA,IAAI1B,WAAW,GAAGwB,gBAAgB,CAACC,kBAAD,CAAlC;AACA5B,OAAO,CAACG,WAAR,GAAsBA,WAAtB;AACA,IAAID,gBAAgB,GAAGyB,gBAAgB,CAACG,uBAAD,CAAvC;AACA9B,OAAO,CAACE,gBAAR,GAA2BA,gBAA3B","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatShortMonth = exports.formatMonth = void 0;\nexports.getFormatter = getFormatter;\n\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar formatterCache = new Map();\n\nfunction getFormatter(options) {\n  return function (locale, date) {\n    var localeWithDefault = locale || (0, _getUserLocale[\"default\"])();\n\n    if (!formatterCache.has(localeWithDefault)) {\n      formatterCache.set(localeWithDefault, new Map());\n    }\n\n    var formatterCacheLocale = formatterCache.get(localeWithDefault);\n\n    if (!formatterCacheLocale.has(options)) {\n      formatterCacheLocale.set(options, new Intl.DateTimeFormat(localeWithDefault, options).format);\n    }\n\n    return formatterCacheLocale.get(options)(date);\n  };\n}\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nfunction toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n}\n\nfunction getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n}\n\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatShortMonthOptions = {\n  month: 'short'\n};\nvar formatMonth = getSafeFormatter(formatMonthOptions);\nexports.formatMonth = formatMonth;\nvar formatShortMonth = getSafeFormatter(formatShortMonthOptions);\nexports.formatShortMonth = formatShortMonth;"]},"metadata":{},"sourceType":"script"}