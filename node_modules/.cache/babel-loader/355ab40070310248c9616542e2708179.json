{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\src\\\\controllers\\\\HomeController.js\";\nimport React from \"react\";\nimport ProjectList from \"../views/ProjectList\";\nimport useFetch from \"./useFetch\"; //Hosts the lists of projects matching search word\n\nconst Home = props => {\n  const word = props.string;\n  const database = props.string2; //will display a load effect between searches\n\n  const {\n    isLoading,\n    datas\n  } = useFetch(database, word);\n  const filteredItems = datas.filter(p => {\n    if (word === \"\") {\n      return \"\";\n    } else if (p.Description) {\n      return p.Description.toLowerCase().match(word.toLowerCase());\n    } else if (p.content) {\n      return p.content.toLowerCase().match(word.toLowerCase());\n    }\n\n    return \"\";\n  }); //the prop \"word\" comes from search bar and will be \n  //the filtering parameter used for project filtering\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(ProjectList, {\n    items: filteredItems,\n    repository: database,\n    word: word,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Home;","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Desktop/simulink-tool/SampleSLProject/src/controllers/HomeController.js"],"names":["React","ProjectList","useFetch","Home","props","word","string","database","string2","isLoading","datas","filteredItems","filter","p","Description","toLowerCase","match","content"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB,C,CAIA;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AAEtB,QAAMC,IAAI,GAAED,KAAK,CAACE,MAAlB;AACA,QAAMC,QAAQ,GAAGH,KAAK,CAACI,OAAvB,CAHsB,CAKtB;;AACA,QAAM;AAACC,IAAAA,SAAD;AAAYC,IAAAA;AAAZ,MAAqBR,QAAQ,CAACK,QAAD,EAAWF,IAAX,CAAnC;AACA,QAAMM,aAAa,GAAGD,KAAK,CAACE,MAAN,CAAcC,CAAC,IAAG;AACtC,QAAGR,IAAI,KAAK,EAAZ,EACA;AACE,aAAO,EAAP;AACD,KAHD,MAIK,IAAGQ,CAAC,CAACC,WAAL,EACL;AACE,aAAOD,CAAC,CAACC,WAAF,CAAcC,WAAd,GAA4BC,KAA5B,CAAkCX,IAAI,CAACU,WAAL,EAAlC,CAAP;AACD,KAHI,MAGE,IAAGF,CAAC,CAACI,OAAL,EACP;AACE,aAAOJ,CAAC,CAACI,OAAF,CAAUF,WAAV,GAAwBC,KAAxB,CAA8BX,IAAI,CAACU,WAAL,EAA9B,CAAP;AACD;;AACD,WAAO,EAAP;AACD,GAbqB,CAAtB,CAPsB,CAsBtB;AACA;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEGN,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFhB,eAIE,oBAAC,WAAD;AAAc,IAAA,KAAK,EAAGE,aAAtB;AAAqC,IAAA,UAAU,EAAIJ,QAAnD;AAA6D,IAAA,IAAI,EAAIF,IAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF;AAQD,CAhCD;;AAkCA,eAAeF,IAAf","sourcesContent":["import React from \"react\";\r\nimport ProjectList from \"../views/ProjectList\";\r\nimport useFetch from \"./useFetch\";\r\n\r\n\r\n\r\n//Hosts the lists of projects matching search word\r\nconst Home = (props) => {\r\n\r\n  const word =props.string;\r\n  const database = props.string2;\r\n  \r\n  //will display a load effect between searches\r\n  const {isLoading, datas} = useFetch(database, word);\r\n  const filteredItems = datas.filter( p =>{\r\n    if(word === \"\")\r\n    {\r\n      return \"\";    \r\n    }\r\n    else if(p.Description)\r\n    {\r\n      return p.Description.toLowerCase().match(word.toLowerCase());\r\n    } else if(p.content)\r\n    {\r\n      return p.content.toLowerCase().match(word.toLowerCase());\r\n    }\r\n    return \"\";\r\n  });\r\n  \r\n  //the prop \"word\" comes from search bar and will be \r\n  //the filtering parameter used for project filtering\r\n  return ( \r\n    <div className=\"home\">\r\n\r\n      {isLoading && <div>Loading...</div> } \r\n\r\n      <ProjectList  items ={filteredItems} repository = {database} word = {word}/>\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Home ;"]},"metadata":{},"sourceType":"module"}