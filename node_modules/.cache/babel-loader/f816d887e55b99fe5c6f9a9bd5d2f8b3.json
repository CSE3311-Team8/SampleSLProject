{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\simulink-search\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _toConsumableArray from\"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\simulink-search\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\simulink-search\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\simulink-search\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useState}from\"react\";import{useEffect}from\"react\";var useFetch=function useFetch(repository,word){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),datas=_useState2[0],setItems=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setLoading=_useState4[1];var url='http://localhost:8000/items';var url2='http://localhost:9000/items2';//will execute function when data is updated\nuseEffect(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data,_response,_data,res1,data1,res2,data2,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log(repository);setLoading(false);if(!(repository==='GitHub')){_context.next=12;break;}setLoading(true);response=fetch(url,{headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"}});_context.next=7;return response.json();case 7:data=_context.sent;setItems(data);setLoading(false);_context.next=50;break;case 12:if(!(repository==='MATC')){_context.next=24;break;}setLoading(true);_context.next=16;return fetch(url2,{headers:{\"Content-Type\":\"application/json\",Accept:\"application/json\"}});case 16:_response=_context.sent;_context.next=19;return _response.json();case 19:_data=_context.sent;setItems(_data);setLoading(false);_context.next=50;break;case 24:if(!(repository==='All')){_context.next=49;break;}_context.prev=25;_context.next=28;return fetch(url);case 28:res1=_context.sent;_context.next=31;return res1.json();case 31:data1=_context.sent;_context.next=34;return fetch(url2);case 34:res2=_context.sent;_context.next=37;return res2.json();case 37:data2=_context.sent;res=[].concat(_toConsumableArray(data1),_toConsumableArray(data2));setItems(res);_context.next=45;break;case 42:_context.prev=42;_context.t0=_context[\"catch\"](25);console.error(_context.t0);case 45:_context.prev=45;return _context.finish(45);case 47:_context.next=50;break;case 49:if(repository==='TYPE'){alert('Select repository type to begin search...');}case 50:case\"end\":return _context.stop();}}},_callee,null,[[25,42,45,47]]);})),[word,repository]);return{datas:datas,isLoading:isLoading};};export default useFetch;","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Desktop/simulink-tool/SampleSLProject/simulink-search/src/controllers/useFetch.js"],"names":["useState","useEffect","useFetch","repository","word","datas","setItems","isLoading","setLoading","url","url2","console","log","response","fetch","headers","Accept","json","data","res1","data1","res2","data2","res","error","alert"],"mappings":"q0BAAA,OAASA,QAAT,KAAyB,OAAzB,CACA,OAASC,SAAT,KAA0B,OAA1B,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,UAAD,CAAaC,IAAb,CAAqB,CAEpC,cAA0BJ,QAAQ,CAAC,EAAD,CAAlC,wCAAOK,KAAP,eAAcC,QAAd,eACA,eAAgCN,QAAQ,CAAC,KAAD,CAAxC,yCAAOO,SAAP,eAAkBC,UAAlB,eACA,GAAMC,CAAAA,GAAG,CAAG,6BAAZ,CACA,GAAMC,CAAAA,IAAI,CAAG,8BAAb,CAEA;AACAT,SAAS,sEAAC,+LACRU,OAAO,CAACC,GAAR,CAAYT,UAAZ,EACAK,UAAU,CAAC,KAAD,CAAV,CAFQ,KAGLL,UAAU,GAAK,QAHV,2BAKNK,UAAU,CAAC,IAAD,CAAV,CACMK,QANA,CAMWC,KAAK,CAACL,GAAD,CAAK,CACzBM,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,MAAM,CAAE,kBAFD,CADgB,CAAL,CANhB,uBAaaH,CAAAA,QAAQ,CAACI,IAAT,EAbb,QAaAC,IAbA,eAcNZ,QAAQ,CAACY,IAAD,CAAR,CACAV,UAAU,CAAC,KAAD,CAAV,CAfM,oCAiBAL,UAAU,GAAK,MAjBf,2BAmBNK,UAAU,CAAC,IAAD,CAAV,CAnBM,uBAoBiBM,CAAAA,KAAK,CAACJ,IAAD,CAAM,CAChCK,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,MAAM,CAAE,kBAFD,CADuB,CAAN,CApBtB,SAoBAH,SApBA,sCA2BaA,CAAAA,SAAQ,CAACI,IAAT,EA3Bb,SA2BAC,KA3BA,eA4BNZ,QAAQ,CAACY,KAAD,CAAR,CACAV,UAAU,CAAC,KAAD,CAAV,CA7BM,oCA+BCL,UAAU,GAAK,KA/BhB,mEAkCaW,CAAAA,KAAK,CAACL,GAAD,CAlClB,SAkCAU,IAlCA,sCAmCcA,CAAAA,IAAI,CAACF,IAAL,EAnCd,SAmCAG,KAnCA,sCAoCaN,CAAAA,KAAK,CAACJ,IAAD,CApClB,SAoCAW,IApCA,sCAqCcA,CAAAA,IAAI,CAACJ,IAAL,EArCd,SAqCAK,KArCA,eAsCAC,GAtCA,8BAsCUH,KAtCV,qBAsCmBE,KAtCnB,GAuCJhB,QAAQ,CAACiB,GAAD,CAAR,CAvCI,kFAyCFZ,OAAO,CAACa,KAAR,cAzCE,2FA6CF,GAAGrB,UAAU,GAAK,MAAlB,CACN,CACEsB,KAAK,CAAC,2CAAD,CAAL,CACD,CAhDO,4EAAD,GAiDN,CAACrB,IAAD,CAAOD,UAAP,CAjDM,CAAT,CAoDA,MAAM,CAACE,KAAK,CAALA,KAAD,CAAQE,SAAS,CAATA,SAAR,CAAN,CAED,CA9DD,CAiEA,cAAeL,CAAAA,QAAf","sourcesContent":["import { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst useFetch = (repository, word) =>{\r\n  \r\n  const [datas, setItems] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const url = 'http://localhost:8000/items';\r\n  const url2 = 'http://localhost:9000/items2';\r\n  \r\n  //will execute function when data is updated\r\n  useEffect(async() => {\r\n    console.log(repository);\r\n    setLoading(false);\r\n    if(repository === 'GitHub')\r\n    {\r\n      setLoading(true);\r\n      const response = fetch(url,{\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      });\r\n      \r\n      const data = await response.json();\r\n      setItems(data);\r\n      setLoading(false);\r\n    }\r\n    else if(repository === 'MATC')\r\n    {\r\n      setLoading(true);\r\n      const response = await fetch(url2,{\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Accept: \"application/json\"\r\n        }\r\n      });\r\n      \r\n      const data = await response.json();\r\n      setItems(data);\r\n      setLoading(false);\r\n    }\r\n    else if (repository === 'All')\r\n    {\r\n      try{//both json arrays are merged here\r\n        var res1 = await fetch(url);\r\n        var data1 = await res1.json();\r\n        var res2 = await fetch(url2);\r\n        var data2 = await res2.json();\r\n        var res = [...data1,...data2];\r\n        setItems(res);\r\n      }catch(e){\r\n          console.error(e)\r\n      }finally{\r\n        //setLoading(false)\r\n      }\r\n    }else if(repository === 'TYPE') \r\n    {\r\n      alert('Select repository type to begin search...');\r\n    }\r\n  }, [word, repository]);\r\n  \r\n  \r\n  return{datas, isLoading}\r\n\r\n}\r\n  \r\n\r\nexport default useFetch;"]},"metadata":{},"sourceType":"module"}