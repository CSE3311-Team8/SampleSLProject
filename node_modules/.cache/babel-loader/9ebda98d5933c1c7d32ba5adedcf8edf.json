{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\carlo\\\\OneDrive\\\\Desktop\\\\simulink-tool\\\\SampleSLProject\\\\src\\\\App.js\";\nimport { Col, Container, Form, FormControl, FormGroup, InputGroup, Row } from \"react-bootstrap\";\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\nimport Dropdown from \"react-bootstrap/Dropdown\";\nimport { Button } from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport Home from \"./controllers/HomeController\";\nimport Filter from \"./views/Filter\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevtools } from 'react-query/devtools'; //test comment\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  //hook for search word\n  const [searchWord, setSearchWord] = useState(\"\");\n  const [tempSearchWord, setTempSearchWord] = useState(\"\");\n  const [repository, setRepository] = useState(\"TYPE\");\n  const [repo, setRepo] = useState(\"\");\n  const [openFilter, setOpenFilter] = useState(false);\n  const [filterWatch, setFilterWatch] = useState(false); //search bar title\n\n  const header = \"Simulink Search\";\n\n  const handleSelect = event => {\n    //every time repository changes everything has to change\n    //document.getElementsByTagName(\"input\")[0].value = \"\";\n    setRepository(event);\n  }; //\n\n\n  const setter = () => {\n    setOpenFilter(false);\n  };\n\n  const searchBarSetter = () => {\n    setSearchWord(searchWord); //setOpenFilter(false);\n  }; //this function handles the input form\n\n\n  const handleChange = () => {\n    var id = document.getElementsByTagName(\"input\")[0];\n    setTempSearchWord(id.value);\n  };\n\n  const handleClick = () => {\n    setOpenFilter(false); //closes filter modal\n\n    setSearchWord(tempSearchWord);\n    setRepo(repository);\n  };\n\n  const handleFilter = () => {\n    setSearchWord(\"\"); //will clear search bar when filter button is clicked\n\n    setOpenFilter(true); //opens filter modal\n\n    setFilterWatch(true);\n  }; ///onClick for for x button, set everything to null\n  //search bar implemented in App.js so it persists on page, could be done with component\n  //home route returns regular search bar\n  //filter switches to the filtering page\n\n  /*Table headers must be set to 20%*/\n\n  /*Give bottom margin to tables mapped in regular search*/\n\n\n  return /*#__PURE__*/React.createElement(QueryClientProvider, {\n    client: queryClient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, header), /*#__PURE__*/React.createElement(Row, {\n    className: \"search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DropdownButton, {\n    id: \"dropdown-item-button\",\n    style: {\n      marginBottom: \"5%\"\n    },\n    title: repository,\n    onSelect: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"GitHub\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, \"GitHub\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"MATC\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, \"MATC\"), /*#__PURE__*/React.createElement(Dropdown.Item, {\n    eventKey: \"All\",\n    as: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"All\"))), /*#__PURE__*/React.createElement(Col, {\n    md: 10,\n    className: \"repositories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    placeholder: \"Search here...\",\n    onChange: handleChange,\n    md: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    md: 1,\n    className: \"search-button\",\n    variant: \"contained\",\n    size: \"medium\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, \"Search\"), /*#__PURE__*/React.createElement(Button, {\n    md: 1,\n    className: \"filter-button\",\n    variant: \"contained\",\n    size: \"medium\",\n    onClick: handleFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"Filter\")))))), /*#__PURE__*/React.createElement(Row, {\n    className: \"items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"item-list\",\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Home, {\n    string: searchWord,\n    string2: repo,\n    string3: repository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }), openFilter === true && /*#__PURE__*/React.createElement(Filter, {\n    filterState: filterWatch,\n    closeFilter: setter,\n    word: searchWord,\n    repo: repository,\n    setSearch: searchBarSetter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/carlo/OneDrive/Desktop/simulink-tool/SampleSLProject/src/App.js"],"names":["Col","Container","Form","FormControl","FormGroup","InputGroup","Row","DropdownButton","Dropdown","Button","React","useState","Home","Filter","QueryClientProvider","QueryClient","ReactQueryDevtools","queryClient","App","searchWord","setSearchWord","tempSearchWord","setTempSearchWord","repository","setRepository","repo","setRepo","openFilter","setOpenFilter","filterWatch","setFilterWatch","header","handleSelect","event","setter","searchBarSetter","handleChange","id","document","getElementsByTagName","value","handleClick","handleFilter","marginBottom"],"mappings":"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","sourcesContent":["import {\r\n  Col,\r\n  Container,\r\n  Form,\r\n  FormControl,\r\n  FormGroup,\r\n  InputGroup,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nimport DropdownButton from \"react-bootstrap/DropdownButton\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { Button } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport Home from \"./controllers/HomeController\";\r\nimport Filter from \"./views/Filter\";\r\nimport { QueryClientProvider, QueryClient } from \"react-query\";\r\nimport{ReactQueryDevtools} from 'react-query/devtools';\r\n\r\n//test comment\r\nconst queryClient = new QueryClient();\r\nfunction App() {\r\n\r\n  //hook for search word\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  const [tempSearchWord, setTempSearchWord] = useState(\"\");\r\n  const [repository, setRepository] = useState(\"TYPE\");\r\n  const [repo, setRepo] = useState(\"\");\r\n  const [openFilter, setOpenFilter] = useState(false);\r\n\r\n  const [filterWatch, setFilterWatch] = useState(false);\r\n\r\n  //search bar title\r\n  const header = \"Simulink Search\";\r\n  const handleSelect = (event) => {\r\n    //every time repository changes everything has to change\r\n    //document.getElementsByTagName(\"input\")[0].value = \"\";\r\n\r\n    setRepository(event);\r\n  };\r\n\r\n  //\r\n  const setter = () => {\r\n    setOpenFilter(false);\r\n  };\r\n\r\n  const searchBarSetter = () => {\r\n    setSearchWord(searchWord);\r\n    //setOpenFilter(false);\r\n  };\r\n\r\n  //this function handles the input form\r\n\r\n  const handleChange = () => {\r\n    var id = document.getElementsByTagName(\"input\")[0];\r\n    setTempSearchWord(id.value);\r\n  };\r\n\r\n  const handleClick = () => {\r\n    setOpenFilter(false); //closes filter modal\r\n\r\n    setSearchWord(tempSearchWord);\r\n    setRepo(repository);\r\n  };\r\n\r\n  const handleFilter = () => {\r\n    setSearchWord(\"\"); //will clear search bar when filter button is clicked\r\n    setOpenFilter(true); //opens filter modal\r\n    setFilterWatch(true);\r\n  };\r\n\r\n  ///onClick for for x button, set everything to null\r\n\r\n  //search bar implemented in App.js so it persists on page, could be done with component\r\n  //home route returns regular search bar\r\n  //filter switches to the filtering page\r\n  /*Table headers must be set to 20%*/\r\n  /*Give bottom margin to tables mapped in regular search*/\r\n\r\n  return (\r\n    <QueryClientProvider client={queryClient}>\r\n    <Container className=\"App\">\r\n      <h2>{header}</h2>\r\n      <Row className=\"search\">\r\n        <Col md={1}>\r\n          <DropdownButton\r\n            id=\"dropdown-item-button\"\r\n            style={{ marginBottom: \"5%\" }}\r\n            title={repository}\r\n            onSelect={handleSelect}\r\n          >\r\n            <Dropdown.Item eventKey=\"GitHub\" as=\"button\">\r\n              GitHub\r\n            </Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"MATC\" as=\"button\">\r\n              MATC\r\n            </Dropdown.Item>\r\n            <Dropdown.Item eventKey=\"All\" as=\"button\">\r\n              All\r\n            </Dropdown.Item>\r\n          </DropdownButton>\r\n        </Col>\r\n        <Col md={10} className=\"repositories\">\r\n          <Form>\r\n            <FormGroup>\r\n              <InputGroup>\r\n                <FormControl\r\n                  placeholder=\"Search here...\"\r\n                  onChange={handleChange}\r\n                  md={8}\r\n                />\r\n                <Button\r\n                  md={1}\r\n                  className=\"search-button\"\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  onClick={handleClick}\r\n                >\r\n                  Search\r\n                </Button>\r\n                <Button\r\n                  md={1}\r\n                  className=\"filter-button\"\r\n                  variant=\"contained\"\r\n                  size=\"medium\"\r\n                  onClick={handleFilter}\r\n                >\r\n                  Filter\r\n                </Button>\r\n              </InputGroup>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"items\">\r\n        <Col className=\"item-list\" md=\"12\">\r\n          <Home string={searchWord} string2={repo} string3={repository} />\r\n\r\n          {openFilter === true && (\r\n            <Filter\r\n              filterState={filterWatch}\r\n              closeFilter={setter}\r\n              word={searchWord}\r\n              repo={repository}\r\n              setSearch={searchBarSetter}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n    </QueryClientProvider>\r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}